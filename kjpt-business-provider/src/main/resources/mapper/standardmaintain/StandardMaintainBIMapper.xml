<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pcitc.mapper.standardmaintain.StandardMaintainBIMapper">
  <resultMap id="StandardMaintainBIMap" type="com.pcitc.base.standardmaintain.StandardMaintainBI">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="plan_num" jdbcType="VARCHAR" property="planNum" />
    <result column="plan_chinese_name" jdbcType="VARCHAR" property="planChineseName" />
    <result column="plan_english_name" jdbcType="VARCHAR" property="planEnglishName" />
    <result column="release_year" jdbcType="VARCHAR" property="releaseYear" />
    <result column="standard_type" jdbcType="VARCHAR" property="standardType" />
    <result column="standard_type_text" jdbcType="VARCHAR" property="standardTypeText" />
    <result column="chief_editor_unit" jdbcType="VARCHAR" property="chiefEditorUnit" />
    <result column="chief_editor_unit_text" jdbcType="VARCHAR" property="chiefEditorUnitText" />
    <result column="partake_editor_unit" jdbcType="VARCHAR" property="partakeEditorUnit" />
    <result column="partake_editor_unit_text" jdbcType="VARCHAR" property="partakeEditorUnitText" />
    <result column="level" jdbcType="VARCHAR" property="level" />
    <result column="level_text" jdbcType="VARCHAR" property="levelText" />
    <result column="update_status" jdbcType="VARCHAR" property="updateStatus" />
    <result column="update_status_text" jdbcType="VARCHAR" property="updateStatusText" />
    <result column="file_status" jdbcType="VARCHAR" property="fileStatus" />
    <result column="file_status_text" jdbcType="VARCHAR" property="fileStatusText" />
    <result column="is_publish" jdbcType="VARCHAR" property="isPublish" />
    <result column="is_publish_text" jdbcType="VARCHAR" property="isPublishText" />
    <result column="manage_org" jdbcType="VARCHAR" property="manageOrg" />
    <result column="technical_committee" jdbcType="VARCHAR" property="technicalCommittee" />
    <result column="technical_committee_text" jdbcType="VARCHAR" property="technicalCommitteeText" />
    <result column="putUnder_unit" jdbcType="VARCHAR" property="putUnderUnit" />
    <result column="putUnder_unit_text" jdbcType="VARCHAR" property="putUnderUnitText" />
    <result column="consult_standard" jdbcType="VARCHAR" property="consultStandard" />
    <result column="uniformity_degree" jdbcType="VARCHAR" property="uniformityDegree" />
    <result column="to_replaced_standard" jdbcType="VARCHAR" property="toReplacedStandard" />
    <result column="standard_num" jdbcType="VARCHAR" property="standardNum" />
    <result column="standard_name" jdbcType="VARCHAR" property="standardName" />
    <result column="english_name" jdbcType="VARCHAR" property="englishName" />
    <result column="publish_date" jdbcType="TIMESTAMP" property="publishDate" />
    <result column="effective_date" jdbcType="TIMESTAMP" property="effectiveDate" />
    <result column="is_publish_english_edition" jdbcType="VARCHAR" property="isPublishEnglishEdition" />
    <result column="is_publish_english_edition_text" jdbcType="VARCHAR" property="isPublishEnglishEditionText" />
    <result column="in_research_status" jdbcType="VARCHAR" property="inResearchStatus" />
    <result column="in_research_status_text" jdbcType="VARCHAR" property="inResearchStatusText" />
    <result column="put_under_unit" jdbcType="VARCHAR" property="putUnderUnit" />
    <result column="put_under_unit_text" jdbcType="VARCHAR" property="putUnderUnitText" />
    <result column="replace_standard" jdbcType="VARCHAR" property="replaceStandard" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate"/>
    <result column="update_user" jdbcType="VARCHAR" property="updator"/>
    <result column="deleted" jdbcType="VARCHAR" property="deleted"/>
    <result column="create_user" jdbcType="VARCHAR" property="creator"/>
    <result column="create_unit_id" jdbcType="VARCHAR" property="createUnitId"/>
    <result column="create_unit_name" jdbcType="VARCHAR" property="createUnitName"/>
    <result column="secret_level" jdbcType="VARCHAR" property="secretLevel"/>
    <result column="secret_level_text" jdbcType="VARCHAR" property="secretLevelText"/>
    <result column="knowledge_scope" jdbcType="VARCHAR" property="knowledgeScope"/>
    <result column="knowledge_person" jdbcType="VARCHAR" property="knowledgePerson"/>

    <result column="all_count" jdbcType="VARCHAR" property="allCount"/>
    <result column="research_count" jdbcType="VARCHAR" property="researchCount"/>
    <result column="publish_count" jdbcType="VARCHAR" property="publishCount"/>
  </resultMap>

  <sql id="selectByParam">
    <if test="planNum != null and planNum != '' " >
      and plan_num like CONCAT('%',#{planNum},'%')
    </if>
    <if test="planChineseName != null and planChineseName != '' " >
      and plan_chinese_name like CONCAT('%',#{planChineseName},'%')
    </if>
    <if test="standardNum != null and standardNum != ''" >
      and standard_num like CONCAT('%',#{standardNum},'%')
    </if>
    <if test="standardName != null and standardName != '' ">
      and standard_name like CONCAT('%',#{standardName},'%')
    </if>
    <if test="isPublish != null and isPublish != '' ">
      and is_publish = #{isPublish}
    </if>
    <if test="chiefEditorUnit != null and chiefEditorUnit != '' ">
      and chief_editor_unit like CONCAT('%',#{chiefEditorUnit},'%')
    </if>
    and (secret_level = '0' or (
    secret_level <![CDATA[<=]]> #{userSecretLevel}
    <if test='skipKnowledgeScope=="0"'>
      and FIND_IN_SET(#{userName}, knowledge_scope) &lt; 0
    </if>
    ))

    <if test="childUnitIds != null  and childUnitIds !=''  ">
      AND create_unit_id in
      <foreach item="item"  collection="childUnitIds.split(',')"  open="(" separator="," close=")">
        #{item}
      </foreach>
    </if>
  </sql>



  <select id="getInternalResearchList" parameterType="java.util.Map" resultMap="StandardMaintainBIMap">
    SELECT
    a.num_value as standard_type,
    a.name as standard_type_text,
    IFNULL(x.research_count,0) AS research_count
    FROM
    (
    SELECT num_value,name
    FROM sys_dictionary
    WHERE parent_code = 'ROOT_KJPT_BZWH_BZLX'
    ) a
    LEFT JOIN
    (
    SELECT
    standard_type,
    COUNT( * ) AS research_count
    FROM
    standard_maintain a
    WHERE
    1 = 1
    AND deleted != '1'
    AND is_publish = '1'
    AND create_date <![CDATA[ < ]]> DATE_ADD(curdate(),interval -day(curdate())+1 day)
    <include refid="selectByParam" />
    GROUP BY
    standard_type
    ) x on a.num_value = x.standard_type
    ORDER BY standard_type asc
  </select>


  <select id="getInternalPublishList" parameterType="java.util.Map" resultMap="StandardMaintainBIMap">
    SELECT
    a.num_value as standard_type,
    a.name as standard_type_text,
    IFNULL(x.publish_count,0) AS publish_count
    FROM
    (
    SELECT num_value,name
    FROM sys_dictionary
    WHERE parent_code = 'ROOT_KJPT_BZWH_BZLX'
    ) a
    LEFT JOIN
    (
    SELECT
    standard_type,
    COUNT( * ) AS publish_count
    FROM
    standard_maintain a
    WHERE
    1 = 1
    AND deleted != '1'
    AND is_publish = '0'
    AND publish_date <![CDATA[ < ]]> DATE_ADD(curdate(),interval -day(curdate())+1 day)
    <include refid="selectByParam" />
    GROUP BY
    standard_type
    ) x on a.num_value = x.standard_type
    ORDER BY standard_type asc
  </select>

  <select id="getInternationalAllList" parameterType="java.util.Map" resultMap="StandardMaintainBIMap">
    SELECT
    a.num_value,
    CASE
    a.num_value
    WHEN '01' THEN
    '国际标准在研'
    WHEN '04' THEN
    '累计发布数'
    END AS standard_name,
    IFNULL(x.all_count,0) as all_count
    FROM
    ( SELECT num_value FROM sys_dictionary WHERE parent_code = 'ROOT_KJPT_BZWH_BZZT' AND num_value IN ( '01', '04' ) ) a
    LEFT JOIN (
    SELECT
    standard_status,
    count( * ) as all_count
    FROM
    international_standard_maintain v
    WHERE
    1 = 1
    AND deleted != '1'
      <include refid="selectByParam" />
    AND standard_status IN ( '01', '04' )
    GROUP BY
    standard_status
    ) x ON a.num_value = x.standard_status
    ORDER BY a.num_value
  </select>



</mapper>