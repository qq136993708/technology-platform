<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pcitc.mapper.techFamily.TechFamilyMapper">
	<resultMap id="BaseResultMap" type="com.pcitc.base.stp.techFamily.TechFamily">
		<id column="tfm_type_id" property="tfmTypeId" jdbcType="VARCHAR" />
		<result column="type_code" property="typeCode" jdbcType="VARCHAR" />
		<result column="type_name" property="typeName" jdbcType="VARCHAR" />
		<result column="parent_id" property="parentId" jdbcType="VARCHAR" />
		<result column="parent_code" property="parentCode" jdbcType="VARCHAR" />
		<result column="is_parent" property="isParent" jdbcType="VARCHAR" />
		<result column="type_index" property="typeIndex" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="VARCHAR" />
		<result column="level_code" property="levelCode" jdbcType="VARCHAR" />
		<result column="data_order" property="dataOrder" jdbcType="VARCHAR" />
		<result column="remarks" property="remarks" jdbcType="VARCHAR" />
		<result column="type_scope" property="typeScope" jdbcType="VARCHAR" />
		<result column="create_user" property="createUser" jdbcType="VARCHAR" />
		<result column="create_user_id" property="createUserId" jdbcType="VARCHAR" />
		<result column="create_date" property="createDate" jdbcType="VARCHAR" />
		<result column="update_date" property="updateDate" jdbcType="VARCHAR" />
		<result column="update_user" property="updateUser" jdbcType="VARCHAR" />
		<result column="audit_status" property="auditStatus" jdbcType="VARCHAR" />
		<result column="is_hot"         property="isHot" jdbcType="VARCHAR" />
		<result column="develop_info"   property="developInfo" jdbcType="VARCHAR" />
		<result column="direction_info" property="directionInfo" jdbcType="VARCHAR" />
		<result column="secret_level"              jdbcType="VARCHAR" property="secretLevel" />
        <result column="secret_level_str"          jdbcType="VARCHAR" property="secretLevelStr" />
        
         <result column="knowledge_scope"             jdbcType="VARCHAR" property="knowledgeScope" />
         <result column="knowledge_person"           jdbcType="VARCHAR" property="knowledgePerson" />
    
		
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		tfm_type_id, type_code, type_name, parent_id, parent_code,
		is_parent, type_index,
		status, level_code, data_order, remarks,
		type_scope, create_user,
		create_user_id,
		create_date, update_date,
		update_user, audit_status, is_hot, develop_info,
		direction_info,secret_level,secret_level_str,knowledge_person,create_user
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.pcitc.base.stp.techFamily.TechFamilyExample">
		select
		<if test="distinct">
			distinct
		</if>
		'true' as QUERYID,
		<include refid="Base_Column_List" />
		from (<include refid="view_tfm_type" />) t
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from (<include refid="view_tfm_type" />) t
		where tfm_type_id = #{tfmTypeId,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from
		tfm_type
		where tfm_type_id = #{tfmTypeId,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteByExample" parameterType="com.pcitc.base.stp.techFamily.TechFamilyExample">
		delete from tfm_type
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.pcitc.base.stp.techFamily.TechFamily">
		insert into tfm_type
		(tfm_type_id, type_code, type_name,
		parent_id, parent_code, is_parent,
		type_index, status, level_code,
		data_order, remarks, type_scope,
		create_user, create_user_id, create_date,
		update_date, update_user,
		audit_status,
		is_hot, develop_info, direction_info, secret_level,knowledge_scope,knowledge_person
		)
		values
		(#{tfmTypeId,jdbcType=VARCHAR}, #{typeCode,jdbcType=VARCHAR},
		#{typeName,jdbcType=VARCHAR},
		#{parentId,jdbcType=VARCHAR},
		#{parentCode,jdbcType=VARCHAR}, #{isParent,jdbcType=VARCHAR},
		#{typeIndex,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR},
		#{levelCode,jdbcType=VARCHAR},
		#{dataOrder,jdbcType=VARCHAR},
		#{remarks,jdbcType=VARCHAR}, #{typeScope,jdbcType=VARCHAR},
		#{createUser,jdbcType=VARCHAR}, #{createUserId,jdbcType=VARCHAR},
		#{createDate,jdbcType=VARCHAR},
		#{updateDate,jdbcType=VARCHAR},
		#{updateUser,jdbcType=VARCHAR}, #{auditStatus,jdbcType=VARCHAR},
		#{isHot,jdbcType=VARCHAR}, #{developInfo,jdbcType=VARCHAR},
		#{directionInfo,jdbcType=VARCHAR},#{secretLevel,jdbcType=VARCHAR}
		 ,#{knowledgeScope,jdbcType=VARCHAR}
      ,#{knowledgePerson,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.pcitc.base.stp.techFamily.TechFamily">
		insert into tfm_type
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="tfmTypeId != null">
				tfm_type_id,
			</if>
			<if test="typeCode != null">
				type_code,
			</if>
			<if test="typeName != null">
				type_name,
			</if>
			<if test="parentId != null">
				parent_id,
			</if>
			<if test="parentCode != null">
				parent_code,
			</if>
			<if test="isParent != null">
				is_parent,
			</if>
			<if test="typeIndex != null">
				type_index,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="levelCode != null">
				level_code,
			</if>
			<if test="dataOrder != null">
				data_order,
			</if>
			<if test="remarks != null">
				remarks,
			</if>
			<if test="typeScope != null">
				type_scope,
			</if>
			<if test="createUser != null">
				create_user,
			</if>
			<if test="createUserId != null">
				create_user_id,
			</if>
			<if test="createDate != null">
				create_date,
			</if>
			<if test="updateDate != null">
				update_date,
			</if>
			<if test="updateUser != null">
				update_user,
			</if>
			<if test="auditStatus != null">
				audit_status,
			</if>
			<if test="isHot != null">
				is_hot,
			</if>
			<if test="developInfo != null">
				develop_info,
			</if>
			<if test="directionInfo != null">
				direction_info,
			</if>
			<if test="secretLevel != null">
				secret_level,
			</if>
			<if test="knowledgeScope != null">
		        knowledge_scope,
		    </if>
		    <if test="knowledgePerson != null">
		        knowledge_person,
		    </if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="tfmTypeId != null">
				#{tfmTypeId,jdbcType=VARCHAR},
			</if>
			<if test="typeCode != null">
				#{typeCode,jdbcType=VARCHAR},
			</if>
			<if test="typeName != null">
				#{typeName,jdbcType=VARCHAR},
			</if>
			<if test="parentId != null">
				#{parentId,jdbcType=VARCHAR},
			</if>
			<if test="parentCode != null">
				#{parentCode,jdbcType=VARCHAR},
			</if>
			<if test="isParent != null">
				#{isParent,jdbcType=VARCHAR},
			</if>
			<if test="typeIndex != null">
				#{typeIndex,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=VARCHAR},
			</if>
			<if test="levelCode != null">
				#{levelCode,jdbcType=VARCHAR},
			</if>
			<if test="dataOrder != null">
				#{dataOrder,jdbcType=VARCHAR},
			</if>
			<if test="remarks != null">
				#{remarks,jdbcType=VARCHAR},
			</if>
			<if test="typeScope != null">
				#{typeScope,jdbcType=VARCHAR},
			</if>
			<if test="createUser != null">
				#{createUser,jdbcType=VARCHAR},
			</if>
			<if test="createUserId != null">
				#{createUserId,jdbcType=VARCHAR},
			</if>
			<if test="createDate != null">
				#{createDate,jdbcType=VARCHAR},
			</if>
			<if test="updateDate != null">
				#{updateDate,jdbcType=VARCHAR},
			</if>
			<if test="updateUser != null">
				#{updateUser,jdbcType=VARCHAR},
			</if>
			<if test="auditStatus != null">
				#{auditStatus,jdbcType=VARCHAR},
			</if>
			<if test="isHot != null">
				#{isHot,jdbcType=VARCHAR},
			</if>
			<if test="developInfo != null">
				#{developInfo,jdbcType=VARCHAR},
			</if>
			<if test="directionInfo != null">
				#{directionInfo,jdbcType=VARCHAR},
			</if>
			<if test="secretLevel != null">
				#{secretLevel,jdbcType=VARCHAR},
			</if>
			<if test="knowledgeScope != null">
		        #{knowledgeScope,jdbcType=VARCHAR},
		      </if>
		      <if test="knowledgePerson != null">
		        #{knowledgePerson,jdbcType=VARCHAR},
		      </if>
      
			
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.pcitc.base.stp.techFamily.TechFamilyExample"
		resultType="java.lang.Integer">
		select count(*) from tfm_type
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	
	
	
	<update id="updateByPrimaryKey" parameterType="com.pcitc.base.stp.techFamily.TechFamily">
		update tfm_type
		set type_code = #{typeCode,jdbcType=VARCHAR},
		type_name =
		#{typeName,jdbcType=VARCHAR},
		   
      knowledge_scope = #{knowledgeScope,jdbcType=VARCHAR},
      knowledge_person = #{knowledgePerson,jdbcType=VARCHAR},
		parent_id = #{parentId,jdbcType=VARCHAR},
		parent_code = #{parentCode,jdbcType=VARCHAR},
		is_parent =
		#{isParent,jdbcType=VARCHAR},
		type_index =
		#{typeIndex,jdbcType=VARCHAR},
		status = #{status,jdbcType=VARCHAR},
		level_code = #{levelCode,jdbcType=VARCHAR},
		data_order =
		#{dataOrder,jdbcType=VARCHAR},
		remarks = #{remarks,jdbcType=VARCHAR},
		type_scope = #{typeScope,jdbcType=VARCHAR},
		create_user =
		#{createUser,jdbcType=VARCHAR},
		create_user_id =
		#{createUserId,jdbcType=VARCHAR},
		create_date =
		#{createDate,jdbcType=VARCHAR},
		update_date =
		#{updateDate,jdbcType=VARCHAR},
		update_user =
		#{updateUser,jdbcType=VARCHAR},
		audit_status =
		#{auditStatus,jdbcType=VARCHAR},
		is_hot = #{isHot,jdbcType=VARCHAR},
		develop_info = #{developInfo,jdbcType=VARCHAR},
		secret_level = #{secretLevel,jdbcType=VARCHAR},
		direction_info =
		#{directionInfo,jdbcType=VARCHAR}
		where tfm_type_id =
		#{tfmTypeId,jdbcType=VARCHAR}
	</update>

	<!-- 根据层级条件 显示树 -->
	<select id="selectTreeNodeByLevel" resultType="com.pcitc.base.common.TreeNode">
		select a.tfm_type_id as id,a.parent_id as pId,a.type_name as name,a.level_code
		as levelCode, a.type_code as code, a.is_parent as parentFlag, a.type_index as nodePath,
		a.secret_level as secret_level,sd.name as secret_level_text
		from tfm_type a left join sys_dictionary sd on a.secret_level = sd.num_value and sd.parent_code = 'ROOT_KJPT_XXMJ'
		where status = '1' and type_index is not null
		<if test="parentCode != null and parentCode !=''.toString">
			and a.parent_code = '${parentCode}'
		</if>
		<if test="typeCode != null and typeCode !=''.toString">
			and a.type_code = '${typeCode}'
		</if>
		<if test="typeIndex != null and typeIndex !=''.toString">
			and a.type_index like '%@${typeIndex}@%'
		</if>
		<if test="typeIndex != null and typeIndex !=''.toString">
			and a.type_code != '${typeIndex}'
		</if>
		<if test="levelCode != null and levelCode !=''.toString">
			and a.level_code &lt;= #{levelCode}
		</if>
		<if test="typeName != null and typeName !=''.toString">
			and a.type_name like '%${typeName}%'
		</if>
		order by a.level_code, a.type_index asc
	</select>

	<!-- 根据层级条件 显示树 -->
	<select id="selectTreeNodeByLevelCond" resultType="com.pcitc.base.common.TreeNode">
		select tfm_type_id as id,parent_id as pId,type_name as name,level_code as levelCode,
		type_code as code, is_parent as parentFlag
		from tfm_type
		where
		(
		type_code in
		<foreach collection="typeCodeCond" item="typeCode" index="index"
			open="(" close=")" separator=",">
			#{typeCode}
		</foreach>
		or parent_code = '${parentCode}' or level_code &lt;= #{levelCode}
		)
		and status = '1' and type_index is not null
		and type_code != '10'
		order by
		level_code, type_index asc
	</select>

	<update id="updateTechTypeCondition" parameterType="com.pcitc.base.stp.techFamily.TechFamily">
		update
		tfm_type
		set status = '${status}'
		where type_index like '${typeIndex}%'
	</update>

	<!-- 查询最大的分类编码 -->
	<select id="getMaxTechTypeCode" resultType="java.lang.String"
		parameterType="java.util.HashMap">
		select max(type_code)
		from tfm_type
		where status = '1'
		<if test="parentId != null and parentId !=''.toString">
			and parent_id = '${parentId}'
		</if>
		group by parent_id
	</select>
	
	
	
	 <select id="getTechFamilyListByCodes" resultMap="BaseResultMap"  >
      select * from tfm_type t where  t.type_code in
      <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
            #{item}
       </foreach>
     </select>
     
     <select id="getTechFamilyList" resultMap="BaseResultMap"  >
      select * from tfm_type t where  status =  #{status}
     </select>
     
     
     
     <sql id="view_tfm_type">
      SELECT t1.*
      ,
      ( 
         SELECT t2.`name` FROM sys_dictionary  t2 WHERE t2.`parent_code` ='ROOT_KJPT_XXMJ'
          AND t2.num_value =t1.`secret_level`
      )  secret_level_str
     FROM tfm_type t1
	</sql>
	
       <sql id="selectCondition">
	   <trim prefix="WHERE" prefixOverrides="AND|OR"> 
	     <if test="typeName != null       and typeName  !='' ">            AND t.type_name like CONCAT('%',#{typeName},'%')</if>
	     <if test="tfmTypeId != null      and tfmTypeId !=''  ">           AND t.tfm_type_id = #{tfmTypeId}</if>
	     <if test="typeCode != null       and typeCode !=''  ">            AND t.del_status = #{typeCode}</if>
	     <if test="parentId != null       and parentId !=''  ">            AND t.parent_id = #{parentId}</if>
	     <if test="parentCode != null        and parentCode !=''  ">       AND t.parent_code = #{parentCode}</if>
	     <if test="secretLevel != null        and secretLevel !=''  ">      AND t.secret_level = #{secretLevel}</if>
	     <if test="knowledgeScope != null     and knowledgeScope !=''  "> 
	            AND (FIND_IN_SET(#{knowledgeScope},t.`knowledge_scope`) &lt; 0 OR  t.secret_level ='0' )
	      </if>
	     <if test="userSecretLevel != null and userSecretLevel !=''  ">        
	         AND (t.secret_level &lt;= #{userSecretLevel} OR  t.secret_level ='0')
	     </if>
	      <if test="status != null            and status !=''  ">              AND t.status = #{status}</if>
	      <if test="levelCode != null         and levelCode !=''  ">  
	               AND t.level_code &lt;= #{levelCode}
	      </if>
	      <if test="typeIndex != null         and typeIndex !=''  ">           
	       AND t.type_index like CONCAT(#{typeIndex},'%')
	      </if>
	      
	      <if test="isCloudParentId != null  and isCloudParentId !='' and parentId != null       and parentId !=''  ">           
	          OR t.tfm_type_id = #{parentId}
	      </if>
	 </trim>
	</sql>
     
     
     <select id="getList" resultMap="BaseResultMap" parameterType="Map" >
     select * from (<include refid="view_tfm_type" />)  t <include refid="selectCondition" />    
     <choose>
      <when test="orderBySql != null and orderBySql !=''">${orderBySql}</when>
      <otherwise>
       ORDER  BY t.level_code,t.type_index ASC 
      </otherwise>
     </choose>
     <if test="pageSize != null and pageSize !=''"> limit #{start},#{pageSize} </if>   
   </select>
   
    <select id="getCount" resultType="java.lang.Integer" parameterType="Map" >
      SELECT count(*) FROM tfm_type t <include refid="selectCondition"/>
    </select>
    
     <select id="getList_COUNT" parameterType="java.util.Map" resultType="Long">
        select  count(*) from tfm_type t <include refid="selectCondition" />
     </select>
     
     
     
     
     
     <resultMap id="TreeNodeBaseResultMap" type="com.pcitc.base.common.TreeNode">
		<id column="id"       property="id" jdbcType="VARCHAR" />
		<result column="pId"  property="pId" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="code" property="code" jdbcType="VARCHAR" />
		<result column="parentFlag" property="parentFlag" jdbcType="VARCHAR" />
		<result column="nodePath" property="nodePath" jdbcType="VARCHAR" />
		<result column="parentCode" property="parentCode" jdbcType="VARCHAR" />
		<result column="secretLevel" property="secretLevel" jdbcType="VARCHAR" />
	</resultMap>
	
	
  
     
     <select id="getTreeNodeList" resultMap="TreeNodeBaseResultMap"  >
     select
	      t.tfm_type_id AS id,
		  t.parent_id AS pId,
		  t.type_name AS name,
		  t.level_code AS levelCode,
		  t.type_code AS code,
		  t.is_parent AS parentFlag,
		  t.type_index AS nodePath
	  from tfm_type  t  <include refid="selectCondition" />  
        ORDER BY t.level_code,t.type_index ASC 
	</select>
	
	
	
	
	<resultMap id="TreeNodeApiBaseResultMap" type="com.pcitc.base.common.TreeNodeApi">
		<id column="id"       property="id" jdbcType="VARCHAR" />
		<result column="pId"  property="pId" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="code" property="code" jdbcType="VARCHAR" />
		<result column="parentCode" property="parentCode" jdbcType="VARCHAR" />
		<result column="secretLevel" property="secretLevel" jdbcType="VARCHAR" />
		<result column="levelCode" property="levelCode" jdbcType="VARCHAR" />
	</resultMap>
	
	
	
	  <select id="getTreeNodeApiList" resultMap="TreeNodeApiBaseResultMap"  >
     select
	      t.tfm_type_id AS id,
		  t.parent_id AS pId,
		  t.type_name AS name,
		  t.level_code AS levelCode,
		  t.type_code AS code,
		  t.`parent_code` AS parentCode,
		  t.`secret_level` AS secretLevel
	  from tfm_type  t  <include refid="selectCondition" />  
        ORDER BY t.level_code,t.type_index ASC 
	</select>
	
	
	
	
	
     
     
     <select id="getMaxTechTypeCodeByParentId" resultType="java.lang.String" parameterType="string">
		select max(type_code)
		from tfm_type
		where parent_id = #{parentId}
		group by parent_id
	</select>
	
	
	
	
	
	
	
	
	
	<delete id="deleteByParentId" parameterType="java.lang.String">
		delete from tfm_type where parent_id = #{parentId}
	</delete>
	
	
	
     
</mapper>