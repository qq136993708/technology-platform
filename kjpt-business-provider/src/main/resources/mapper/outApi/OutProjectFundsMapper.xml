<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pcitc.mapper.outApi.OutProjectFundsMapper">
  <resultMap id="BaseResultMap" type="com.pcitc.base.stp.out.OutProjectFunds">
    <id column="data_id" jdbcType="VARCHAR" property="dataId" />
    <result column="funds_remarks" jdbcType="VARCHAR" property="fundsRemarks" />
    <result column="funds_use" jdbcType="VARCHAR" property="fundsUse" />
    <result column="funds_unit_code" jdbcType="VARCHAR" property="fundsUnitCode" />
    <result column="funds_unit" jdbcType="VARCHAR" property="fundsUnit" />
    <result column="funds_money" jdbcType="VARCHAR" property="fundsMoney" />
    <result column="funds_date" jdbcType="VARCHAR" property="fundsDate" />
    <result column="funds_code" jdbcType="VARCHAR" property="fundsCode" />
    <result column="contract_code" jdbcType="VARCHAR" property="contractCode" />
    <result column="data_code" jdbcType="VARCHAR" property="dataCode" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_user_id" jdbcType="VARCHAR" property="createUserId" />
    <result column="create_date" jdbcType="VARCHAR" property="createDate" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="update_date" jdbcType="VARCHAR" property="updateDate" />
    <result column="sts" jdbcType="VARCHAR" property="sts" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="bak1" jdbcType="VARCHAR" property="bak1" />
    <result column="bak2" jdbcType="VARCHAR" property="bak2" />
    <result column="bak3" jdbcType="VARCHAR" property="bak3" />
    <result column="bak4" jdbcType="VARCHAR" property="bak4" />
    <result column="bak5" jdbcType="VARCHAR" property="bak5" />
    <result column="bak6" jdbcType="VARCHAR" property="bak6" />
    <result column="bak7" jdbcType="VARCHAR" property="bak7" />
    <result column="bak8" jdbcType="VARCHAR" property="bak8" />
    <result column="bak9" jdbcType="VARCHAR" property="bak9" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    data_id, funds_remarks, funds_use, funds_unit_code, funds_unit, funds_money, funds_date, 
    funds_code, contract_code, data_code, create_user, create_user_id, create_date, update_user, 
    update_date, sts, remarks, bak1, bak2, bak3, bak4, bak5, bak6, bak7, bak8, bak9
  </sql>
  <select id="selectByExample" parameterType="com.pcitc.base.stp.out.OutProjectFundsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from out_project_funds
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from out_project_funds
    where data_id = #{dataId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from out_project_funds
    where data_id = #{dataId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.pcitc.base.stp.out.OutProjectFundsExample">
    delete from out_project_funds
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pcitc.base.stp.out.OutProjectFunds">
    insert into out_project_funds (data_id, funds_remarks, funds_use, 
      funds_unit_code, funds_unit, funds_money, 
      funds_date, funds_code, contract_code, 
      data_code, create_user, create_user_id, 
      create_date, update_user, update_date, 
      sts, remarks, bak1, 
      bak2, bak3, bak4, bak5, 
      bak6, bak7, bak8, bak9
      )
    values (#{dataId,jdbcType=VARCHAR}, #{fundsRemarks,jdbcType=VARCHAR}, #{fundsUse,jdbcType=VARCHAR}, 
      #{fundsUnitCode,jdbcType=VARCHAR}, #{fundsUnit,jdbcType=VARCHAR}, #{fundsMoney,jdbcType=VARCHAR}, 
      #{fundsDate,jdbcType=VARCHAR}, #{fundsCode,jdbcType=VARCHAR}, #{contractCode,jdbcType=VARCHAR}, 
      #{dataCode,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR}, #{createUserId,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=VARCHAR}, #{updateUser,jdbcType=VARCHAR}, #{updateDate,jdbcType=VARCHAR}, 
      #{sts,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR}, #{bak1,jdbcType=VARCHAR}, 
      #{bak2,jdbcType=VARCHAR}, #{bak3,jdbcType=VARCHAR}, #{bak4,jdbcType=VARCHAR}, #{bak5,jdbcType=VARCHAR}, 
      #{bak6,jdbcType=VARCHAR}, #{bak7,jdbcType=VARCHAR}, #{bak8,jdbcType=VARCHAR}, #{bak9,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pcitc.base.stp.out.OutProjectFunds">
    insert into out_project_funds
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="dataId != null">
        data_id,
      </if>
      <if test="fundsRemarks != null">
        funds_remarks,
      </if>
      <if test="fundsUse != null">
        funds_use,
      </if>
      <if test="fundsUnitCode != null">
        funds_unit_code,
      </if>
      <if test="fundsUnit != null">
        funds_unit,
      </if>
      <if test="fundsMoney != null">
        funds_money,
      </if>
      <if test="fundsDate != null">
        funds_date,
      </if>
      <if test="fundsCode != null">
        funds_code,
      </if>
      <if test="contractCode != null">
        contract_code,
      </if>
      <if test="dataCode != null">
        data_code,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="sts != null">
        sts,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="bak1 != null">
        bak1,
      </if>
      <if test="bak2 != null">
        bak2,
      </if>
      <if test="bak3 != null">
        bak3,
      </if>
      <if test="bak4 != null">
        bak4,
      </if>
      <if test="bak5 != null">
        bak5,
      </if>
      <if test="bak6 != null">
        bak6,
      </if>
      <if test="bak7 != null">
        bak7,
      </if>
      <if test="bak8 != null">
        bak8,
      </if>
      <if test="bak9 != null">
        bak9,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="dataId != null">
        #{dataId,jdbcType=VARCHAR},
      </if>
      <if test="fundsRemarks != null">
        #{fundsRemarks,jdbcType=VARCHAR},
      </if>
      <if test="fundsUse != null">
        #{fundsUse,jdbcType=VARCHAR},
      </if>
      <if test="fundsUnitCode != null">
        #{fundsUnitCode,jdbcType=VARCHAR},
      </if>
      <if test="fundsUnit != null">
        #{fundsUnit,jdbcType=VARCHAR},
      </if>
      <if test="fundsMoney != null">
        #{fundsMoney,jdbcType=VARCHAR},
      </if>
      <if test="fundsDate != null">
        #{fundsDate,jdbcType=VARCHAR},
      </if>
      <if test="fundsCode != null">
        #{fundsCode,jdbcType=VARCHAR},
      </if>
      <if test="contractCode != null">
        #{contractCode,jdbcType=VARCHAR},
      </if>
      <if test="dataCode != null">
        #{dataCode,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=VARCHAR},
      </if>
      <if test="sts != null">
        #{sts,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="bak1 != null">
        #{bak1,jdbcType=VARCHAR},
      </if>
      <if test="bak2 != null">
        #{bak2,jdbcType=VARCHAR},
      </if>
      <if test="bak3 != null">
        #{bak3,jdbcType=VARCHAR},
      </if>
      <if test="bak4 != null">
        #{bak4,jdbcType=VARCHAR},
      </if>
      <if test="bak5 != null">
        #{bak5,jdbcType=VARCHAR},
      </if>
      <if test="bak6 != null">
        #{bak6,jdbcType=VARCHAR},
      </if>
      <if test="bak7 != null">
        #{bak7,jdbcType=VARCHAR},
      </if>
      <if test="bak8 != null">
        #{bak8,jdbcType=VARCHAR},
      </if>
      <if test="bak9 != null">
        #{bak9,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pcitc.base.stp.out.OutProjectFundsExample" resultType="java.lang.Long">
    select count(*) from out_project_funds
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update out_project_funds
    <set>
      <if test="record.dataId != null">
        data_id = #{record.dataId,jdbcType=VARCHAR},
      </if>
      <if test="record.fundsRemarks != null">
        funds_remarks = #{record.fundsRemarks,jdbcType=VARCHAR},
      </if>
      <if test="record.fundsUse != null">
        funds_use = #{record.fundsUse,jdbcType=VARCHAR},
      </if>
      <if test="record.fundsUnitCode != null">
        funds_unit_code = #{record.fundsUnitCode,jdbcType=VARCHAR},
      </if>
      <if test="record.fundsUnit != null">
        funds_unit = #{record.fundsUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.fundsMoney != null">
        funds_money = #{record.fundsMoney,jdbcType=VARCHAR},
      </if>
      <if test="record.fundsDate != null">
        funds_date = #{record.fundsDate,jdbcType=VARCHAR},
      </if>
      <if test="record.fundsCode != null">
        funds_code = #{record.fundsCode,jdbcType=VARCHAR},
      </if>
      <if test="record.contractCode != null">
        contract_code = #{record.contractCode,jdbcType=VARCHAR},
      </if>
      <if test="record.dataCode != null">
        data_code = #{record.dataCode,jdbcType=VARCHAR},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserId != null">
        create_user_id = #{record.createUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=VARCHAR},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=VARCHAR},
      </if>
      <if test="record.sts != null">
        sts = #{record.sts,jdbcType=VARCHAR},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.bak1 != null">
        bak1 = #{record.bak1,jdbcType=VARCHAR},
      </if>
      <if test="record.bak2 != null">
        bak2 = #{record.bak2,jdbcType=VARCHAR},
      </if>
      <if test="record.bak3 != null">
        bak3 = #{record.bak3,jdbcType=VARCHAR},
      </if>
      <if test="record.bak4 != null">
        bak4 = #{record.bak4,jdbcType=VARCHAR},
      </if>
      <if test="record.bak5 != null">
        bak5 = #{record.bak5,jdbcType=VARCHAR},
      </if>
      <if test="record.bak6 != null">
        bak6 = #{record.bak6,jdbcType=VARCHAR},
      </if>
      <if test="record.bak7 != null">
        bak7 = #{record.bak7,jdbcType=VARCHAR},
      </if>
      <if test="record.bak8 != null">
        bak8 = #{record.bak8,jdbcType=VARCHAR},
      </if>
      <if test="record.bak9 != null">
        bak9 = #{record.bak9,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update out_project_funds
    set data_id = #{record.dataId,jdbcType=VARCHAR},
      funds_remarks = #{record.fundsRemarks,jdbcType=VARCHAR},
      funds_use = #{record.fundsUse,jdbcType=VARCHAR},
      funds_unit_code = #{record.fundsUnitCode,jdbcType=VARCHAR},
      funds_unit = #{record.fundsUnit,jdbcType=VARCHAR},
      funds_money = #{record.fundsMoney,jdbcType=VARCHAR},
      funds_date = #{record.fundsDate,jdbcType=VARCHAR},
      funds_code = #{record.fundsCode,jdbcType=VARCHAR},
      contract_code = #{record.contractCode,jdbcType=VARCHAR},
      data_code = #{record.dataCode,jdbcType=VARCHAR},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_user_id = #{record.createUserId,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=VARCHAR},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      update_date = #{record.updateDate,jdbcType=VARCHAR},
      sts = #{record.sts,jdbcType=VARCHAR},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      bak1 = #{record.bak1,jdbcType=VARCHAR},
      bak2 = #{record.bak2,jdbcType=VARCHAR},
      bak3 = #{record.bak3,jdbcType=VARCHAR},
      bak4 = #{record.bak4,jdbcType=VARCHAR},
      bak5 = #{record.bak5,jdbcType=VARCHAR},
      bak6 = #{record.bak6,jdbcType=VARCHAR},
      bak7 = #{record.bak7,jdbcType=VARCHAR},
      bak8 = #{record.bak8,jdbcType=VARCHAR},
      bak9 = #{record.bak9,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pcitc.base.stp.out.OutProjectFunds">
    update out_project_funds
    <set>
      <if test="fundsRemarks != null">
        funds_remarks = #{fundsRemarks,jdbcType=VARCHAR},
      </if>
      <if test="fundsUse != null">
        funds_use = #{fundsUse,jdbcType=VARCHAR},
      </if>
      <if test="fundsUnitCode != null">
        funds_unit_code = #{fundsUnitCode,jdbcType=VARCHAR},
      </if>
      <if test="fundsUnit != null">
        funds_unit = #{fundsUnit,jdbcType=VARCHAR},
      </if>
      <if test="fundsMoney != null">
        funds_money = #{fundsMoney,jdbcType=VARCHAR},
      </if>
      <if test="fundsDate != null">
        funds_date = #{fundsDate,jdbcType=VARCHAR},
      </if>
      <if test="fundsCode != null">
        funds_code = #{fundsCode,jdbcType=VARCHAR},
      </if>
      <if test="contractCode != null">
        contract_code = #{contractCode,jdbcType=VARCHAR},
      </if>
      <if test="dataCode != null">
        data_code = #{dataCode,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=VARCHAR},
      </if>
      <if test="sts != null">
        sts = #{sts,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="bak1 != null">
        bak1 = #{bak1,jdbcType=VARCHAR},
      </if>
      <if test="bak2 != null">
        bak2 = #{bak2,jdbcType=VARCHAR},
      </if>
      <if test="bak3 != null">
        bak3 = #{bak3,jdbcType=VARCHAR},
      </if>
      <if test="bak4 != null">
        bak4 = #{bak4,jdbcType=VARCHAR},
      </if>
      <if test="bak5 != null">
        bak5 = #{bak5,jdbcType=VARCHAR},
      </if>
      <if test="bak6 != null">
        bak6 = #{bak6,jdbcType=VARCHAR},
      </if>
      <if test="bak7 != null">
        bak7 = #{bak7,jdbcType=VARCHAR},
      </if>
      <if test="bak8 != null">
        bak8 = #{bak8,jdbcType=VARCHAR},
      </if>
      <if test="bak9 != null">
        bak9 = #{bak9,jdbcType=VARCHAR},
      </if>
    </set>
    where data_id = #{dataId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pcitc.base.stp.out.OutProjectFunds">
    update out_project_funds
    set funds_remarks = #{fundsRemarks,jdbcType=VARCHAR},
      funds_use = #{fundsUse,jdbcType=VARCHAR},
      funds_unit_code = #{fundsUnitCode,jdbcType=VARCHAR},
      funds_unit = #{fundsUnit,jdbcType=VARCHAR},
      funds_money = #{fundsMoney,jdbcType=VARCHAR},
      funds_date = #{fundsDate,jdbcType=VARCHAR},
      funds_code = #{fundsCode,jdbcType=VARCHAR},
      contract_code = #{contractCode,jdbcType=VARCHAR},
      data_code = #{dataCode,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=VARCHAR},
      sts = #{sts,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR},
      bak1 = #{bak1,jdbcType=VARCHAR},
      bak2 = #{bak2,jdbcType=VARCHAR},
      bak3 = #{bak3,jdbcType=VARCHAR},
      bak4 = #{bak4,jdbcType=VARCHAR},
      bak5 = #{bak5,jdbcType=VARCHAR},
      bak6 = #{bak6,jdbcType=VARCHAR},
      bak7 = #{bak7,jdbcType=VARCHAR},
      bak8 = #{bak8,jdbcType=VARCHAR},
      bak9 = #{bak9,jdbcType=VARCHAR}
    where data_id = #{dataId,jdbcType=VARCHAR}
  </update>
</mapper>