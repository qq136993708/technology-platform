<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pcitc.mapper.achieve.AchieveRewardMapper">

    <resultMap id="AchieveRewardMap" type="com.pcitc.base.achieve.AchieveReward">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="achieve_record_id" jdbcType="VARCHAR" property="achieveRecordId"/>
        <result column="achieve_id" jdbcType="VARCHAR" property="achieveId"/>
        <result column="reward_year" jdbcType="VARCHAR" property="rewardYear"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="create_user" jdbcType="VARCHAR" property="creator"/>
        <result column="trans_income" jdbcType="VARCHAR" property="transIncome"/>
        <result column="check_basis" jdbcType="VARCHAR" property="checkBasis"/>
        <result column="income_calculation" jdbcType="VARCHAR" property="incomeCalculation"/>
        <result column="reward_record" jdbcType="VARCHAR" property="rewardRecord"/>
        <result column="reward_quota" jdbcType="FLOAT" property="rewardQuota"/>
        <result column="budget_sources" jdbcType="VARCHAR" property="budgetSources"/>
        <result column="budget_person" jdbcType="VARCHAR" property="budgetPerson"/>
        <result column="budget_all_money" jdbcType="FLOAT" property="budgetAllMoney"/>
        <result column="assign_plan" jdbcType="VARCHAR" property="assignPlan"/>
        <result column="reward_accounting_doc" jdbcType="VARCHAR" property="rewardAccountingDoc"/>
        <result column="income_report_doc" jdbcType="VARCHAR" property="incomeReportDoc"/>
        <result column="assign_plan_doc" jdbcType="VARCHAR" property="assignPlanDoc"/>
        <result column="team_person" jdbcType="VARCHAR" property="teamPerson"/>
        <result column="create_unit_id" jdbcType="VARCHAR" property="createUnitId"/>
        <result column="create_unit_name" jdbcType="VARCHAR" property="createUnitName"/>
    </resultMap>


    <sql id="AchieveReward_Column_List">
        id,
        achieve_record_id,
        achieve_id,
        reward_year,
        create_time,
        create_user,
        trans_income,
        check_basis,
        income_calculation,
        reward_record,
        reward_quota,
        budget_sources,
        budget_person,
        budget_all_money,
        assign_plan,
        reward_accounting_doc,
        income_report_doc,
        del_status,
        assign_plan_doc,
        team_person,
        create_unit_id,
        create_unit_name
       </sql>

    <select id="load" parameterType="java.lang.String" resultMap="AchieveRewardMap">
        select <include refid="AchieveReward_Column_List" /> from achieve_reward where id = #{id} and del_status != '1'
    </select>

    <select id="query" parameterType="java.util.Map" resultMap="AchieveRewardMap">
        select  <include refid="AchieveReward_Column_List" />  from achieve_reward where 1=1
            and del_status != '1'
        AND create_unit_id in
        <foreach item="item"  collection="childUnitIds.split(',')"  open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="getByRecordId" parameterType="java.lang.String" resultMap="AchieveRewardMap">
        select  <include refid="AchieveReward_Column_List" />  from achieve_reward where 1=1 and achieve_record_id = #{aRecordId}
            and del_status != '1'
    </select>



    <select id="query_COUNT" parameterType="java.util.Map" resultType="Long">
        select  count(*) from achieve_reward where 1=1
        and del_status != '1'
    </select>


    <insert id="add" parameterType="com.pcitc.base.achieve.AchieveReward">
        insert into achieve_reward( <include refid="AchieveReward_Column_List" /> )
         values(#{id},#{achieveRecordId},#{achieveId},#{rewardYear},#{createDate},#{creator},#{transIncome},#{checkBasis},#{incomeCalculation},#{rewardRecord},#{rewardQuota},
         #{budgetSources},#{budgetPerson},#{budgetAllMoney},#{assignPlan},#{rewardAccountingDoc},#{incomeReportDoc},#{deleted},#{assignPlanDoc},#{teamPerson},#{createUnitId},#{createUnitName} )
    </insert>

    <update id="update" parameterType="com.pcitc.base.achieve.AchieveReward">
        update achieve_reward
        <trim prefix="SET" suffixOverrides=",">
            <if test="rewardYear != null and rewardYear != '' " >
                reward_year = #{rewardYear},
            </if>
            <if test="transIncome != null and transIncome != '' " >
                trans_income = #{transIncome},
            </if>
            <if test="checkBasis != null and checkBasis != ''" >
                check_basis = #{checkBasis},
            </if>
            <if test="incomeCalculation != null and incomeCalculation != ''" >
                income_calculation = #{incomeCalculation},
            </if>
            <if test="rewardRecord != null and rewardRecord != ''" >
                reward_record = #{rewardRecord},
            </if>
            <if test="rewardQuota != null and rewardQuota != ''" >
                reward_quota = #{rewardQuota},
            </if>
            <if test="budgetSources != null and budgetSources != ''" >
                budget_sources = #{budgetSources},
            </if>
            <if test="budgetPerson != null and budgetPerson != ''" >
                budget_person = #{budgetPerson},
            </if>
            <if test="budgetAllMoney != null and budgetAllMoney != ''" >
                budget_all_money = #{budgetAllMoney},
            </if>
            <if test="assignPlan != null and assignPlan != ''" >
                assign_plan = #{assignPlan},
            </if>
            <if test="rewardAccountingDoc != null and rewardAccountingDoc != ''" >
                reward_accounting_doc = #{rewardAccountingDoc},
            </if>
            <if test="incomeReportDoc != null and incomeReportDoc !='' " >
                income_report_doc = #{incomeReportDoc},
            </if>
            <if test="assignPlanDoc != null and assignPlanDoc != ''" >
                assign_plan_doc = #{assignPlanDoc,jdbcType=VARCHAR},
            </if>
            <if test="teamPerson != null and teamPerson != ''" >
                team_person = #{teamPerson,jdbcType=VARCHAR},
            </if>
            <if test="createUnitId != null and createUnitId != ''" >
                create_unit_id = #{createUnitId,jdbcType=VARCHAR},
            </if>
            <if test="createUnitName != null and createUnitName != ''" >
                create_unit_name = #{createUnitName,jdbcType=VARCHAR}
            </if>
        </trim>

        where id = #{id}
    </update>


    <update id="delete" parameterType="java.lang.String">
            update achieve_reward set del_status = '1' where id = #{id}
    </update>

    <update id="updateRewardMoney" parameterType="java.lang.String">
        update achieve_record set reward_money = (select sum(reward_quota) from achieve_reward where achieve_record_id = #{aRecordId}) where id = #{achieve_id}
    </update>

    <update id="updateCurrentYearMoney" parameterType="java.lang.String">
        update achieve_record set current_reward_money = (SELECR reward_quota FROM achieve_reward ORDER BY reward_year DESC LIMI 1)  where id = #{achieve_id}
    </update>
</mapper>