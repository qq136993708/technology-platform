<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pcitc.mapper.expert.TechFamilyTypeMapper">

    <resultMap id="BaseResultMap" type="com.pcitc.base.expert.TechFamilyType">

        <id column="data_id" jdbcType="VARCHAR" property="dataId"/>
        <result column="code" jdbcType="VARCHAR" property="code"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="parent_code" jdbcType="VARCHAR" property="parentCode"/>
        <result column="parent_id" jdbcType="VARCHAR" property="parentId"/>
        <result column="level" jdbcType="VARCHAR" property="level"/>
        <result column="create_user" jdbcType="VARCHAR" property="createUser"/>
        <result column="create_date" jdbcType="VARCHAR" property="createDate"/>
        <result column="update_user" jdbcType="VARCHAR" property="updateUser"/>
        <result column="update_date" jdbcType="VARCHAR" property="updateDate"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="audit_status" jdbcType="VARCHAR" property="auditStatus"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        data_id,
        code,
        name,
        parent_code,
        parent_id,
        level,
        create_user,
        create_date,
        update_user,
        update_date,
        status,
        audit_status
</sql>

    <select id="selectByExample" parameterType="com.pcitc.base.expert.TechFamilyTypeExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from tech_family_type
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tech_family_type
        where data_id = #{dataId,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from tech_family_type
        where data_id = #{dataId,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteByExample" parameterType="com.pcitc.base.expert.TechFamilyTypeExample">
        delete from tech_family_type
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.pcitc.base.expert.TechFamilyType">
        insert into tech_family_type (
            data_id,
            code,
            name,
            parent_code,
            parent_id,
            level,
            create_user,
            create_date,
            update_user,
            update_date,
            status,
            audit_status
        )
        values (

    #{dataId,jdbcType=VARCHAR},
    #{code,jdbcType=VARCHAR},
    #{name,jdbcType=VARCHAR},
    #{parentCode,jdbcType=VARCHAR},
    #{parentId,jdbcType=VARCHAR},
    #{level,jdbcType=VARCHAR},
    #{createUser,jdbcType=VARCHAR},
    #{createDate,jdbcType=VARCHAR},
    #{updateUser,jdbcType=VARCHAR},
    #{updateDate,jdbcType=VARCHAR},
    #{status,jdbcType=VARCHAR},
    #{auditStatus,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.pcitc.base.expert.TechFamilyType">
        insert into tech_family_type
        <trim prefix="(" suffix=")" suffixOverrides=",">

            <if test="dataId != null">
                data_id,
            </if>
            <if test="code != null">
                code,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="parentCode != null">
                parent_code,
            </if>
            <if test="parentId != null">
                parent_id,
            </if>
            <if test="level != null">
                level,
            </if>
            <if test="createUser != null">
                create_user,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
            <if test="updateUser != null">
                update_user,
            </if>
            <if test="updateDate != null">
                update_date,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="auditStatus != null">
                audit_status
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">


            <if test="dataId != null">
                #{dataId ,jdbcType=VARCHAR},
            </if>
            <if test="code != null">
                #{code ,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name ,jdbcType=VARCHAR},
            </if>
            <if test="parentCode != null">
                #{parentCode ,jdbcType=VARCHAR},
            </if>
            <if test="parentId != null">
                #{parentId ,jdbcType=VARCHAR},
            </if>
            <if test="level != null">
                #{level ,jdbcType=VARCHAR},
            </if>
            <if test="createUser != null">
                #{createUser ,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                #{createDate ,jdbcType=VARCHAR},
            </if>
            <if test="updateUser != null">
                #{updateUser ,jdbcType=VARCHAR},
            </if>
            <if test="updateDate != null">
                #{updateDate ,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status ,jdbcType=VARCHAR},
            </if>
            <if test="auditStatus != null">
                #{auditStatus ,jdbcType=VARCHAR}
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.pcitc.base.expert.TechFamilyTypeExample" resultType="java.lang.Long">
        select count(*) from tech_family_type
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update tech_family_type
        <set>

            <if test="record.dataId != null">
                data_id=#{record.dataId,jdbcType=VARCHAR},
            </if>
            <if test="record.code != null">
                code=#{record.code,jdbcType=VARCHAR},
            </if>
            <if test="record.name != null">
                name=#{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.parentCode != null">
                parent_code=#{record.parentCode,jdbcType=VARCHAR},
            </if>
            <if test="record.parentId != null">
                parent_id=#{record.parentId,jdbcType=VARCHAR},
            </if>
            <if test="record.level != null">
                level=#{record.level,jdbcType=VARCHAR},
            </if>
            <if test="record.createUser != null">
                create_user=#{record.createUser,jdbcType=VARCHAR},
            </if>
            <if test="record.createDate != null">
                create_date=#{record.createDate,jdbcType=VARCHAR},
            </if>
            <if test="record.updateUser != null">
                update_user=#{record.updateUser,jdbcType=VARCHAR},
            </if>
            <if test="record.updateDate != null">
                update_date=#{record.updateDate,jdbcType=VARCHAR},
            </if>
            <if test="record.status != null">
                status=#{record.status,jdbcType=VARCHAR},
            </if>
            <if test="record.auditStatus != null">
                audit_status=#{record.auditStatus,jdbcType=VARCHAR}
            </if>

        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update tech_family_type
        set
        data_id=#{record.dataId,jdbcType=VARCHAR},
        code=#{record.code,jdbcType=VARCHAR},
        name=#{record.name,jdbcType=VARCHAR},
        parent_code=#{record.parentCode,jdbcType=VARCHAR},
        parent_id=#{record.parentId,jdbcType=VARCHAR},
        level=#{record.level,jdbcType=VARCHAR},
        create_user=#{record.createUser,jdbcType=VARCHAR},
        create_date=#{record.createDate,jdbcType=VARCHAR},
        update_user=#{record.updateUser,jdbcType=VARCHAR},
        update_date=#{record.updateDate,jdbcType=VARCHAR},
        status=#{record.status,jdbcType=VARCHAR},
        audit_status=#{record.auditStatus,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.pcitc.base.expert.TechFamilyType">
        update tech_family_type
        <set>

            <if test="code != null">
                code=#{code ,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name=#{name ,jdbcType=VARCHAR},
            </if>
            <if test="parentCode != null">
                parent_code=#{parentCode ,jdbcType=VARCHAR},
            </if>
            <if test="parentId != null">
                parent_id=#{parentId ,jdbcType=VARCHAR},
            </if>
            <if test="level != null">
                level=#{level ,jdbcType=VARCHAR},
            </if>
            <if test="createUser != null">
                create_user=#{createUser ,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                create_date=#{createDate ,jdbcType=VARCHAR},
            </if>
            <if test="updateUser != null">
                update_user=#{updateUser ,jdbcType=VARCHAR},
            </if>
            <if test="updateDate != null">
                update_date=#{updateDate ,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status=#{status ,jdbcType=VARCHAR},
            </if>
            <if test="auditStatus != null">
                audit_status=#{auditStatus ,jdbcType=VARCHAR}
            </if>
        </set>
        where data_id = #{dataId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.pcitc.base.expert.TechFamilyType">
        update tech_family_type
        set
            code=#{code,jdbcType=VARCHAR},
            name=#{name,jdbcType=VARCHAR},
            parent_code=#{parentCode,jdbcType=VARCHAR},
            parent_id=#{parentId,jdbcType=VARCHAR},
            level=#{level,jdbcType=VARCHAR},
            create_user=#{createUser,jdbcType=VARCHAR},
            create_date=#{createDate,jdbcType=VARCHAR},
            update_user=#{updateUser,jdbcType=VARCHAR},
            update_date=#{updateDate,jdbcType=VARCHAR},
            status=#{status,jdbcType=VARCHAR},
            audit_status=#{auditStatus,jdbcType=VARCHAR}
        where data_id = #{dataId,jdbcType=VARCHAR}
    </update>
    <!-- 分页查询 -->
    <select id="findSysFileKindByPage" parameterType="com.pcitc.base.expert.TechFamilyType" resultMap="BaseResultMap">

        select
        data_id,
        code,
        name,
        parent_code,
        parent_id,
        level,
        create_user,
        create_date,
        update_user,
        update_date,
        status,
        audit_status
        from tech_family_type
        where 1=1
        <if test="dataId!=null and dataId!=''.toString()">
            and data_id like '%${dataId}%'
        </if>
        <if test="code!=null and code!=''.toString()">
            and code like '%${code}%'
        </if>
        <if test="name!=null and name!=''.toString()">
            and name like '%${name}%'
        </if>
        <if test="parentCode!=null and parentCode!=''.toString()">
            and parent_code like '%${parentCode}%'
        </if>
        <if test="parentId!=null and parentId!=''.toString()">
            and parent_id like '%${parentId}%'
        </if>
        <if test="level!=null and level!=''.toString()">
            and level like '%${level}%'
        </if>
        <if test="createUser!=null and createUser!=''.toString()">
            and create_user like '%${createUser}%'
        </if>
        <if test="createDate!=null and createDate!=''.toString()">
            and create_date like '%${createDate}%'
        </if>
        <if test="updateUser!=null and updateUser!=''.toString()">
            and update_user like '%${updateUser}%'
        </if>
        <if test="updateDate!=null and updateDate!=''.toString()">
            and update_date like '%${updateDate}%'
        </if>
        <if test="status!=null and status!=''.toString()">
            and status like '%${status}%'
        </if>
        <if test="auditStatus!=null and auditStatus!=''.toString()">
            and audit_status like '%${auditStatus}%'
        </if>

        <if test="iSortCol!=null and iSortCol!=''.toString()">
            order by ${iSortCol} ${sSortDir_0}
        </if>
    </select>
    <!-- 查询列表 -->
    <select id="findTechFamilyTypeList" parameterType="com.pcitc.base.expert.TechFamilyType" resultMap="BaseResultMap">
        select
        data_id,
        code,
        name,
        parent_code,
        parent_id,
        level,
        create_user,
        create_date,
        update_user,
        update_date,
        status,
        audit_status
        from tech_family_type
        where 1=1
        <if test="dataId!=null">
            and data_id = #{dataId,jdbcType=VARCHAR}
        </if>
        <if test="code!=null">
            and code = #{code,jdbcType=VARCHAR}
        </if>
        <if test="name!=null">
            and name = #{name,jdbcType=VARCHAR}
        </if>
        <if test="parentCode!=null">
            and parent_code = #{parentCode,jdbcType=VARCHAR}
        </if>
        <if test="parentId!=null">
            and parent_id = #{parentId,jdbcType=VARCHAR}
        </if>
        <if test="level!=null">
            and level = #{level,jdbcType=VARCHAR}
        </if>
        <if test="createUser!=null">
            and create_user = #{createUser,jdbcType=VARCHAR}
        </if>
        <if test="createDate!=null">
            and create_date = #{createDate,jdbcType=VARCHAR}
        </if>
        <if test="updateUser!=null">
            and update_user = #{updateUser,jdbcType=VARCHAR}
        </if>
        <if test="updateDate!=null">
            and update_date = #{updateDate,jdbcType=VARCHAR}
        </if>
        <if test="status!=null">
            and status = #{status,jdbcType=VARCHAR}
        </if>
        <if test="auditStatus!=null">
            and audit_status = #{auditStatus,jdbcType=VARCHAR}
        </if>

        <if test="iSortCol!=null and iSortCol!=''.toString()">
            order by ${iSortCol} ${sSortDir_0}
        </if>
    </select>
</mapper>