<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pcitc.mapper.doc.SysFileKindAuthMapper" >
  <resultMap id="BaseResultMap" type="com.pcitc.base.doc.SysFileKindAuth" >
    <id column="data_id" property="dataId" jdbcType="VARCHAR" />
    <result column="auth_code" property="authCode" jdbcType="VARCHAR" />
    <result column="auth_name" property="authName" jdbcType="VARCHAR" />
    <result column="file_kind_id" property="fileKindId" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="unit_code" property="unitCode" jdbcType="VARCHAR" />
    <result column="post_post" property="postPost" jdbcType="VARCHAR" />
    <result column="role_id" property="roleId" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="VARCHAR" />
    <result column="create_user_id" property="createUserId" jdbcType="VARCHAR" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="update_date" property="updateDate" jdbcType="VARCHAR" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="audit_status" property="auditStatus" jdbcType="VARCHAR" />
    <result column="sts" property="sts" jdbcType="VARCHAR" />
    <result column="bak1" property="bak1" jdbcType="VARCHAR" />
    <result column="bak2" property="bak2" jdbcType="VARCHAR" />
    <result column="bak3" property="bak3" jdbcType="VARCHAR" />
    <result column="bak4" property="bak4" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    data_id, auth_code, auth_name, file_kind_id, user_id, unit_code, post_post, role_id, 
    create_date, create_user_id, create_user, update_date, update_user, remarks, audit_status, 
    sts, bak1, bak2, bak3, bak4
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pcitc.base.doc.SysFileKindAuthExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from sys_file_kind_auth
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from sys_file_kind_auth
    where data_id = #{dataId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from sys_file_kind_auth
    where data_id = #{dataId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.pcitc.base.doc.SysFileKindAuthExample" >
    delete from sys_file_kind_auth
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pcitc.base.doc.SysFileKindAuth" >
    insert into sys_file_kind_auth (data_id, auth_code, auth_name, 
      file_kind_id, user_id, unit_code, 
      post_post, role_id, create_date, 
      create_user_id, create_user, update_date, 
      update_user, remarks, audit_status, 
      sts, bak1, bak2, bak3, 
      bak4)
    values (#{dataId,jdbcType=VARCHAR}, #{authCode,jdbcType=VARCHAR}, #{authName,jdbcType=VARCHAR}, 
      #{fileKindId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{unitCode,jdbcType=VARCHAR}, 
      #{postPost,jdbcType=VARCHAR}, #{roleId,jdbcType=VARCHAR}, #{createDate,jdbcType=VARCHAR}, 
      #{createUserId,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR}, #{updateDate,jdbcType=VARCHAR}, 
      #{updateUser,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR}, #{auditStatus,jdbcType=VARCHAR}, 
      #{sts,jdbcType=VARCHAR}, #{bak1,jdbcType=VARCHAR}, #{bak2,jdbcType=VARCHAR}, #{bak3,jdbcType=VARCHAR}, 
      #{bak4,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.pcitc.base.doc.SysFileKindAuth" >
    insert into sys_file_kind_auth
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="dataId != null" >
        data_id,
      </if>
      <if test="authCode != null" >
        auth_code,
      </if>
      <if test="authName != null" >
        auth_name,
      </if>
      <if test="fileKindId != null" >
        file_kind_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="unitCode != null" >
        unit_code,
      </if>
      <if test="postPost != null" >
        post_post,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
      <if test="auditStatus != null" >
        audit_status,
      </if>
      <if test="sts != null" >
        sts,
      </if>
      <if test="bak1 != null" >
        bak1,
      </if>
      <if test="bak2 != null" >
        bak2,
      </if>
      <if test="bak3 != null" >
        bak3,
      </if>
      <if test="bak4 != null" >
        bak4,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="dataId != null" >
        #{dataId,jdbcType=VARCHAR},
      </if>
      <if test="authCode != null" >
        #{authCode,jdbcType=VARCHAR},
      </if>
      <if test="authName != null" >
        #{authName,jdbcType=VARCHAR},
      </if>
      <if test="fileKindId != null" >
        #{fileKindId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="unitCode != null" >
        #{unitCode,jdbcType=VARCHAR},
      </if>
      <if test="postPost != null" >
        #{postPost,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="auditStatus != null" >
        #{auditStatus,jdbcType=VARCHAR},
      </if>
      <if test="sts != null" >
        #{sts,jdbcType=VARCHAR},
      </if>
      <if test="bak1 != null" >
        #{bak1,jdbcType=VARCHAR},
      </if>
      <if test="bak2 != null" >
        #{bak2,jdbcType=VARCHAR},
      </if>
      <if test="bak3 != null" >
        #{bak3,jdbcType=VARCHAR},
      </if>
      <if test="bak4 != null" >
        #{bak4,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pcitc.base.doc.SysFileKindAuthExample" resultType="java.lang.Integer" >
    select count(*) from sys_file_kind_auth
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sys_file_kind_auth
    <set >
      <if test="record.dataId != null" >
        data_id = #{record.dataId,jdbcType=VARCHAR},
      </if>
      <if test="record.authCode != null" >
        auth_code = #{record.authCode,jdbcType=VARCHAR},
      </if>
      <if test="record.authName != null" >
        auth_name = #{record.authName,jdbcType=VARCHAR},
      </if>
      <if test="record.fileKindId != null" >
        file_kind_id = #{record.fileKindId,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.unitCode != null" >
        unit_code = #{record.unitCode,jdbcType=VARCHAR},
      </if>
      <if test="record.postPost != null" >
        post_post = #{record.postPost,jdbcType=VARCHAR},
      </if>
      <if test="record.roleId != null" >
        role_id = #{record.roleId,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserId != null" >
        create_user_id = #{record.createUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.createUser != null" >
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateDate != null" >
        update_date = #{record.updateDate,jdbcType=VARCHAR},
      </if>
      <if test="record.updateUser != null" >
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.remarks != null" >
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.auditStatus != null" >
        audit_status = #{record.auditStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.sts != null" >
        sts = #{record.sts,jdbcType=VARCHAR},
      </if>
      <if test="record.bak1 != null" >
        bak1 = #{record.bak1,jdbcType=VARCHAR},
      </if>
      <if test="record.bak2 != null" >
        bak2 = #{record.bak2,jdbcType=VARCHAR},
      </if>
      <if test="record.bak3 != null" >
        bak3 = #{record.bak3,jdbcType=VARCHAR},
      </if>
      <if test="record.bak4 != null" >
        bak4 = #{record.bak4,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sys_file_kind_auth
    set data_id = #{record.dataId,jdbcType=VARCHAR},
      auth_code = #{record.authCode,jdbcType=VARCHAR},
      auth_name = #{record.authName,jdbcType=VARCHAR},
      file_kind_id = #{record.fileKindId,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      unit_code = #{record.unitCode,jdbcType=VARCHAR},
      post_post = #{record.postPost,jdbcType=VARCHAR},
      role_id = #{record.roleId,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=VARCHAR},
      create_user_id = #{record.createUserId,jdbcType=VARCHAR},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      update_date = #{record.updateDate,jdbcType=VARCHAR},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      audit_status = #{record.auditStatus,jdbcType=VARCHAR},
      sts = #{record.sts,jdbcType=VARCHAR},
      bak1 = #{record.bak1,jdbcType=VARCHAR},
      bak2 = #{record.bak2,jdbcType=VARCHAR},
      bak3 = #{record.bak3,jdbcType=VARCHAR},
      bak4 = #{record.bak4,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pcitc.base.doc.SysFileKindAuth" >
    update sys_file_kind_auth
    <set >
      <if test="authCode != null" >
        auth_code = #{authCode,jdbcType=VARCHAR},
      </if>
      <if test="authName != null" >
        auth_name = #{authName,jdbcType=VARCHAR},
      </if>
      <if test="fileKindId != null" >
        file_kind_id = #{fileKindId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="unitCode != null" >
        unit_code = #{unitCode,jdbcType=VARCHAR},
      </if>
      <if test="postPost != null" >
        post_post = #{postPost,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="auditStatus != null" >
        audit_status = #{auditStatus,jdbcType=VARCHAR},
      </if>
      <if test="sts != null" >
        sts = #{sts,jdbcType=VARCHAR},
      </if>
      <if test="bak1 != null" >
        bak1 = #{bak1,jdbcType=VARCHAR},
      </if>
      <if test="bak2 != null" >
        bak2 = #{bak2,jdbcType=VARCHAR},
      </if>
      <if test="bak3 != null" >
        bak3 = #{bak3,jdbcType=VARCHAR},
      </if>
      <if test="bak4 != null" >
        bak4 = #{bak4,jdbcType=VARCHAR},
      </if>
    </set>
    where data_id = #{dataId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pcitc.base.doc.SysFileKindAuth" >
    update sys_file_kind_auth
    set auth_code = #{authCode,jdbcType=VARCHAR},
      auth_name = #{authName,jdbcType=VARCHAR},
      file_kind_id = #{fileKindId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      unit_code = #{unitCode,jdbcType=VARCHAR},
      post_post = #{postPost,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR},
      audit_status = #{auditStatus,jdbcType=VARCHAR},
      sts = #{sts,jdbcType=VARCHAR},
      bak1 = #{bak1,jdbcType=VARCHAR},
      bak2 = #{bak2,jdbcType=VARCHAR},
      bak3 = #{bak3,jdbcType=VARCHAR},
      bak4 = #{bak4,jdbcType=VARCHAR}
    where data_id = #{dataId,jdbcType=VARCHAR}
  </update>
  
  	<!-- 组织机构树所有节点, 有组织机构和人员、岗位.sSearch文档分类中已配置的用户权限 -->
    <select id="getUnitTreeAndPostAndUserCond" parameterType="com.pcitc.base.system.SysUnit" resultType="com.pcitc.base.common.TreeNode">
		  select u.unit_id as id, u.unit_name as name,u.unit_relation as pid,u.unit_code as code, u.unit_level as levelCode, 'unit' as nodeType, '1' as bak1
		  from sys_unit u 
		  where unit_delflag = 0 
		  
		  union all 
		  select sys_user.user_id as id, sys_user.user_disp as name, sys_user_post.post_id as pid, sys_user.user_name as code, 100, 'user' as nodeType, isnull(sys_file_kind_auth.user_id) as bak1
		  from sys_user_unit,sys_user_post,sys_user left join sys_file_kind_auth on 
		  													(sys_user.user_id = sys_file_kind_auth.user_id and
		  													 sys_file_kind_auth.file_kind_id = #{sSearch,jdbcType=VARCHAR})
		  where sys_user.user_delflag = 0 and sys_user.user_id = sys_user_post.user_id
						and sys_user.user_id=sys_user_unit.user_id 
		        and sys_user_unit.unit_id in (
		  		  select t.unit_id
				  from sys_unit t 
				  where t.unit_delflag = 0 
		  )
		  GROUP BY sys_user.user_id
		  
		  union all 
		  select post_id as id, post_name as name, post_unit as pid, post_code as code, sys_post.post_level as nodeLevel, 'post' as nodeType, '1' as bak1
		  from sys_post 
		  where post_delflag = 0 and post_unit in (
		  		  select t.unit_id
				  from sys_unit t 
				  where unit_delflag = 0 
		  )
    </select>
</mapper>