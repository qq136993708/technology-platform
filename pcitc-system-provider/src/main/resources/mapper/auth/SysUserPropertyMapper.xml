<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pcitc.mapper.system.SysUserPropertyMapper">
	<resultMap id="BaseResultMap" type="com.pcitc.base.system.SysUserProperty">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="user_id" jdbcType="VARCHAR" property="userId" />
		<result column="data_id" jdbcType="VARCHAR" property="dataId" />
		<result column="data_type" jdbcType="VARCHAR" property="dataType" />
		<result column="permission" jdbcType="INTEGER" property="permission" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		<if test="fields == null">
			id, user_id, data_id, data_type, permission
		</if>
		<if test="fields != null">
			${fields}
		</if>
	</sql>
	<select id="selectByExample" parameterType="com.pcitc.base.system.SysUserPropertyExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		'ture' as QUERYID,
		<include refid="Base_Column_List" />
		from sys_user_property
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select
		id,user_id,data_id,data_type,permission
		from sys_user_property
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from sys_user_property
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample" parameterType="com.pcitc.base.system.SysUserPropertyExample">
		delete from sys_user_property
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.pcitc.base.system.SysUserProperty">
		insert into sys_user_property (id, user_id, data_id,
		data_type, permission)
		values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=VARCHAR},
		#{dataId,jdbcType=VARCHAR},
		#{dataType,jdbcType=VARCHAR}, #{permission,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.pcitc.base.system.SysUserProperty">
		insert into sys_user_property
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="dataId != null">
				data_id,
			</if>
			<if test="dataType != null">
				data_type,
			</if>
			<if test="permission != null">
				permission,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=VARCHAR},
			</if>
			<if test="dataId != null">
				#{dataId,jdbcType=VARCHAR},
			</if>
			<if test="dataType != null">
				#{dataType,jdbcType=VARCHAR},
			</if>
			<if test="permission != null">
				#{permission,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.pcitc.base.system.SysUserPropertyExample"
		resultType="java.lang.Integer">
		select count(*) from sys_user_property
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update sys_user_property
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=BIGINT},
			</if>
			<if test="record.userId != null">
				user_id = #{record.userId,jdbcType=VARCHAR},
			</if>
			<if test="record.dataId != null">
				data_id = #{record.dataId,jdbcType=VARCHAR},
			</if>
			<if test="record.dataType != null">
				data_type = #{record.dataType,jdbcType=VARCHAR},
			</if>
			<if test="record.permission != null">
				permission = #{record.permission,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update sys_user_property
		set id = #{record.id,jdbcType=BIGINT},
		user_id = #{record.userId,jdbcType=VARCHAR},
		data_id = #{record.dataId,jdbcType=VARCHAR},
		data_type = #{record.dataType,jdbcType=VARCHAR},
		permission = #{record.permission,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.pcitc.base.system.SysUserProperty">
		update sys_user_property
		<set>
			<if test="userId != null">
				user_id = #{userId,jdbcType=VARCHAR},
			</if>
			<if test="dataId != null">
				data_id = #{dataId,jdbcType=VARCHAR},
			</if>
			<if test="dataType != null">
				data_type = #{dataType,jdbcType=VARCHAR},
			</if>
			<if test="permission != null">
				permission = #{permission,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.pcitc.base.system.SysUserProperty">
		update sys_user_property
		set user_id = #{userId,jdbcType=VARCHAR},
		data_id = #{dataId,jdbcType=VARCHAR},
		data_type = #{dataType,jdbcType=VARCHAR},
		permission = #{permission,jdbcType=INTEGER}
		where id = #{id,jdbcType=BIGINT}
	</update>

	<!-- 获取根节点 记得将根节点的isparent 设置成true -->
	<select id="selectUintTreeByRootId" resultType="com.pcitc.base.common.TreeNode">
		select unit_id as id,unit_name as name,unit_relation as pId ,
			   unit_code as code,'unit' as nodeType
		from sys_unit 
		where 
			unit_relation is null and unit_delflag = 0
		order by unit_code
	</select>


	<!-- 获取根节点用户 -->
	<select id="selectUserUnderRoot" resultType="com.pcitc.base.common.TreeNode">
		select sys_user.user_id as id,sys_user.user_name as name,sys_user.user_unit as pId ,'user' as nodeType
		from sys_user,sys_user_unit,sys_unit
		where 
			sys_user.user_id = sys_user_unit.user_id 
			and sys_unit.unit_id = sys_user_unit.unit_id 
			and sys_unit.unit_relation is null 
			and sys_user.user_delflag = 0
		group by sys_user.user_id
	</select>

	<!-- 获取根节点岗位 -->
	<select id="selectPostUnderRoot" resultType="com.pcitc.base.common.TreeNode">
		select sys_post.post_id as id,sys_post.post_name as name,sys_post.post_unit as pId,'post' as nodeType
		from sys_post,sys_unit
		where 
			sys_unit.unit_id = sys_post.post_unit
  			and sys_unit.unit_relation is null
			and sys_post.post_delflag = 0
	</select>

	<!-- 获取部门下的部门 -->
	<select id="selectChildUnitByUnitId" resultType="com.pcitc.base.common.TreeNode">
		select unit_id as id,unit_name as name,unit_relation as pId ,unit_code as
		code,'unit' as nodeType
		from sys_unit where unit_relation = #{parentId} and unit_delflag = 0
		order by unit_code
	</select>

	<!-- 获取部门下的用户 -->
	<select id="selectUserByUintId" resultType="com.pcitc.base.common.TreeNode">
		select user_id as id,user_disp as name,user_unit as pId ,'user' as nodeType
		from sys_user where INSTR(user_unit,CONCAT(#{parentId}))&gt;0 and
		user_delflag = 0
	</select>

	<!-- 获取部门下的岗位 -->
	<select id="selectPostByUintId" resultType="com.pcitc.base.common.TreeNode">
		select post_id as id,post_name as name,post_unit as pId ,'post' as nodeType
		from sys_post where post_unit=#{parentId} and post_delflag = 0
	</select>

	<!-- 获取岗位下的员工 -->
	<select id="selectUserByPostId" resultType="com.pcitc.base.common.TreeNode">
		select u.user_id as id ,u.user_disp as name, u.user_post as pId,'user' as
		nodeType
		from sys_user u
		left join sys_user_post up on u.user_id = up.user_id
		where up.post_id = #{parentId} and user_delflag = 0
	</select>


	<!-- 批量插入 -->
	<insert id="bantchInsertRelation" useGeneratedKeys="true"
		keyProperty="userId" parameterType="java.util.ArrayList">
		insert into sys_user_property(user_id,data_id,data_type)
		values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(#{item.userId},#{item.dataId},#{item.dataType})
		</foreach>
	</insert>

	<!-- 根据类型删除关系 -->
	<delete id="deleteByDataType" parameterType="java.lang.String">
		delete from sys_user_property
		where data_type = #{dataType,jdbcType=VARCHAR} and user_id in
		<foreach item="userId" collection="userIds" open="("
			separator="," close=")">
			#{userId}
		</foreach>

	</delete>

	<delete id="deleteCurrentPage">
		delete from sys_user_property
		where user_id = #{userId} and data_type =#{dataType} and data_id =
		#{dataId}
	</delete>

	<delete id="deleteCurrentPage1">
		delete from sys_user_property
		where user_id = #{userId} and data_type =#{dataType} and data_id =
		#{dataId}
	</delete>

	<!-- 初始化人员项目对应配置关系列表 （多对一回显） -->

	<select id="selectUserPropertyList" resultType="com.pcitc.base.system.vo.SysUserPropertyVo">
		SELECT p.data_id as projectId,project_name as
		projectName,project_code as projectCode,up.permission
		from epms_project p LEFT JOIN sys_user_property up on up.data_id LIKE CONCAT('%,',p.data_id,',%') 
		<if test="userId!=null and userId!=''.toString">
			and up.user_id = #{userId}
		</if>
		<if test="dataType!=null and dataType!=''.toString">
			and up.data_type = #{dataType}
		</if>
		<if test="projectName!= null and projectName!= ''.toString">
			where p.project_name like '%${projectName}%'
		</if>
		group by p.data_id
		order by p.project_code
		<!-- <if test="iSortCol!=null and iSortCol!=''.toString()"> order by ${iSortCol} 
			${sSortDir_0} </if> -->
	</select>

	<!-- 初始化人员部门对应配置关系列表（多对一回显） -->
	<select id="selectUserPropertyUnitList" resultType="com.pcitc.base.system.vo.SysUserPropertyVo">
		SELECT u.unit_id as projectId,u.unit_name as projectName,u.unit_code
		as projectCode,up.permission
		from sys_unit u LEFT JOIN sys_user_property up on up.data_id LIKE CONCAT('%,',u.unit_id,',%')
		<if test="userId!=null and userId!=''.toString">
			and up.user_id = #{userId}
		</if>
		<if test="dataType!=null and dataType!=''.toString">
			and up.data_type = #{dataType}
		</if>
		where u.unit_delflag = 0
		<if test="projectName!= null and projectName!= ''.toString">
			and u.unit_name like '%${projectName}%'
		</if>
		group by u.unit_id
		order by u.unit_code
		<!-- <if test="iSortCol!=null and iSortCol!=''.toString()"> order by ${iSortCol} 
			${sSortDir_0} </if> -->
	</select>

	<!-- 一对一回显 -->
	<select id="selectUserPropertyList1" resultType="com.pcitc.base.system.vo.SysUserPropertyVo">
		select p.data_id as projectId,project_name as
		projectName,project_code as projectCode,up.permission from
		epms_project p left join sys_user_property up on p.project_id = up.data_id
		<if test="userId!=null and userId!=''.toString">
			and up.user_id = #{userId}
		</if>
		<if test="dataType!=null and dataType!=''.toString">
			and up.data_type = #{dataType}
		</if>
		<if test="iSortCol!=null and iSortCol!=''.toString()">
			order by ${iSortCol} ${sSortDir_0}
		</if>
	</select>

	<!-- 查询某个人在某些数据控制属性上的具体控制数据内容 -->
	<select id="selectUserPropertyByUserAndType" resultMap="BaseResultMap"
		parameterType="java.util.Map">
		select data_type,GROUP_CONCAT(data_id) data_id
		from sys_user_property
		where
		user_id = #{userId,jdbcType=VARCHAR} and
		data_type in (select pro_code from sys_function_property where function_code =
		#{functionCode,jdbcType=VARCHAR})
		group by data_type
		union all
		select pro_code,null
		from sys_function_property where function_code =
		#{functionCode,jdbcType=VARCHAR} and pro_code='create_user_id'
	</select>

	<!-- 根据用户id 获取data_id -->
	<select id="getDataIdByUserId" resultMap="BaseResultMap">
		select data_id,data_type from sys_user_property
		where user_id = #{userId}
	</select>

	<!-- 根据用户id修改用户关联的数据id串 -->
	<update id="updateDataIdByUserId" parameterType="java.lang.String">
		update sys_user_property
		set
		data_id = #{dataId,jdbcType=VARCHAR},
		data_type = #{dataType,jdbcType=VARCHAR}
		where user_id = #{userId,jdbcType=VARCHAR}
	</update>


	<!-- 部门树配置关系 -->
	<select id="selectUserPropertyUnitTree" resultType="com.pcitc.base.common.TreeNode">
		SELECT u.unit_id as id,u.unit_name as name,u.unit_code as
		code,u.unit_relation as pId,up.permission as text
		from sys_unit u LEFT JOIN sys_user_property up on up.data_id LIKE CONCAT('%,',u.unit_id,',%')
		<if test="userId!=null and userId!=''.toString">
			and up.user_id = #{userId}
		</if>
		<if test="dataType!=null and dataType!=''.toString">
			and up.data_type = #{dataType}
		</if>
		where u.unit_delflag = 0
		<if test="projectName!= null and projectName!= ''.toString">
			and u.unit_name like '%${projectName}%'
		</if>
		order by u.unit_code
		<!-- <if test="iSortCol!=null and iSortCol!=''.toString()"> order by ${iSortCol} 
			${sSortDir_0} </if> -->
	</select>

	<!-- 根据用户id 和dataType获取data_id -->
	<select id="getDataIdByUserIdAndDataType" resultMap="BaseResultMap">
		select data_id,data_type from sys_user_property
		where user_id = #{userId} and data_type =#{dataType}
	</select>


	<!-- 根据用户id修改用户关联的数据id串 -->
	<update id="updateDataIdByUserIdAndDataType" parameterType="java.lang.String">
		update sys_user_property
		set
		data_id = #{dataId,jdbcType=VARCHAR},
		data_type = #{dataType,jdbcType=VARCHAR}
		where user_id = #{userId,jdbcType=VARCHAR}
		and data_type = #{dataType,jdbcType=VARCHAR}
	</update>

	<!-- 所选部门下所有部门下的人 -->
	<select id="selectUserByUnitCode" resultType="com.pcitc.base.common.TreeNode">
		select sys_user.user_id as id,sys_user.user_disp as name
		from sys_user,sys_user_unit,sys_unit
		where 
			sys_user.user_id = sys_user_unit.user_id 
			and sys_unit.unit_id = sys_user_unit.unit_id 
			and sys_unit.unit_relation is null 
			and sys_user.user_delflag = 0
			and sys_unit.unit_code like '${parentCode}%'
		group by sys_user.user_id
	</select>
	<!-- 查询所有所选部门下所有岗位 -->
	<select id="selectPostByUnitCode" resultType="com.pcitc.base.common.TreeNode">
		select post_id as id,post_name as name from sys_post p left join sys_unit ut on INSTR(p.post_unit,CONCAT(ut.unit_id))&gt;-1
		where ut.unit_code like
		'${parentCode}%'
	</select>

	<!-- 查询所有所选部门下所有岗位下所有人员 -->
	<select id="selectPostUserByUnitCode" resultType="com.pcitc.base.common.TreeNode">
		select u.user_id as id ,u.user_disp as name, u.user_post as pId,'user' as
		nodeType
		from sys_user u
		left join sys_user_post up on u.user_id =
		up.user_id
		where up.post_id in(
		select post_id from sys_post p
		left join sys_unit ut on INSTR(p.post_unit,CONCAT(ut.unit_id))>0 where
		ut.unit_code like '${parentCode}%'
		) and user_delflag = 0
	</select>

	<!-- 以下为直属研究院配置相关sql -->
	<select id="selectUserPropertyDicList" resultType="com.pcitc.base.system.vo.SysUserPropertyVo">
		select DISTINCT dic.id as projectId,dic.name as projectName, dic.num_value as
		projectCode ,up.permission as permission
		from sys_dictionary dic LEFT JOIN sys_user_property up on up.data_id LIKE CONCAT('%,',dic.num_value,',%')
		<if test="userId!=null and userId!=''.toString">
			and up.user_id = #{userId}
		</if>
		<if test="dataType!=null and dataType!=''.toString">
			and up.data_type = #{dataType}
		</if>
		where dic.parent_code = 'ROOT_XTGL_ZSYJY'
		<if test="projectName!= null and projectName!= ''.toString">
			and dic.name like '%${projectName}%'
		</if>
		group by dic.id
		order by dic.num_value
	</select>

	<!-- 查询某人在某个dataType下管理的数据 -->
	<select id="selectUserPropertyByUserIdAndDataType" resultMap="BaseResultMap" parameterType="java.util.Map">
		select data_type,GROUP_CONCAT(data_id) data_id
		from sys_user_property
		where
		user_id = #{userId,jdbcType=VARCHAR} and
		data_type #{dataType,jdbcType=VARCHAR}
		group by data_type
	</select>





</mapper>