<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pcitc.mapper.out.OutProjectInfoMapper" >
  <resultMap id="BaseResultMap" type="com.pcitc.base.stp.out.OutProjectInfo" >
    <id column="data_id" property="dataId" jdbcType="VARCHAR" />
    <result column="nd" property="nd" jdbcType="VARCHAR" />
    <result column="xmid" property="xmid" jdbcType="VARCHAR" />
    <result column="hth" property="hth" jdbcType="VARCHAR" />
    <result column="xmmc" property="xmmc" jdbcType="VARCHAR" />
    <result column="xmjb" property="xmjb" jdbcType="VARCHAR" />
    <result column="jf" property="jf" jdbcType="VARCHAR" />
    <result column="fwdxbm" property="fwdxbm" jdbcType="VARCHAR" />
    <result column="fwdx" property="fwdx" jdbcType="VARCHAR" />
    <result column="zylbbm" property="zylbbm" jdbcType="VARCHAR" />
    <result column="zylb" property="zylb" jdbcType="VARCHAR" />
    <result column="fzdwbm" property="fzdwbm" jdbcType="VARCHAR" />
    <result column="fzdw" property="fzdw" jdbcType="VARCHAR" />
    <result column="jtfzdwbm" property="jtfzdwbm" jdbcType="VARCHAR" />
    <result column="jtfzdw" property="jtfzdw" jdbcType="VARCHAR" />
    <result column="fzrxm" property="fzrxm" jdbcType="VARCHAR" />
    <result column="jssxxm" property="jssxxm" jdbcType="VARCHAR" />
    <result column="yjsj" property="yjsj" jdbcType="VARCHAR" />
    <result column="zyly" property="zyly" jdbcType="VARCHAR" />
    <result column="zysx" property="zysx" jdbcType="VARCHAR" />
    <result column="sjid" property="sjid" jdbcType="VARCHAR" />
    <result column="lxbj" property="lxbj" jdbcType="VARCHAR" />
    <result column="yjnr" property="yjnr" jdbcType="VARCHAR" />
    <result column="jdap" property="jdap" jdbcType="VARCHAR" />
    <result column="yjmb" property="yjmb" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="create_person" property="createPerson" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="project_id" property="projectId" jdbcType="VARCHAR" />
    <result column="parent_project_id" property="parentProjectId" jdbcType="VARCHAR" />
    <result column="project_type" property="projectType" jdbcType="VARCHAR" />
    <result column="erp_project_code" property="erpProjectCode" jdbcType="VARCHAR" />
    <result column="erp_project_name" property="erpProjectName" jdbcType="VARCHAR" />
    <result column="project_scope" property="projectScope" jdbcType="VARCHAR" />
    <result column="project_level" property="projectLevel" jdbcType="VARCHAR" />
    <result column="project_property" property="projectProperty" jdbcType="VARCHAR" />
    <result column="project_abc" property="projectAbc" jdbcType="VARCHAR" />
    <result column="project_source" property="projectSource" jdbcType="VARCHAR" />
    <result column="yjsjks" property="yjsjks" jdbcType="VARCHAR" />
    <result column="yjsjjs" property="yjsjjs" jdbcType="VARCHAR" />
    <result column="xmlbbm" property="xmlbbm" jdbcType="VARCHAR" />
    <result column="xmlbmc" property="xmlbmc" jdbcType="VARCHAR" />
    <result column="gsbmmc" property="gsbmmc" jdbcType="VARCHAR" />
    <result column="gsbmbm" property="gsbmbm" jdbcType="VARCHAR" />
    <result column="zycmc" property="zycmc" jdbcType="VARCHAR" />
    <result column="zycbm" property="zycbm" jdbcType="VARCHAR" />
    <result column="type_flag" property="typeFlag" jdbcType="VARCHAR" />
    <result column="define1" property="define1" jdbcType="VARCHAR" />
    <result column="define2" property="define2" jdbcType="VARCHAR" />
    <result column="define3" property="define3" jdbcType="VARCHAR" />
    <result column="define4" property="define4" jdbcType="VARCHAR" />
    <result column="define5" property="define5" jdbcType="VARCHAR" />
    <result column="define6" property="define6" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    data_id, nd, xmid, hth, xmmc, xmjb, jf, fwdxbm, fwdx, zylbbm, zylb, fzdwbm, fzdw, 
    jtfzdwbm, jtfzdw, fzrxm, jssxxm, yjsj, zyly, zysx, sjid, lxbj, yjnr, jdap, yjmb, 
    create_date, create_person, status, update_date, project_id, parent_project_id, project_type, 
    erp_project_code, erp_project_name, project_scope, project_level, project_property, 
    project_abc, project_source, yjsjks, yjsjjs, xmlbbm, xmlbmc, gsbmmc, gsbmbm, zycmc, 
    zycbm, type_flag, define1, define2, define3, define4, define5, define6
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pcitc.base.stp.out.OutProjectInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from out_project_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from out_project_info
    where data_id = #{dataId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from out_project_info
    where data_id = #{dataId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.pcitc.base.stp.out.OutProjectInfoExample" >
    delete from out_project_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pcitc.base.stp.out.OutProjectInfo" >
    insert into out_project_info (data_id, nd, xmid, 
      hth, xmmc, xmjb, jf, 
      fwdxbm, fwdx, zylbbm, 
      zylb, fzdwbm, fzdw, 
      jtfzdwbm, jtfzdw, fzrxm, 
      jssxxm, yjsj, zyly, 
      zysx, sjid, lxbj, yjnr, 
      jdap, yjmb, create_date, 
      create_person, status, update_date, 
      project_id, parent_project_id, project_type, 
      erp_project_code, erp_project_name, project_scope, 
      project_level, project_property, project_abc, 
      project_source, yjsjks, yjsjjs, 
      xmlbbm, xmlbmc, gsbmmc, 
      gsbmbm, zycmc, zycbm, 
      type_flag, define1, define2, 
      define3, define4, define5, 
      define6)
    values (#{dataId,jdbcType=VARCHAR}, #{nd,jdbcType=VARCHAR}, #{xmid,jdbcType=VARCHAR}, 
      #{hth,jdbcType=VARCHAR}, #{xmmc,jdbcType=VARCHAR}, #{xmjb,jdbcType=VARCHAR}, #{jf,jdbcType=VARCHAR}, 
      #{fwdxbm,jdbcType=VARCHAR}, #{fwdx,jdbcType=VARCHAR}, #{zylbbm,jdbcType=VARCHAR}, 
      #{zylb,jdbcType=VARCHAR}, #{fzdwbm,jdbcType=VARCHAR}, #{fzdw,jdbcType=VARCHAR}, 
      #{jtfzdwbm,jdbcType=VARCHAR}, #{jtfzdw,jdbcType=VARCHAR}, #{fzrxm,jdbcType=VARCHAR}, 
      #{jssxxm,jdbcType=VARCHAR}, #{yjsj,jdbcType=VARCHAR}, #{zyly,jdbcType=VARCHAR}, 
      #{zysx,jdbcType=VARCHAR}, #{sjid,jdbcType=VARCHAR}, #{lxbj,jdbcType=VARCHAR}, #{yjnr,jdbcType=VARCHAR}, 
      #{jdap,jdbcType=VARCHAR}, #{yjmb,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{createPerson,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP}, 
      #{projectId,jdbcType=VARCHAR}, #{parentProjectId,jdbcType=VARCHAR}, #{projectType,jdbcType=VARCHAR}, 
      #{erpProjectCode,jdbcType=VARCHAR}, #{erpProjectName,jdbcType=VARCHAR}, #{projectScope,jdbcType=VARCHAR}, 
      #{projectLevel,jdbcType=VARCHAR}, #{projectProperty,jdbcType=VARCHAR}, #{projectAbc,jdbcType=VARCHAR}, 
      #{projectSource,jdbcType=VARCHAR}, #{yjsjks,jdbcType=VARCHAR}, #{yjsjjs,jdbcType=VARCHAR}, 
      #{xmlbbm,jdbcType=VARCHAR}, #{xmlbmc,jdbcType=VARCHAR}, #{gsbmmc,jdbcType=VARCHAR}, 
      #{gsbmbm,jdbcType=VARCHAR}, #{zycmc,jdbcType=VARCHAR}, #{zycbm,jdbcType=VARCHAR}, 
      #{typeFlag,jdbcType=VARCHAR}, #{define1,jdbcType=VARCHAR}, #{define2,jdbcType=VARCHAR}, 
      #{define3,jdbcType=VARCHAR}, #{define4,jdbcType=VARCHAR}, #{define5,jdbcType=VARCHAR}, 
      #{define6,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.pcitc.base.stp.out.OutProjectInfo" >
    insert into out_project_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="dataId != null" >
        data_id,
      </if>
      <if test="nd != null" >
        nd,
      </if>
      <if test="xmid != null" >
        xmid,
      </if>
      <if test="hth != null" >
        hth,
      </if>
      <if test="xmmc != null" >
        xmmc,
      </if>
      <if test="xmjb != null" >
        xmjb,
      </if>
      <if test="jf != null" >
        jf,
      </if>
      <if test="fwdxbm != null" >
        fwdxbm,
      </if>
      <if test="fwdx != null" >
        fwdx,
      </if>
      <if test="zylbbm != null" >
        zylbbm,
      </if>
      <if test="zylb != null" >
        zylb,
      </if>
      <if test="fzdwbm != null" >
        fzdwbm,
      </if>
      <if test="fzdw != null" >
        fzdw,
      </if>
      <if test="jtfzdwbm != null" >
        jtfzdwbm,
      </if>
      <if test="jtfzdw != null" >
        jtfzdw,
      </if>
      <if test="fzrxm != null" >
        fzrxm,
      </if>
      <if test="jssxxm != null" >
        jssxxm,
      </if>
      <if test="yjsj != null" >
        yjsj,
      </if>
      <if test="zyly != null" >
        zyly,
      </if>
      <if test="zysx != null" >
        zysx,
      </if>
      <if test="sjid != null" >
        sjid,
      </if>
      <if test="lxbj != null" >
        lxbj,
      </if>
      <if test="yjnr != null" >
        yjnr,
      </if>
      <if test="jdap != null" >
        jdap,
      </if>
      <if test="yjmb != null" >
        yjmb,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="createPerson != null" >
        create_person,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="projectId != null" >
        project_id,
      </if>
      <if test="parentProjectId != null" >
        parent_project_id,
      </if>
      <if test="projectType != null" >
        project_type,
      </if>
      <if test="erpProjectCode != null" >
        erp_project_code,
      </if>
      <if test="erpProjectName != null" >
        erp_project_name,
      </if>
      <if test="projectScope != null" >
        project_scope,
      </if>
      <if test="projectLevel != null" >
        project_level,
      </if>
      <if test="projectProperty != null" >
        project_property,
      </if>
      <if test="projectAbc != null" >
        project_abc,
      </if>
      <if test="projectSource != null" >
        project_source,
      </if>
      <if test="yjsjks != null" >
        yjsjks,
      </if>
      <if test="yjsjjs != null" >
        yjsjjs,
      </if>
      <if test="xmlbbm != null" >
        xmlbbm,
      </if>
      <if test="xmlbmc != null" >
        xmlbmc,
      </if>
      <if test="gsbmmc != null" >
        gsbmmc,
      </if>
      <if test="gsbmbm != null" >
        gsbmbm,
      </if>
      <if test="zycmc != null" >
        zycmc,
      </if>
      <if test="zycbm != null" >
        zycbm,
      </if>
      <if test="typeFlag != null" >
        type_flag,
      </if>
      <if test="define1 != null" >
        define1,
      </if>
      <if test="define2 != null" >
        define2,
      </if>
      <if test="define3 != null" >
        define3,
      </if>
      <if test="define4 != null" >
        define4,
      </if>
      <if test="define5 != null" >
        define5,
      </if>
      <if test="define6 != null" >
        define6,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="dataId != null" >
        #{dataId,jdbcType=VARCHAR},
      </if>
      <if test="nd != null" >
        #{nd,jdbcType=VARCHAR},
      </if>
      <if test="xmid != null" >
        #{xmid,jdbcType=VARCHAR},
      </if>
      <if test="hth != null" >
        #{hth,jdbcType=VARCHAR},
      </if>
      <if test="xmmc != null" >
        #{xmmc,jdbcType=VARCHAR},
      </if>
      <if test="xmjb != null" >
        #{xmjb,jdbcType=VARCHAR},
      </if>
      <if test="jf != null" >
        #{jf,jdbcType=VARCHAR},
      </if>
      <if test="fwdxbm != null" >
        #{fwdxbm,jdbcType=VARCHAR},
      </if>
      <if test="fwdx != null" >
        #{fwdx,jdbcType=VARCHAR},
      </if>
      <if test="zylbbm != null" >
        #{zylbbm,jdbcType=VARCHAR},
      </if>
      <if test="zylb != null" >
        #{zylb,jdbcType=VARCHAR},
      </if>
      <if test="fzdwbm != null" >
        #{fzdwbm,jdbcType=VARCHAR},
      </if>
      <if test="fzdw != null" >
        #{fzdw,jdbcType=VARCHAR},
      </if>
      <if test="jtfzdwbm != null" >
        #{jtfzdwbm,jdbcType=VARCHAR},
      </if>
      <if test="jtfzdw != null" >
        #{jtfzdw,jdbcType=VARCHAR},
      </if>
      <if test="fzrxm != null" >
        #{fzrxm,jdbcType=VARCHAR},
      </if>
      <if test="jssxxm != null" >
        #{jssxxm,jdbcType=VARCHAR},
      </if>
      <if test="yjsj != null" >
        #{yjsj,jdbcType=VARCHAR},
      </if>
      <if test="zyly != null" >
        #{zyly,jdbcType=VARCHAR},
      </if>
      <if test="zysx != null" >
        #{zysx,jdbcType=VARCHAR},
      </if>
      <if test="sjid != null" >
        #{sjid,jdbcType=VARCHAR},
      </if>
      <if test="lxbj != null" >
        #{lxbj,jdbcType=VARCHAR},
      </if>
      <if test="yjnr != null" >
        #{yjnr,jdbcType=VARCHAR},
      </if>
      <if test="jdap != null" >
        #{jdap,jdbcType=VARCHAR},
      </if>
      <if test="yjmb != null" >
        #{yjmb,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createPerson != null" >
        #{createPerson,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="projectId != null" >
        #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="parentProjectId != null" >
        #{parentProjectId,jdbcType=VARCHAR},
      </if>
      <if test="projectType != null" >
        #{projectType,jdbcType=VARCHAR},
      </if>
      <if test="erpProjectCode != null" >
        #{erpProjectCode,jdbcType=VARCHAR},
      </if>
      <if test="erpProjectName != null" >
        #{erpProjectName,jdbcType=VARCHAR},
      </if>
      <if test="projectScope != null" >
        #{projectScope,jdbcType=VARCHAR},
      </if>
      <if test="projectLevel != null" >
        #{projectLevel,jdbcType=VARCHAR},
      </if>
      <if test="projectProperty != null" >
        #{projectProperty,jdbcType=VARCHAR},
      </if>
      <if test="projectAbc != null" >
        #{projectAbc,jdbcType=VARCHAR},
      </if>
      <if test="projectSource != null" >
        #{projectSource,jdbcType=VARCHAR},
      </if>
      <if test="yjsjks != null" >
        #{yjsjks,jdbcType=VARCHAR},
      </if>
      <if test="yjsjjs != null" >
        #{yjsjjs,jdbcType=VARCHAR},
      </if>
      <if test="xmlbbm != null" >
        #{xmlbbm,jdbcType=VARCHAR},
      </if>
      <if test="xmlbmc != null" >
        #{xmlbmc,jdbcType=VARCHAR},
      </if>
      <if test="gsbmmc != null" >
        #{gsbmmc,jdbcType=VARCHAR},
      </if>
      <if test="gsbmbm != null" >
        #{gsbmbm,jdbcType=VARCHAR},
      </if>
      <if test="zycmc != null" >
        #{zycmc,jdbcType=VARCHAR},
      </if>
      <if test="zycbm != null" >
        #{zycbm,jdbcType=VARCHAR},
      </if>
      <if test="typeFlag != null" >
        #{typeFlag,jdbcType=VARCHAR},
      </if>
      <if test="define1 != null" >
        #{define1,jdbcType=VARCHAR},
      </if>
      <if test="define2 != null" >
        #{define2,jdbcType=VARCHAR},
      </if>
      <if test="define3 != null" >
        #{define3,jdbcType=VARCHAR},
      </if>
      <if test="define4 != null" >
        #{define4,jdbcType=VARCHAR},
      </if>
      <if test="define5 != null" >
        #{define5,jdbcType=VARCHAR},
      </if>
      <if test="define6 != null" >
        #{define6,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pcitc.base.stp.out.OutProjectInfoExample" resultType="java.lang.Integer" >
    select count(*) from out_project_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update out_project_info
    <set >
      <if test="record.dataId != null" >
        data_id = #{record.dataId,jdbcType=VARCHAR},
      </if>
      <if test="record.nd != null" >
        nd = #{record.nd,jdbcType=VARCHAR},
      </if>
      <if test="record.xmid != null" >
        xmid = #{record.xmid,jdbcType=VARCHAR},
      </if>
      <if test="record.hth != null" >
        hth = #{record.hth,jdbcType=VARCHAR},
      </if>
      <if test="record.xmmc != null" >
        xmmc = #{record.xmmc,jdbcType=VARCHAR},
      </if>
      <if test="record.xmjb != null" >
        xmjb = #{record.xmjb,jdbcType=VARCHAR},
      </if>
      <if test="record.jf != null" >
        jf = #{record.jf,jdbcType=VARCHAR},
      </if>
      <if test="record.fwdxbm != null" >
        fwdxbm = #{record.fwdxbm,jdbcType=VARCHAR},
      </if>
      <if test="record.fwdx != null" >
        fwdx = #{record.fwdx,jdbcType=VARCHAR},
      </if>
      <if test="record.zylbbm != null" >
        zylbbm = #{record.zylbbm,jdbcType=VARCHAR},
      </if>
      <if test="record.zylb != null" >
        zylb = #{record.zylb,jdbcType=VARCHAR},
      </if>
      <if test="record.fzdwbm != null" >
        fzdwbm = #{record.fzdwbm,jdbcType=VARCHAR},
      </if>
      <if test="record.fzdw != null" >
        fzdw = #{record.fzdw,jdbcType=VARCHAR},
      </if>
      <if test="record.jtfzdwbm != null" >
        jtfzdwbm = #{record.jtfzdwbm,jdbcType=VARCHAR},
      </if>
      <if test="record.jtfzdw != null" >
        jtfzdw = #{record.jtfzdw,jdbcType=VARCHAR},
      </if>
      <if test="record.fzrxm != null" >
        fzrxm = #{record.fzrxm,jdbcType=VARCHAR},
      </if>
      <if test="record.jssxxm != null" >
        jssxxm = #{record.jssxxm,jdbcType=VARCHAR},
      </if>
      <if test="record.yjsj != null" >
        yjsj = #{record.yjsj,jdbcType=VARCHAR},
      </if>
      <if test="record.zyly != null" >
        zyly = #{record.zyly,jdbcType=VARCHAR},
      </if>
      <if test="record.zysx != null" >
        zysx = #{record.zysx,jdbcType=VARCHAR},
      </if>
      <if test="record.sjid != null" >
        sjid = #{record.sjid,jdbcType=VARCHAR},
      </if>
      <if test="record.lxbj != null" >
        lxbj = #{record.lxbj,jdbcType=VARCHAR},
      </if>
      <if test="record.yjnr != null" >
        yjnr = #{record.yjnr,jdbcType=VARCHAR},
      </if>
      <if test="record.jdap != null" >
        jdap = #{record.jdap,jdbcType=VARCHAR},
      </if>
      <if test="record.yjmb != null" >
        yjmb = #{record.yjmb,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createPerson != null" >
        create_person = #{record.createPerson,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.updateDate != null" >
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.projectId != null" >
        project_id = #{record.projectId,jdbcType=VARCHAR},
      </if>
      <if test="record.parentProjectId != null" >
        parent_project_id = #{record.parentProjectId,jdbcType=VARCHAR},
      </if>
      <if test="record.projectType != null" >
        project_type = #{record.projectType,jdbcType=VARCHAR},
      </if>
      <if test="record.erpProjectCode != null" >
        erp_project_code = #{record.erpProjectCode,jdbcType=VARCHAR},
      </if>
      <if test="record.erpProjectName != null" >
        erp_project_name = #{record.erpProjectName,jdbcType=VARCHAR},
      </if>
      <if test="record.projectScope != null" >
        project_scope = #{record.projectScope,jdbcType=VARCHAR},
      </if>
      <if test="record.projectLevel != null" >
        project_level = #{record.projectLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.projectProperty != null" >
        project_property = #{record.projectProperty,jdbcType=VARCHAR},
      </if>
      <if test="record.projectAbc != null" >
        project_abc = #{record.projectAbc,jdbcType=VARCHAR},
      </if>
      <if test="record.projectSource != null" >
        project_source = #{record.projectSource,jdbcType=VARCHAR},
      </if>
      <if test="record.yjsjks != null" >
        yjsjks = #{record.yjsjks,jdbcType=VARCHAR},
      </if>
      <if test="record.yjsjjs != null" >
        yjsjjs = #{record.yjsjjs,jdbcType=VARCHAR},
      </if>
      <if test="record.xmlbbm != null" >
        xmlbbm = #{record.xmlbbm,jdbcType=VARCHAR},
      </if>
      <if test="record.xmlbmc != null" >
        xmlbmc = #{record.xmlbmc,jdbcType=VARCHAR},
      </if>
      <if test="record.gsbmmc != null" >
        gsbmmc = #{record.gsbmmc,jdbcType=VARCHAR},
      </if>
      <if test="record.gsbmbm != null" >
        gsbmbm = #{record.gsbmbm,jdbcType=VARCHAR},
      </if>
      <if test="record.zycmc != null" >
        zycmc = #{record.zycmc,jdbcType=VARCHAR},
      </if>
      <if test="record.zycbm != null" >
        zycbm = #{record.zycbm,jdbcType=VARCHAR},
      </if>
      <if test="record.typeFlag != null" >
        type_flag = #{record.typeFlag,jdbcType=VARCHAR},
      </if>
      <if test="record.define1 != null" >
        define1 = #{record.define1,jdbcType=VARCHAR},
      </if>
      <if test="record.define2 != null" >
        define2 = #{record.define2,jdbcType=VARCHAR},
      </if>
      <if test="record.define3 != null" >
        define3 = #{record.define3,jdbcType=VARCHAR},
      </if>
      <if test="record.define4 != null" >
        define4 = #{record.define4,jdbcType=VARCHAR},
      </if>
      <if test="record.define5 != null" >
        define5 = #{record.define5,jdbcType=VARCHAR},
      </if>
      <if test="record.define6 != null" >
        define6 = #{record.define6,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update out_project_info
    set data_id = #{record.dataId,jdbcType=VARCHAR},
      nd = #{record.nd,jdbcType=VARCHAR},
      xmid = #{record.xmid,jdbcType=VARCHAR},
      hth = #{record.hth,jdbcType=VARCHAR},
      xmmc = #{record.xmmc,jdbcType=VARCHAR},
      xmjb = #{record.xmjb,jdbcType=VARCHAR},
      jf = #{record.jf,jdbcType=VARCHAR},
      fwdxbm = #{record.fwdxbm,jdbcType=VARCHAR},
      fwdx = #{record.fwdx,jdbcType=VARCHAR},
      zylbbm = #{record.zylbbm,jdbcType=VARCHAR},
      zylb = #{record.zylb,jdbcType=VARCHAR},
      fzdwbm = #{record.fzdwbm,jdbcType=VARCHAR},
      fzdw = #{record.fzdw,jdbcType=VARCHAR},
      jtfzdwbm = #{record.jtfzdwbm,jdbcType=VARCHAR},
      jtfzdw = #{record.jtfzdw,jdbcType=VARCHAR},
      fzrxm = #{record.fzrxm,jdbcType=VARCHAR},
      jssxxm = #{record.jssxxm,jdbcType=VARCHAR},
      yjsj = #{record.yjsj,jdbcType=VARCHAR},
      zyly = #{record.zyly,jdbcType=VARCHAR},
      zysx = #{record.zysx,jdbcType=VARCHAR},
      sjid = #{record.sjid,jdbcType=VARCHAR},
      lxbj = #{record.lxbj,jdbcType=VARCHAR},
      yjnr = #{record.yjnr,jdbcType=VARCHAR},
      jdap = #{record.jdap,jdbcType=VARCHAR},
      yjmb = #{record.yjmb,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      create_person = #{record.createPerson,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      project_id = #{record.projectId,jdbcType=VARCHAR},
      parent_project_id = #{record.parentProjectId,jdbcType=VARCHAR},
      project_type = #{record.projectType,jdbcType=VARCHAR},
      erp_project_code = #{record.erpProjectCode,jdbcType=VARCHAR},
      erp_project_name = #{record.erpProjectName,jdbcType=VARCHAR},
      project_scope = #{record.projectScope,jdbcType=VARCHAR},
      project_level = #{record.projectLevel,jdbcType=VARCHAR},
      project_property = #{record.projectProperty,jdbcType=VARCHAR},
      project_abc = #{record.projectAbc,jdbcType=VARCHAR},
      project_source = #{record.projectSource,jdbcType=VARCHAR},
      yjsjks = #{record.yjsjks,jdbcType=VARCHAR},
      yjsjjs = #{record.yjsjjs,jdbcType=VARCHAR},
      xmlbbm = #{record.xmlbbm,jdbcType=VARCHAR},
      xmlbmc = #{record.xmlbmc,jdbcType=VARCHAR},
      gsbmmc = #{record.gsbmmc,jdbcType=VARCHAR},
      gsbmbm = #{record.gsbmbm,jdbcType=VARCHAR},
      zycmc = #{record.zycmc,jdbcType=VARCHAR},
      zycbm = #{record.zycbm,jdbcType=VARCHAR},
      type_flag = #{record.typeFlag,jdbcType=VARCHAR},
      define1 = #{record.define1,jdbcType=VARCHAR},
      define2 = #{record.define2,jdbcType=VARCHAR},
      define3 = #{record.define3,jdbcType=VARCHAR},
      define4 = #{record.define4,jdbcType=VARCHAR},
      define5 = #{record.define5,jdbcType=VARCHAR},
      define6 = #{record.define6,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pcitc.base.stp.out.OutProjectInfo" >
    update out_project_info
    <set >
      <if test="nd != null" >
        nd = #{nd,jdbcType=VARCHAR},
      </if>
      <if test="xmid != null" >
        xmid = #{xmid,jdbcType=VARCHAR},
      </if>
      <if test="hth != null" >
        hth = #{hth,jdbcType=VARCHAR},
      </if>
      <if test="xmmc != null" >
        xmmc = #{xmmc,jdbcType=VARCHAR},
      </if>
      <if test="xmjb != null" >
        xmjb = #{xmjb,jdbcType=VARCHAR},
      </if>
      <if test="jf != null" >
        jf = #{jf,jdbcType=VARCHAR},
      </if>
      <if test="fwdxbm != null" >
        fwdxbm = #{fwdxbm,jdbcType=VARCHAR},
      </if>
      <if test="fwdx != null" >
        fwdx = #{fwdx,jdbcType=VARCHAR},
      </if>
      <if test="zylbbm != null" >
        zylbbm = #{zylbbm,jdbcType=VARCHAR},
      </if>
      <if test="zylb != null" >
        zylb = #{zylb,jdbcType=VARCHAR},
      </if>
      <if test="fzdwbm != null" >
        fzdwbm = #{fzdwbm,jdbcType=VARCHAR},
      </if>
      <if test="fzdw != null" >
        fzdw = #{fzdw,jdbcType=VARCHAR},
      </if>
      <if test="jtfzdwbm != null" >
        jtfzdwbm = #{jtfzdwbm,jdbcType=VARCHAR},
      </if>
      <if test="jtfzdw != null" >
        jtfzdw = #{jtfzdw,jdbcType=VARCHAR},
      </if>
      <if test="fzrxm != null" >
        fzrxm = #{fzrxm,jdbcType=VARCHAR},
      </if>
      <if test="jssxxm != null" >
        jssxxm = #{jssxxm,jdbcType=VARCHAR},
      </if>
      <if test="yjsj != null" >
        yjsj = #{yjsj,jdbcType=VARCHAR},
      </if>
      <if test="zyly != null" >
        zyly = #{zyly,jdbcType=VARCHAR},
      </if>
      <if test="zysx != null" >
        zysx = #{zysx,jdbcType=VARCHAR},
      </if>
      <if test="sjid != null" >
        sjid = #{sjid,jdbcType=VARCHAR},
      </if>
      <if test="lxbj != null" >
        lxbj = #{lxbj,jdbcType=VARCHAR},
      </if>
      <if test="yjnr != null" >
        yjnr = #{yjnr,jdbcType=VARCHAR},
      </if>
      <if test="jdap != null" >
        jdap = #{jdap,jdbcType=VARCHAR},
      </if>
      <if test="yjmb != null" >
        yjmb = #{yjmb,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createPerson != null" >
        create_person = #{createPerson,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="projectId != null" >
        project_id = #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="parentProjectId != null" >
        parent_project_id = #{parentProjectId,jdbcType=VARCHAR},
      </if>
      <if test="projectType != null" >
        project_type = #{projectType,jdbcType=VARCHAR},
      </if>
      <if test="erpProjectCode != null" >
        erp_project_code = #{erpProjectCode,jdbcType=VARCHAR},
      </if>
      <if test="erpProjectName != null" >
        erp_project_name = #{erpProjectName,jdbcType=VARCHAR},
      </if>
      <if test="projectScope != null" >
        project_scope = #{projectScope,jdbcType=VARCHAR},
      </if>
      <if test="projectLevel != null" >
        project_level = #{projectLevel,jdbcType=VARCHAR},
      </if>
      <if test="projectProperty != null" >
        project_property = #{projectProperty,jdbcType=VARCHAR},
      </if>
      <if test="projectAbc != null" >
        project_abc = #{projectAbc,jdbcType=VARCHAR},
      </if>
      <if test="projectSource != null" >
        project_source = #{projectSource,jdbcType=VARCHAR},
      </if>
      <if test="yjsjks != null" >
        yjsjks = #{yjsjks,jdbcType=VARCHAR},
      </if>
      <if test="yjsjjs != null" >
        yjsjjs = #{yjsjjs,jdbcType=VARCHAR},
      </if>
      <if test="xmlbbm != null" >
        xmlbbm = #{xmlbbm,jdbcType=VARCHAR},
      </if>
      <if test="xmlbmc != null" >
        xmlbmc = #{xmlbmc,jdbcType=VARCHAR},
      </if>
      <if test="gsbmmc != null" >
        gsbmmc = #{gsbmmc,jdbcType=VARCHAR},
      </if>
      <if test="gsbmbm != null" >
        gsbmbm = #{gsbmbm,jdbcType=VARCHAR},
      </if>
      <if test="zycmc != null" >
        zycmc = #{zycmc,jdbcType=VARCHAR},
      </if>
      <if test="zycbm != null" >
        zycbm = #{zycbm,jdbcType=VARCHAR},
      </if>
      <if test="typeFlag != null" >
        type_flag = #{typeFlag,jdbcType=VARCHAR},
      </if>
      <if test="define1 != null" >
        define1 = #{define1,jdbcType=VARCHAR},
      </if>
      <if test="define2 != null" >
        define2 = #{define2,jdbcType=VARCHAR},
      </if>
      <if test="define3 != null" >
        define3 = #{define3,jdbcType=VARCHAR},
      </if>
      <if test="define4 != null" >
        define4 = #{define4,jdbcType=VARCHAR},
      </if>
      <if test="define5 != null" >
        define5 = #{define5,jdbcType=VARCHAR},
      </if>
      <if test="define6 != null" >
        define6 = #{define6,jdbcType=VARCHAR},
      </if>
    </set>
    where data_id = #{dataId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pcitc.base.stp.out.OutProjectInfo" >
    update out_project_info
    set nd = #{nd,jdbcType=VARCHAR},
      xmid = #{xmid,jdbcType=VARCHAR},
      hth = #{hth,jdbcType=VARCHAR},
      xmmc = #{xmmc,jdbcType=VARCHAR},
      xmjb = #{xmjb,jdbcType=VARCHAR},
      jf = #{jf,jdbcType=VARCHAR},
      fwdxbm = #{fwdxbm,jdbcType=VARCHAR},
      fwdx = #{fwdx,jdbcType=VARCHAR},
      zylbbm = #{zylbbm,jdbcType=VARCHAR},
      zylb = #{zylb,jdbcType=VARCHAR},
      fzdwbm = #{fzdwbm,jdbcType=VARCHAR},
      fzdw = #{fzdw,jdbcType=VARCHAR},
      jtfzdwbm = #{jtfzdwbm,jdbcType=VARCHAR},
      jtfzdw = #{jtfzdw,jdbcType=VARCHAR},
      fzrxm = #{fzrxm,jdbcType=VARCHAR},
      jssxxm = #{jssxxm,jdbcType=VARCHAR},
      yjsj = #{yjsj,jdbcType=VARCHAR},
      zyly = #{zyly,jdbcType=VARCHAR},
      zysx = #{zysx,jdbcType=VARCHAR},
      sjid = #{sjid,jdbcType=VARCHAR},
      lxbj = #{lxbj,jdbcType=VARCHAR},
      yjnr = #{yjnr,jdbcType=VARCHAR},
      jdap = #{jdap,jdbcType=VARCHAR},
      yjmb = #{yjmb,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      create_person = #{createPerson,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      project_id = #{projectId,jdbcType=VARCHAR},
      parent_project_id = #{parentProjectId,jdbcType=VARCHAR},
      project_type = #{projectType,jdbcType=VARCHAR},
      erp_project_code = #{erpProjectCode,jdbcType=VARCHAR},
      erp_project_name = #{erpProjectName,jdbcType=VARCHAR},
      project_scope = #{projectScope,jdbcType=VARCHAR},
      project_level = #{projectLevel,jdbcType=VARCHAR},
      project_property = #{projectProperty,jdbcType=VARCHAR},
      project_abc = #{projectAbc,jdbcType=VARCHAR},
      project_source = #{projectSource,jdbcType=VARCHAR},
      yjsjks = #{yjsjks,jdbcType=VARCHAR},
      yjsjjs = #{yjsjjs,jdbcType=VARCHAR},
      xmlbbm = #{xmlbbm,jdbcType=VARCHAR},
      xmlbmc = #{xmlbmc,jdbcType=VARCHAR},
      gsbmmc = #{gsbmmc,jdbcType=VARCHAR},
      gsbmbm = #{gsbmbm,jdbcType=VARCHAR},
      zycmc = #{zycmc,jdbcType=VARCHAR},
      zycbm = #{zycbm,jdbcType=VARCHAR},
      type_flag = #{typeFlag,jdbcType=VARCHAR},
      define1 = #{define1,jdbcType=VARCHAR},
      define2 = #{define2,jdbcType=VARCHAR},
      define3 = #{define3,jdbcType=VARCHAR},
      define4 = #{define4,jdbcType=VARCHAR},
      define5 = #{define5,jdbcType=VARCHAR},
      define6 = #{define6,jdbcType=VARCHAR}
    where data_id = #{dataId,jdbcType=VARCHAR}
  </update>
  
  <select id="copyData" parameterType="java.lang.String">
		insert into
		out_project_info_tem select * from out_project_info
		where nd =
		#{nd,jdbcType=VARCHAR}
	</select>

	<!-- 批量插入项目数据 -->
	<insert id="insertOutProjectBatch" parameterType="java.util.List">
		insert into out_project_info (data_id, nd, xmid, hth,
		xmmc, xmjb, jf,
		fwdxbm, fwdx,
		zylbbm, zylb, fzdwbm,
		fzdw, jtfzdwbm, jtfzdw,
		fzrxm,
		jssxxm, yjsj,
		zyly,
		zysx, sjid, lxbj, yjnr,
		jdap, yjmb, create_date,
		create_person, status,
		update_date,project_id, parent_project_id,
		project_type,
		erp_project_code,
		erp_project_name,type_flag,
		xmlbbm,xmlbmc,gsbmmc,gsbmbm,zycmc,zycbm,
		define1,define2,define3,define4,define5,define6
		)
		values
		<foreach collection="list" item="projectInfo" index="index"
			separator=",">
			(
			#{projectInfo.dataId,jdbcType=VARCHAR},
			#{projectInfo.nd,jdbcType=VARCHAR},
			#{projectInfo.xmid,jdbcType=VARCHAR},
			#{projectInfo.hth,jdbcType=VARCHAR},
			#{projectInfo.xmmc,jdbcType=VARCHAR},
			#{projectInfo.xmjb,jdbcType=VARCHAR},
			#{projectInfo.jf,jdbcType=VARCHAR},
			#{projectInfo.fwdxbm,jdbcType=VARCHAR},
			#{projectInfo.fwdx,jdbcType=VARCHAR},
			#{projectInfo.zylbbm,jdbcType=VARCHAR},
			#{projectInfo.zylb,jdbcType=VARCHAR},
			#{projectInfo.fzdwbm,jdbcType=VARCHAR},
			#{projectInfo.fzdw,jdbcType=VARCHAR},
			#{projectInfo.jtfzdwbm,jdbcType=VARCHAR},
			#{projectInfo.jtfzdw,jdbcType=VARCHAR},
			#{projectInfo.fzrxm,jdbcType=VARCHAR},
			#{projectInfo.jssxxm,jdbcType=VARCHAR},
			#{projectInfo.yjsj,jdbcType=VARCHAR},
			#{projectInfo.zyly,jdbcType=VARCHAR},
			#{projectInfo.zysx,jdbcType=VARCHAR},
			#{projectInfo.sjid,jdbcType=VARCHAR},
			#{projectInfo.lxbj,jdbcType=VARCHAR},
			#{projectInfo.yjnr,jdbcType=VARCHAR},
			#{projectInfo.jdap,jdbcType=VARCHAR},
			#{projectInfo.yjmb,jdbcType=VARCHAR},
			#{projectInfo.createDate,jdbcType=TIMESTAMP},
			#{projectInfo.createPerson,jdbcType=VARCHAR},
			#{projectInfo.status,jdbcType=VARCHAR},
			#{projectInfo.updateDate,jdbcType=TIMESTAMP},
			#{projectInfo.projectId,jdbcType=VARCHAR},
			#{projectInfo.parentProjectId,jdbcType=TIMESTAMP},
			#{projectInfo.projectType,jdbcType=VARCHAR},
			#{projectInfo.erpProjectCode,jdbcType=VARCHAR},
			#{projectInfo.erpProjectName,jdbcType=VARCHAR},
			#{projectInfo.typeFlag,jdbcType=TIMESTAMP},
			#{projectInfo.xmlbbm,jdbcType=VARCHAR},
			#{projectInfo.xmlbmc,jdbcType=VARCHAR},
			#{projectInfo.gsbmmc,jdbcType=VARCHAR},
			#{projectInfo.gsbmbm,jdbcType=VARCHAR},
			#{projectInfo.zycmc,jdbcType=VARCHAR},
			#{projectInfo.zycbm,jdbcType=VARCHAR}
			#{projectInfo.define1,jdbcType=VARCHAR},
			#{projectInfo.define2,jdbcType=VARCHAR},
			#{projectInfo.define3,jdbcType=VARCHAR},
			#{projectInfo.define4,jdbcType=VARCHAR},
			#{projectInfo.define5,jdbcType=VARCHAR},
			#{projectInfo.define6,jdbcType=VARCHAR}
			)
		</foreach>
	</insert>

	<select id="selectProjectByCond" resultMap="BaseResultMap"
		parameterType="com.pcitc.base.stp.out.OutProjectInfo">
		select out_project_info.*, group_concat(out_project_erp.erp_project_code) as epc
		from out_project_info left join out_project_erp on (out_project_info.data_id = out_project_erp.opi_id)
		where
		out_project_info.status = '1' and (out_project_info.project_type = '0' or out_project_info.project_type = '2')
		<if test="nd != null">
			and out_project_info.nd = #{nd,jdbcType=VARCHAR}
		</if>
		<if test="hth != null">
			and out_project_info.hth like '%${hth}%'
		</if>
		<if test="xmmc != null">
			and out_project_info.xmmc like '%${xmmc}%'
		</if>
		<if test="define1 != null">
			and out_project_info.define1 like '%${define1}%'
		</if>
		<if test="define2 != null">
			and out_project_info.define2 like '%${define2}%'
		</if>
		<if test="projectProperty != null">
			and out_project_info.project_property like '%${projectProperty}%'
		</if>
		<if test="projectScope != null">
			and out_project_info.project_scope like '%${projectScope}%'
		</if>
		<if test="typeFlag != null">
			and out_project_info.type_flag like '%${typeFlag}%'
		</if>
		<if test="zylb != null">
			and out_project_info.zylb like '%${zylb}%'
		</if>
		<if test="zycmc != null">
			and out_project_info.zycmc like '%${zycmc}%'
		</if>
		
		<if test="status != null">
			and out_project_info.status = #{status,jdbcType=VARCHAR}
		</if>
		group by out_project_info.data_id
	</select>

	<!-- 首页计算科研装备项目数、非装备项目数、新开项目总金额、新开和结转项目总金额 -->
	<select id="getOutProjectInfoCount" resultType="java.util.Map" parameterType="java.util.HashMap">
		select 
        	round(sum(case nd when '2018' then jf else 0 end),2) as jfTotal, 
        	round(sum(jf)/10000,2) as zje, 
        	sum(case when project_property ='其他项目' then 0 else 1 end) as ldzsl,
        	sum(case xmlbbm when 'KYZB' then 1 else 0 end) as kyzbCount, 
			sum(case xmlbbm when 'KYZB' then 0 else 1 end) as projectCount
		from out_project_info
		where (project_type = '0' or project_type = '2') and (project_scope = '新开课题' or project_scope = '结转课题')
		<if test="define2 != null and define2 != ''">
			and define2 is not null
		</if>
	</select>

	<select id="getOutProjectScopeInfo" resultType="java.util.Map" parameterType="java.lang.String">
		select
			sum(case nd when '2017' then 1 else 0 end) as newProject,
			count(*) as totalProject,fzdw
		from out_project_info
		where project_type != '1'
		group by fzdw
	</select>


	<select id="getProjectTypeInfoByUnit" resultType="java.util.Map"
		parameterType="java.lang.String">
		select
			sum(case project_scope when '新开课题' then 1 else 0 end) as xksl,
			sum(case project_scope when '结转课题' then 1 else 0 end) as xjsl,
			sum(case project_scope when '完工课题' then 1 else 0 end) as wjsl,
			SUBSTR(type_flag FROM 2) type_flag
		from out_project_info
		where type_flag is not null
			  and project_type != '1' and xmlbbm != 'KYZB'
		group BY type_flag
	</select>
	
	<select id="getZBProjectTypeInfoByUnit" resultType="java.util.Map"
		parameterType="java.lang.String">
		select
			sum(case project_scope when '新开课题' then 1 else 0 end) as xksl,
			sum(case project_scope when '结转课题' then 1 else 0 end) as xjsl,
			sum(case project_scope when '完工课题' then 1 else 0 end) as wjsl,
			SUBSTR(type_flag FROM 2) type_flag
		from out_project_info
		where type_flag is not null
			  and project_type != '1' and xmlbbm = 'KYZB'
		group BY type_flag
	</select>
	
	<!-- 首页、领导首页，查询新开的国家项目、重点项目、重大项目、其他项目、总计的统计 -->
	<select id="getProjectTotalInfoByNew" resultType="java.util.Map" parameterType="java.util.HashMap">
		select
			sum(case when project_property ='国家项目' and project_scope = '新开课题' then 1 else 0 end) as gjxmsl,
			sum(case when project_property ='重大专项' and project_scope = '新开课题' then 1 else 0 end) as zdzzsl,
			sum(case when project_property ='重点项目' and project_scope = '新开课题' then 1 else 0 end) as zdxmsl,
			sum(case when project_property ='其他项目' and project_scope = '新开课题' then 1 else 0 end) as qtsl,
			count(*) as zsl
		from out_project_info
		where project_type != '1' and (project_scope = '新开课题' or project_scope = '结转课题') 
		<if test="define2 != null and define2 != ''">
			and define2 is not null
		</if>
	</select>

	<select id="getProjectTotalCountYearAndLastYear" resultType="java.util.Map"
		parameterType="java.lang.String">
		select
		sum(case when project_property ='国家项目' and project_scope = '新开课题' then 1 else 0 end) as xkgjsl,
		sum(case when project_property ='国家项目' and nd = '2017' then 1 else 0 end) as qngjsl,
		sum(case when project_property ='重大专项' and project_scope = '新开课题' then 1 else 0 end) as xkzzsl,
		sum(case when project_property ='重大专项' and nd = '2017' then 1 else 0 end) as qnzzsl,
		sum(case when project_property ='重点项目' and project_scope = '新开课题' then 1 else 0 end) as xkzdsl,
		sum(case when project_property ='重点项目' and nd = '2017' then 1 else 0 end) as qnzdsl,
		sum(case when LEFT(hth,3) ='CLY' and project_scope = '新开课题' then 1 else 0 end) as lysybsl,
		sum(case when LEFT(hth,3) ='CLY' and nd = '2017' then 1 else 0 end) as qnlysybsl,
		sum(case when LEFT(hth,3) ='CHG' and project_scope = '新开课题' then 1 else 0 end) as hgsybsl,
		sum(case when LEFT(hth,3) ='CHG' and nd = '2017' then 1 else 0 end) as qnhgsybsl
		from out_project_info
		where project_type != '1'
	</select>
	
	<select id="getProjectCountByProjectType" resultType="java.util.Map"
		parameterType="java.lang.String">
		select
			sum(case when project_scope = '新开课题' then 1 else 0 end) as xksl,
        	sum(case when project_scope = '结转课题' then 1 else 0 end) as xjsl,
        	count(*) as zsl,define4 as zycmc
		from out_project_info
		where (project_type = '0' or project_type = '2') and xmlbbm != 'KYZB' and 
			  (project_scope = '新开课题' or project_scope = '结转课题') and 
			  define4 is not null
    	group by define4
	</select>
	
	<select id="getProjectTypeCountByType" resultType="java.util.Map"
		parameterType="java.lang.String">
		select
		sum(case when project_property = '国家项目' then 1 else 0 end) as gjxmsl,
	    sum(case when project_property = '重大专项' then 1 else 0 end) as zdzxxmsl,
	    sum(case when project_property = '重点项目' then 1 else 0 end) as zdxmsl,
	    sum(case when project_property = '其他项目' then 1 else 0 end) as qtsl,
	    sum(case when define2 = '101勘探院' then 1 else 0 end) as ktysl,
	    sum(case when define2 = '102物探院' then 1 else 0 end) as wtysl,
	    sum(case when define2 = '103工程院' then 1 else 0 end) as gcysl,
	    sum(case when define2 = '104石科院' then 1 else 0 end) as skysl,
	    sum(case when define2 = '105大连院' then 1 else 0 end) as dlysl,
	    sum(case when define2 = '106北化院' then 1 else 0 end) as bhysl,
	    sum(case when define2 = '107上海院' then 1 else 0 end) as shysl,
	    sum(case when define2 = '108安工院' then 1 else 0 end) as agysl,
	    
	    count(*) as zsl,project_scope
			from out_project_info
			where project_type != '1' and (project_scope = '新开课题' or project_scope = '结转课题') and xmlbbm != 'KYZB'
	    group by project_scope
	</select>
	
	<select id="getProjectTypeCountByUnit" resultType="java.util.Map"
		parameterType="java.lang.String">
		select
		    sum(case when project_scope = '新开课题' then 1 else 0 end) as xksl,
		    sum(case when project_scope = '结转课题' then 1 else 0 end) as xjsl,
		    count(*) as zsl,
	    	SUBSTR(define2 FROM 4) define2
		from out_project_info
		where project_type != '1' and (project_scope = '新开课题' or project_scope = '结转课题') and define2 is not null and xmlbbm !='KYZB'
	    group by define2
	</select>
	
	<select id="getZBProjectTypeCountByUnit" resultType="java.util.Map"
		parameterType="java.lang.String">
		select
		    sum(case when project_scope = '新开课题' then 1 else 0 end) as xksl,
		    sum(case when project_scope = '结转课题' then 1 else 0 end) as xjsl,
		    count(*) as zsl,
	    	SUBSTR(define2 FROM 4) define2
		from out_project_info
		where project_type != '1' and (project_scope = '新开课题' or project_scope = '结转课题') and define2 is not null and xmlbbm ='KYZB'
	    group by define2
	</select>
	
	<select id="getZBProjectCountByProjectType" resultType="java.util.Map"
		parameterType="java.lang.String">
		select
			sum(case when project_scope = '新开课题' then 1 else 0 end) as xksl,
        	sum(case when project_scope = '结转课题' then 1 else 0 end) as xjsl,
        	count(*) as zsl,zylb
		from out_project_info
		where project_type != '1' and zylb is not null and xmlbbm = 'KYZB'
    	group by zylb
	</select>
	
	<select id="getZBProjectTypeCountByType" resultType="java.util.Map"
		parameterType="java.lang.String">
		select
			sum(case when project_property = '国家项目' then 1 else 0 end) as gjxmsl,
		    sum(case when project_property = '重大专项' then 1 else 0 end) as zdzxxmsl,
		    sum(case when project_property = '重点项目' then 1 else 0 end) as zdxmsl,
		    sum(case when project_property = '其他项目' then 1 else 0 end) as qtsl,
		    sum(case when define2 = '101勘探院' then 1 else 0 end) as ktysl,
		    sum(case when define2 = '102物探院' then 1 else 0 end) as wtysl,
		    sum(case when define2 = '103工程院' then 1 else 0 end) as gcysl,
		    sum(case when define2 = '104石科院' then 1 else 0 end) as skysl,
		    sum(case when define2 = '105大连院' then 1 else 0 end) as dlysl,
		    sum(case when define2 = '106北化院' then 1 else 0 end) as bhysl,
		    sum(case when define2 = '107上海院' then 1 else 0 end) as shysl,
		    sum(case when define2 = '108安工院' then 1 else 0 end) as agysl,
		    count(*) as zsl,project_scope
		from out_project_info
		where project_type != '1' and (project_scope = '新开课题' or project_scope = '结转课题') and xmlbbm = 'KYZB'
	    group by project_scope
	</select>
	
	<select id="getProjectMoneyByProjectType" resultType="java.util.Map"
		parameterType="java.lang.String">
		select
			round(sum(case when project_scope = '新开课题' then jf else 0 end)/10000,4) as xkje,
	        round(sum(case when project_scope = '结转课题' then jf else 0 end)/10000,4) as xjje,
	        round(sum(jf)/10000,4) as zje,
	        define1
		from out_project_info
		where (project_type = '0' or project_type = '2') and (project_scope = '新开课题' or project_scope = '结转课题')
	    group by define1
	</select>
	
	<select id="getProjectMoneyByUnit" resultType="java.util.Map"
		parameterType="java.lang.String">
		select
			round(sum(case when define1 = '费用性' then jf else 0 end)/10000,4) as fyxje,
	    	round(sum(case when define1 = '资本性' then jf else 0 end)/10000,4) as zbxje,
	    	round(sum(jf)/10000,4) as zje,
	    	SUBSTR(type_flag FROM 2) type_flag
		from out_project_info
		where project_type != '1' and (project_scope = '新开课题' or project_scope = '结转课题') and type_flag is not null
	    group by type_flag
	</select>
	
	<select id="getProjectMoneyByYJY" resultType="java.util.Map"
		parameterType="java.lang.String">
		select
			round(sum(case when define1 = '费用性' then jf else 0 end),4) as fyxje,
	    	round(sum(case when define1 = '资本性' then jf else 0 end),4) as zbxje,
	    	round(sum(jf),4) as zje,
	    	SUBSTR(define2 FROM 4) define2
		from out_project_info
		where project_type != '1' and (project_scope = '新开课题' or project_scope = '结转课题') and define2 is not null
	    group by define2
	</select>
	
	<select id="getProjectTypeCountForTree" resultType="java.util.Map"
		parameterType="java.lang.String">
		select
		    count(*) as zsl,UUID() as id,
	    	SUBSTR(type_flag FROM 2) type_flag,project_scope
		from out_project_info
		where project_type != '1' and (project_scope = '新开课题' or project_scope = '结转课题') and type_flag is not null and xmlbbm !='KYZB'
	    group by type_flag,project_scope
	</select>
	
	<select id="getProjectCountByTypeForTree" resultType="java.util.Map"
		parameterType="java.lang.String">
		select
		    count(*) as zsl,UUID() as id,
	    	define4 as zycmc,project_scope
		from out_project_info
		where project_type != '1' and (project_scope = '新开课题' or project_scope = '结转课题') and 
			  define4 is not null and xmlbbm !='KYZB'
	    group by define4,project_scope
	</select>
	
	<select id="getZBProjectTypeCountForTree" resultType="java.util.Map"
		parameterType="java.lang.String">
		select
		    count(*) as zsl,UUID() as id,
	    	SUBSTR(type_flag FROM 2) type_flag,project_scope
		from out_project_info
		where project_type != '1' and (project_scope = '新开课题' or project_scope = '结转课题') and type_flag is not null and xmlbbm ='KYZB'
	    group by type_flag,project_scope
	</select>
	
	<select id="getZBProjectCountByTypeForTree" resultType="java.util.Map"
		parameterType="java.lang.String">
		select
		    count(*) as zsl,UUID() as id,project_scope,SUBSTR(define2 FROM 4) define2
		from out_project_info
		where 
			project_type != '1' and (project_scope = '新开课题' or project_scope = '结转课题') and xmlbbm ='KYZB' and define2 is not null
	    group by project_scope,define2
	    
	</select>
	
	<select id="getProjectMoneyForTree" resultType="java.util.Map" parameterType="java.lang.String">
		select
		    round(sum(jf)/10000,4) as zje,UUID() as id,define1,project_scope
		from out_project_info
		where project_type != '1' and (project_scope = '新开课题' or project_scope = '结转课题')
	    group by define1,project_scope
	</select>
	
	<select id="getProjectMoneyByIniAndTypeForTree" resultType="java.util.Map" parameterType="java.lang.String">
		select
		    round(sum(jf)/10000,4) as zje,UUID() as id,
	    	define1,SUBSTR(type_flag FROM 2) type_flag
		from out_project_info
		where project_type != '1' and (project_scope = '新开课题' or project_scope = '结转课题') and type_flag is not null
	    group by define1,type_flag
	</select>
	
	
	<!-- 领导页的各类型的项目数量 -->
	<select id="getProjectTypeCountForLD" resultType="java.util.Map" parameterType="java.lang.String">
		select project_property,count(*) as xmsl
		FROM out_project_info
		where 
			project_type != '1' and (project_scope = '新开课题' or project_scope = '结转课题') and 
			(project_property = '重点项目' or project_property = '国家项目' or project_property = '重大专项' or project_property = '十条龙项目')
		group by project_property
	</select>
	
	<!-- 领导页,科研项目数量按单位分析 -->
	<select id="getProjectTypeCountForTreeLD" resultType="java.util.Map" parameterType="java.lang.String">
		select
		    count(*) as zsl,UUID() as id,
	    	SUBSTR(type_flag FROM 2) type_flag,project_scope
		from out_project_info
		where project_type != '1' and (project_scope = '新开课题' or project_scope = '结转课题') and type_flag is not null and xmlbbm !='KYZB'
	    group by type_flag,project_scope
	</select>
	
	<!-- 领导二级页面，直属研究院、分子公司等9个单位，各单位的新开、续建、完结情况 -->
	<select id="getProjectTypeInfoByUnitLD" resultType="java.util.Map"
		parameterType="java.lang.String">
		select
			sum(case project_scope when '新开课题' then 1 else 0 end) as xksl,
			sum(case project_scope when '结转课题' then 1 else 0 end) as xjsl,
			SUBSTR(type_flag FROM 2) type_flag
		from out_project_info
		where type_flag is not null
			  and project_type != '1' and (project_scope = '新开课题' or project_scope = '结转课题')
		group BY type_flag
	</select>
	
	<!-- 领导二级页面，各个处室的新开、续建、完结情况 -->
	<select id="getProjectCountByProjectTypeLD" resultType="java.util.Map"
		parameterType="java.lang.String">
		select
			sum(case when project_scope = '新开课题' then 1 else 0 end) as xksl,
        	sum(case when project_scope = '结转课题' then 1 else 0 end) as xjsl,
        	count(*) as zsl,define4 as zycmc
		from out_project_info
		where (project_type = '0' or project_type = '2') and 
			  (project_scope = '新开课题' or project_scope = '结转课题') and 
			  define4 is not null
    	group by define4
	</select>
	
	<!-- 领导二级页面，8个院及国家级项目等性质的新开、续建、完结情况 -->
	<select id="getProjectTypeCountByTypeLD" resultType="java.util.Map"
		parameterType="java.lang.String">
		select
		sum(case when project_property = '国家项目' then 1 else 0 end) as gjxmsl,
	    sum(case when project_property = '重大专项' then 1 else 0 end) as zdzxxmsl,
	    sum(case when project_property = '重点项目' then 1 else 0 end) as zdxmsl,
	    sum(case when project_property = '其他项目' then 1 else 0 end) as qtsl,
	    sum(case when project_property = '十条龙' then 1 else 0 end) as stlxmsl,
	    sum(case when define2 = '101勘探院' then 1 else 0 end) as ktysl,
	    sum(case when define2 = '102物探院' then 1 else 0 end) as wtysl,
	    sum(case when define2 = '103工程院' then 1 else 0 end) as gcysl,
	    sum(case when define2 = '104石科院' then 1 else 0 end) as skysl,
	    sum(case when define2 = '105大连院' then 1 else 0 end) as dlysl,
	    sum(case when define2 = '106北化院' then 1 else 0 end) as bhysl,
	    sum(case when define2 = '107上海院' then 1 else 0 end) as shysl,
	    sum(case when define2 = '108安工院' then 1 else 0 end) as agysl,
	    
	    count(*) as zsl,project_scope
			from out_project_info
			where project_type != '1' and (project_scope = '新开课题' or project_scope = '结转课题')
	    group by project_scope
	</select>
	
	<!-- 领导二级页面，8个院新开、续建情况,每一行是一个院 -->
	<select id="getProjectTypeCountByUnitLD" resultType="java.util.Map"
		parameterType="java.lang.String">
		select
		    sum(case when project_scope = '新开课题' then 1 else 0 end) as xksl,
		    sum(case when project_scope = '结转课题' then 1 else 0 end) as xjsl,
		    count(*) as zsl,
	    	SUBSTR(define2 FROM 4) define2
		from out_project_info
		where project_type != '1' and (project_scope = '新开课题' or project_scope = '结转课题') and define2 is not null
	    group by define2
	</select>
	
	<!-- 领导二级页面，预算数据，8个院费用性和资本性的柱状图 -->
	<select id="getInstituteMoneyWithYS" resultType="java.util.Map" parameterType="java.util.HashMap">
		SELECT show_ali as unitName,zbx_money as zbxje,fyx_money as fyxje 
		FROM out_tem_money_total
		WHERE 
			is_yjy = '研究院'
		ORDER BY show_order
	</select>
	
	<!-- 领导二级页面，预算数据，直属研究院、分子公司等9个维度的费用统计,树形结构 -->
	<select id="getCompanyMoneyTreeWithYS" resultType="java.util.Map" parameterType="java.util.HashMap">
		SELECT show_ali as unitName,fyx_money as showJE,UUID() as id,'费用性' as typeName
		FROM out_tem_money_total
		WHERE 
			money_level = '2' and fyx_money !=''
		
		union all 
		SELECT show_ali as unitName,zbx_money as showJE,UUID() as id,'资本性' as typeName
		FROM out_tem_money_total
		WHERE 
			money_level = '2' and zbx_money !=''
	</select>
	
	<!-- 领导二级页面，预算数据，直属研究院、分子公司等9个维度的费用统计 -->
	<select id="getCompanyMoneyWithYS" resultType="java.util.Map" parameterType="java.util.HashMap">
		SELECT show_ali as unitName,zbx_money as zbxje,fyx_money as fyxje 
		FROM out_tem_money_total
		WHERE 
			money_level = '2'
	</select>
	
	<!-- 领导二级页面，预算数据，17处室的费用统计 -->
	<select id="getOfficeMoneyWithYS" resultType="java.util.Map" parameterType="java.util.HashMap">
		SELECT unit_name as unitName,sum(xk_money) as xkje,sum(jz_money) as jzje
		FROM out_tem_money
		group by unit_name
	</select>
	
	<!-- 领导二级页面，预算数据，17处室的费用统计， 树形结构 -->
	<select id="getOfficeMoneyTreeWithYS" resultType="java.util.Map" parameterType="java.util.HashMap">
		SELECT unit_name as unitName,sum(xk_money) as showJE,'新开课题' as typeName, UUID() as id
		FROM out_tem_money
		group by unit_name
		
		union all 
		SELECT unit_name as unitName,sum(jz_money) as showJE,'结转课题' as typeName, UUID() as id
		FROM out_tem_money
		group by unit_name
	</select>
	
	
</mapper>