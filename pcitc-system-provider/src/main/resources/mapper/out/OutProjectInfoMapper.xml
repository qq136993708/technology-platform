<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pcitc.mapper.out.OutProjectInfoMapper" >
  <resultMap id="BaseResultMap" type="com.pcitc.base.stp.out.OutProjectInfo" >
    <id column="data_id" property="dataId" jdbcType="VARCHAR" />
    <result column="nd" property="nd" jdbcType="VARCHAR" />
    <result column="xmid" property="xmid" jdbcType="VARCHAR" />
    <result column="hth" property="hth" jdbcType="VARCHAR" />
    <result column="xmmc" property="xmmc" jdbcType="VARCHAR" />
    <result column="xmjb" property="xmjb" jdbcType="VARCHAR" />
    <result column="ysnd" property="ysnd" jdbcType="VARCHAR" />
    <result column="yshf" property="yshf" jdbcType="VARCHAR" />
    <result column="ysxd" property="ysxd" jdbcType="VARCHAR" />
    <result column="ysje" property="ysje" jdbcType="VARCHAR" />
    <result column="jf" property="jf" jdbcType="VARCHAR" />
    <result column="fwdxbm" property="fwdxbm" jdbcType="VARCHAR" />
    <result column="fwdx" property="fwdx" jdbcType="VARCHAR" />
    <result column="zylbbm" property="zylbbm" jdbcType="VARCHAR" />
    <result column="zylb" property="zylb" jdbcType="VARCHAR" />
    <result column="fzdwbm" property="fzdwbm" jdbcType="VARCHAR" />
    <result column="fzdw" property="fzdw" jdbcType="VARCHAR" />
    <result column="jtfzdwbm" property="jtfzdwbm" jdbcType="VARCHAR" />
    <result column="jtfzdw" property="jtfzdw" jdbcType="VARCHAR" />
    <result column="fzryx" property="fzryx" jdbcType="VARCHAR" />
    <result column="fzrdh" property="fzrdh" jdbcType="VARCHAR" />
    <result column="fzrxm" property="fzrxm" jdbcType="VARCHAR" />
    <result column="lxrdh" property="lxrdh" jdbcType="VARCHAR" />
    <result column="lxryx" property="lxryx" jdbcType="VARCHAR" />
    <result column="lxrxm" property="lxrxm" jdbcType="VARCHAR" />
    <result column="jssxxm" property="jssxxm" jdbcType="VARCHAR" />
    <result column="jssj" property="jssj" jdbcType="VARCHAR" />
    <result column="kssj" property="kssj" jdbcType="VARCHAR" />
    <result column="yjsj" property="yjsj" jdbcType="VARCHAR" />
    <result column="zyly" property="zyly" jdbcType="VARCHAR" />
    <result column="zysx" property="zysx" jdbcType="VARCHAR" />
    <result column="sjid" property="sjid" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="create_person" property="createPerson" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="project_id" property="projectId" jdbcType="VARCHAR" />
    <result column="parent_project_id" property="parentProjectId" jdbcType="VARCHAR" />
    <result column="project_type" property="projectType" jdbcType="VARCHAR" />
    <result column="erp_project_code" property="erpProjectCode" jdbcType="VARCHAR" />
    <result column="erp_project_name" property="erpProjectName" jdbcType="VARCHAR" />
    <result column="project_scope" property="projectScope" jdbcType="VARCHAR" />
    <result column="project_level" property="projectLevel" jdbcType="VARCHAR" />
    <result column="project_property" property="projectProperty" jdbcType="VARCHAR" />
    <result column="project_abc" property="projectAbc" jdbcType="VARCHAR" />
    <result column="project_source" property="projectSource" jdbcType="VARCHAR" />
    <result column="yjsjks" property="yjsjks" jdbcType="VARCHAR" />
    <result column="yjsjjs" property="yjsjjs" jdbcType="VARCHAR" />
    <result column="xmlbbm" property="xmlbbm" jdbcType="VARCHAR" />
    <result column="xmlbmc" property="xmlbmc" jdbcType="VARCHAR" />
    <result column="gsbmmc" property="gsbmmc" jdbcType="VARCHAR" />
    <result column="gsbmbm" property="gsbmbm" jdbcType="VARCHAR" />
    <result column="zycmc" property="zycmc" jdbcType="VARCHAR" />
    <result column="zycbm" property="zycbm" jdbcType="VARCHAR" />
    <result column="type_flag" property="typeFlag" jdbcType="VARCHAR" />
    <result column="define1" property="define1" jdbcType="VARCHAR" />
    <result column="define2" property="define2" jdbcType="VARCHAR" />
    <result column="define3" property="define3" jdbcType="VARCHAR" />
    <result column="define4" property="define4" jdbcType="VARCHAR" />
    <result column="define5" property="define5" jdbcType="VARCHAR" />
    <result column="define6" property="define6" jdbcType="VARCHAR" />
    <result column="define7" property="define7" jdbcType="VARCHAR" />
    <result column="define8" property="define8" jdbcType="VARCHAR" />
    <result column="define9" property="define9" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.pcitc.base.stp.out.OutProjectInfoWithBLOBs" extends="BaseResultMap" >
    <result column="lxbj" property="lxbj" jdbcType="LONGVARCHAR" />
    <result column="yjnr" property="yjnr" jdbcType="LONGVARCHAR" />
    <result column="jdap" property="jdap" jdbcType="LONGVARCHAR" />
    <result column="yjmb" property="yjmb" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    data_id, nd, xmid, hth, xmmc, xmjb, ysnd, yshf, ysxd, ysje, jf, fwdxbm, fwdx, zylbbm, 
    zylb, fzdwbm, fzdw, jtfzdwbm, jtfzdw, fzryx, fzrdh, fzrxm, lxrdh, lxryx, lxrxm, jssxxm, 
    jssj, kssj, yjsj, zyly, zysx, sjid, create_date, create_person, status, update_date, 
    project_id, parent_project_id, project_type, erp_project_code, erp_project_name, 
    project_scope, project_level, project_property, project_abc, project_source, yjsjks, 
    yjsjjs, xmlbbm, xmlbmc, gsbmmc, gsbmbm, zycmc, zycbm, type_flag, define1, define2, 
    define3, define4, define5, define6, define7, define8, define9
  </sql>
  <sql id="Blob_Column_List" >
    lxbj, yjnr, jdap, yjmb
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.pcitc.base.stp.out.OutProjectInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from out_project_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pcitc.base.stp.out.OutProjectInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from out_project_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from out_project_info
    where data_id = #{dataId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from out_project_info
    where data_id = #{dataId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.pcitc.base.stp.out.OutProjectInfoExample" >
    delete from out_project_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pcitc.base.stp.out.OutProjectInfoWithBLOBs" >
    insert into out_project_info (data_id, nd, xmid, 
      hth, xmmc, xmjb, ysnd, 
      yshf, ysxd, ysje, jf, 
      fwdxbm, fwdx, zylbbm, 
      zylb, fzdwbm, fzdw, 
      jtfzdwbm, jtfzdw, fzryx, 
      fzrdh, fzrxm, lxrdh, 
      lxryx, lxrxm, jssxxm, 
      jssj, kssj, yjsj, zyly, 
      zysx, sjid, create_date, 
      create_person, status, update_date, 
      project_id, parent_project_id, project_type, 
      erp_project_code, erp_project_name, project_scope, 
      project_level, project_property, project_abc, 
      project_source, yjsjks, yjsjjs, 
      xmlbbm, xmlbmc, gsbmmc, 
      gsbmbm, zycmc, zycbm, 
      type_flag, define1, define2, 
      define3, define4, define5, 
      define6, define7, define8, 
      define9, lxbj, yjnr, 
      jdap, yjmb)
    values (#{dataId,jdbcType=VARCHAR}, #{nd,jdbcType=VARCHAR}, #{xmid,jdbcType=VARCHAR}, 
      #{hth,jdbcType=VARCHAR}, #{xmmc,jdbcType=VARCHAR}, #{xmjb,jdbcType=VARCHAR}, #{ysnd,jdbcType=VARCHAR}, 
      #{yshf,jdbcType=VARCHAR}, #{ysxd,jdbcType=VARCHAR}, #{ysje,jdbcType=VARCHAR}, #{jf,jdbcType=VARCHAR}, 
      #{fwdxbm,jdbcType=VARCHAR}, #{fwdx,jdbcType=VARCHAR}, #{zylbbm,jdbcType=VARCHAR}, 
      #{zylb,jdbcType=VARCHAR}, #{fzdwbm,jdbcType=VARCHAR}, #{fzdw,jdbcType=VARCHAR}, 
      #{jtfzdwbm,jdbcType=VARCHAR}, #{jtfzdw,jdbcType=VARCHAR}, #{fzryx,jdbcType=VARCHAR}, 
      #{fzrdh,jdbcType=VARCHAR}, #{fzrxm,jdbcType=VARCHAR}, #{lxrdh,jdbcType=VARCHAR}, 
      #{lxryx,jdbcType=VARCHAR}, #{lxrxm,jdbcType=VARCHAR}, #{jssxxm,jdbcType=VARCHAR}, 
      #{jssj,jdbcType=VARCHAR}, #{kssj,jdbcType=VARCHAR}, #{yjsj,jdbcType=VARCHAR}, #{zyly,jdbcType=VARCHAR}, 
      #{zysx,jdbcType=VARCHAR}, #{sjid,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{createPerson,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP}, 
      #{projectId,jdbcType=VARCHAR}, #{parentProjectId,jdbcType=VARCHAR}, #{projectType,jdbcType=VARCHAR}, 
      #{erpProjectCode,jdbcType=VARCHAR}, #{erpProjectName,jdbcType=VARCHAR}, #{projectScope,jdbcType=VARCHAR}, 
      #{projectLevel,jdbcType=VARCHAR}, #{projectProperty,jdbcType=VARCHAR}, #{projectAbc,jdbcType=VARCHAR}, 
      #{projectSource,jdbcType=VARCHAR}, #{yjsjks,jdbcType=VARCHAR}, #{yjsjjs,jdbcType=VARCHAR}, 
      #{xmlbbm,jdbcType=VARCHAR}, #{xmlbmc,jdbcType=VARCHAR}, #{gsbmmc,jdbcType=VARCHAR}, 
      #{gsbmbm,jdbcType=VARCHAR}, #{zycmc,jdbcType=VARCHAR}, #{zycbm,jdbcType=VARCHAR}, 
      #{typeFlag,jdbcType=VARCHAR}, #{define1,jdbcType=VARCHAR}, #{define2,jdbcType=VARCHAR}, 
      #{define3,jdbcType=VARCHAR}, #{define4,jdbcType=VARCHAR}, #{define5,jdbcType=VARCHAR}, 
      #{define6,jdbcType=VARCHAR}, #{define7,jdbcType=VARCHAR}, #{define8,jdbcType=VARCHAR}, 
      #{define9,jdbcType=VARCHAR}, #{lxbj,jdbcType=LONGVARCHAR}, #{yjnr,jdbcType=LONGVARCHAR}, 
      #{jdap,jdbcType=LONGVARCHAR}, #{yjmb,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.pcitc.base.stp.out.OutProjectInfoWithBLOBs" >
    insert into out_project_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="dataId != null" >
        data_id,
      </if>
      <if test="nd != null" >
        nd,
      </if>
      <if test="xmid != null" >
        xmid,
      </if>
      <if test="hth != null" >
        hth,
      </if>
      <if test="xmmc != null" >
        xmmc,
      </if>
      <if test="xmjb != null" >
        xmjb,
      </if>
      <if test="ysnd != null" >
        ysnd,
      </if>
      <if test="yshf != null" >
        yshf,
      </if>
      <if test="ysxd != null" >
        ysxd,
      </if>
      <if test="ysje != null" >
        ysje,
      </if>
      <if test="jf != null" >
        jf,
      </if>
      <if test="fwdxbm != null" >
        fwdxbm,
      </if>
      <if test="fwdx != null" >
        fwdx,
      </if>
      <if test="zylbbm != null" >
        zylbbm,
      </if>
      <if test="zylb != null" >
        zylb,
      </if>
      <if test="fzdwbm != null" >
        fzdwbm,
      </if>
      <if test="fzdw != null" >
        fzdw,
      </if>
      <if test="jtfzdwbm != null" >
        jtfzdwbm,
      </if>
      <if test="jtfzdw != null" >
        jtfzdw,
      </if>
      <if test="fzryx != null" >
        fzryx,
      </if>
      <if test="fzrdh != null" >
        fzrdh,
      </if>
      <if test="fzrxm != null" >
        fzrxm,
      </if>
      <if test="lxrdh != null" >
        lxrdh,
      </if>
      <if test="lxryx != null" >
        lxryx,
      </if>
      <if test="lxrxm != null" >
        lxrxm,
      </if>
      <if test="jssxxm != null" >
        jssxxm,
      </if>
      <if test="jssj != null" >
        jssj,
      </if>
      <if test="kssj != null" >
        kssj,
      </if>
      <if test="yjsj != null" >
        yjsj,
      </if>
      <if test="zyly != null" >
        zyly,
      </if>
      <if test="zysx != null" >
        zysx,
      </if>
      <if test="sjid != null" >
        sjid,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="createPerson != null" >
        create_person,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="projectId != null" >
        project_id,
      </if>
      <if test="parentProjectId != null" >
        parent_project_id,
      </if>
      <if test="projectType != null" >
        project_type,
      </if>
      <if test="erpProjectCode != null" >
        erp_project_code,
      </if>
      <if test="erpProjectName != null" >
        erp_project_name,
      </if>
      <if test="projectScope != null" >
        project_scope,
      </if>
      <if test="projectLevel != null" >
        project_level,
      </if>
      <if test="projectProperty != null" >
        project_property,
      </if>
      <if test="projectAbc != null" >
        project_abc,
      </if>
      <if test="projectSource != null" >
        project_source,
      </if>
      <if test="yjsjks != null" >
        yjsjks,
      </if>
      <if test="yjsjjs != null" >
        yjsjjs,
      </if>
      <if test="xmlbbm != null" >
        xmlbbm,
      </if>
      <if test="xmlbmc != null" >
        xmlbmc,
      </if>
      <if test="gsbmmc != null" >
        gsbmmc,
      </if>
      <if test="gsbmbm != null" >
        gsbmbm,
      </if>
      <if test="zycmc != null" >
        zycmc,
      </if>
      <if test="zycbm != null" >
        zycbm,
      </if>
      <if test="typeFlag != null" >
        type_flag,
      </if>
      <if test="define1 != null" >
        define1,
      </if>
      <if test="define2 != null" >
        define2,
      </if>
      <if test="define3 != null" >
        define3,
      </if>
      <if test="define4 != null" >
        define4,
      </if>
      <if test="define5 != null" >
        define5,
      </if>
      <if test="define6 != null" >
        define6,
      </if>
      <if test="define7 != null" >
        define7,
      </if>
      <if test="define8 != null" >
        define8,
      </if>
      <if test="define9 != null" >
        define9,
      </if>
      <if test="lxbj != null" >
        lxbj,
      </if>
      <if test="yjnr != null" >
        yjnr,
      </if>
      <if test="jdap != null" >
        jdap,
      </if>
      <if test="yjmb != null" >
        yjmb,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="dataId != null" >
        #{dataId,jdbcType=VARCHAR},
      </if>
      <if test="nd != null" >
        #{nd,jdbcType=VARCHAR},
      </if>
      <if test="xmid != null" >
        #{xmid,jdbcType=VARCHAR},
      </if>
      <if test="hth != null" >
        #{hth,jdbcType=VARCHAR},
      </if>
      <if test="xmmc != null" >
        #{xmmc,jdbcType=VARCHAR},
      </if>
      <if test="xmjb != null" >
        #{xmjb,jdbcType=VARCHAR},
      </if>
      <if test="ysnd != null" >
        #{ysnd,jdbcType=VARCHAR},
      </if>
      <if test="yshf != null" >
        #{yshf,jdbcType=VARCHAR},
      </if>
      <if test="ysxd != null" >
        #{ysxd,jdbcType=VARCHAR},
      </if>
      <if test="ysje != null" >
        #{ysje,jdbcType=VARCHAR},
      </if>
      <if test="jf != null" >
        #{jf,jdbcType=VARCHAR},
      </if>
      <if test="fwdxbm != null" >
        #{fwdxbm,jdbcType=VARCHAR},
      </if>
      <if test="fwdx != null" >
        #{fwdx,jdbcType=VARCHAR},
      </if>
      <if test="zylbbm != null" >
        #{zylbbm,jdbcType=VARCHAR},
      </if>
      <if test="zylb != null" >
        #{zylb,jdbcType=VARCHAR},
      </if>
      <if test="fzdwbm != null" >
        #{fzdwbm,jdbcType=VARCHAR},
      </if>
      <if test="fzdw != null" >
        #{fzdw,jdbcType=VARCHAR},
      </if>
      <if test="jtfzdwbm != null" >
        #{jtfzdwbm,jdbcType=VARCHAR},
      </if>
      <if test="jtfzdw != null" >
        #{jtfzdw,jdbcType=VARCHAR},
      </if>
      <if test="fzryx != null" >
        #{fzryx,jdbcType=VARCHAR},
      </if>
      <if test="fzrdh != null" >
        #{fzrdh,jdbcType=VARCHAR},
      </if>
      <if test="fzrxm != null" >
        #{fzrxm,jdbcType=VARCHAR},
      </if>
      <if test="lxrdh != null" >
        #{lxrdh,jdbcType=VARCHAR},
      </if>
      <if test="lxryx != null" >
        #{lxryx,jdbcType=VARCHAR},
      </if>
      <if test="lxrxm != null" >
        #{lxrxm,jdbcType=VARCHAR},
      </if>
      <if test="jssxxm != null" >
        #{jssxxm,jdbcType=VARCHAR},
      </if>
      <if test="jssj != null" >
        #{jssj,jdbcType=VARCHAR},
      </if>
      <if test="kssj != null" >
        #{kssj,jdbcType=VARCHAR},
      </if>
      <if test="yjsj != null" >
        #{yjsj,jdbcType=VARCHAR},
      </if>
      <if test="zyly != null" >
        #{zyly,jdbcType=VARCHAR},
      </if>
      <if test="zysx != null" >
        #{zysx,jdbcType=VARCHAR},
      </if>
      <if test="sjid != null" >
        #{sjid,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createPerson != null" >
        #{createPerson,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="projectId != null" >
        #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="parentProjectId != null" >
        #{parentProjectId,jdbcType=VARCHAR},
      </if>
      <if test="projectType != null" >
        #{projectType,jdbcType=VARCHAR},
      </if>
      <if test="erpProjectCode != null" >
        #{erpProjectCode,jdbcType=VARCHAR},
      </if>
      <if test="erpProjectName != null" >
        #{erpProjectName,jdbcType=VARCHAR},
      </if>
      <if test="projectScope != null" >
        #{projectScope,jdbcType=VARCHAR},
      </if>
      <if test="projectLevel != null" >
        #{projectLevel,jdbcType=VARCHAR},
      </if>
      <if test="projectProperty != null" >
        #{projectProperty,jdbcType=VARCHAR},
      </if>
      <if test="projectAbc != null" >
        #{projectAbc,jdbcType=VARCHAR},
      </if>
      <if test="projectSource != null" >
        #{projectSource,jdbcType=VARCHAR},
      </if>
      <if test="yjsjks != null" >
        #{yjsjks,jdbcType=VARCHAR},
      </if>
      <if test="yjsjjs != null" >
        #{yjsjjs,jdbcType=VARCHAR},
      </if>
      <if test="xmlbbm != null" >
        #{xmlbbm,jdbcType=VARCHAR},
      </if>
      <if test="xmlbmc != null" >
        #{xmlbmc,jdbcType=VARCHAR},
      </if>
      <if test="gsbmmc != null" >
        #{gsbmmc,jdbcType=VARCHAR},
      </if>
      <if test="gsbmbm != null" >
        #{gsbmbm,jdbcType=VARCHAR},
      </if>
      <if test="zycmc != null" >
        #{zycmc,jdbcType=VARCHAR},
      </if>
      <if test="zycbm != null" >
        #{zycbm,jdbcType=VARCHAR},
      </if>
      <if test="typeFlag != null" >
        #{typeFlag,jdbcType=VARCHAR},
      </if>
      <if test="define1 != null" >
        #{define1,jdbcType=VARCHAR},
      </if>
      <if test="define2 != null" >
        #{define2,jdbcType=VARCHAR},
      </if>
      <if test="define3 != null" >
        #{define3,jdbcType=VARCHAR},
      </if>
      <if test="define4 != null" >
        #{define4,jdbcType=VARCHAR},
      </if>
      <if test="define5 != null" >
        #{define5,jdbcType=VARCHAR},
      </if>
      <if test="define6 != null" >
        #{define6,jdbcType=VARCHAR},
      </if>
      <if test="define7 != null" >
        #{define7,jdbcType=VARCHAR},
      </if>
      <if test="define8 != null" >
        #{define8,jdbcType=VARCHAR},
      </if>
      <if test="define9 != null" >
        #{define9,jdbcType=VARCHAR},
      </if>
      <if test="lxbj != null" >
        #{lxbj,jdbcType=LONGVARCHAR},
      </if>
      <if test="yjnr != null" >
        #{yjnr,jdbcType=LONGVARCHAR},
      </if>
      <if test="jdap != null" >
        #{jdap,jdbcType=LONGVARCHAR},
      </if>
      <if test="yjmb != null" >
        #{yjmb,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pcitc.base.stp.out.OutProjectInfoExample" resultType="java.lang.Integer" >
    select count(*) from out_project_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update out_project_info
    <set >
      <if test="record.dataId != null" >
        data_id = #{record.dataId,jdbcType=VARCHAR},
      </if>
      <if test="record.nd != null" >
        nd = #{record.nd,jdbcType=VARCHAR},
      </if>
      <if test="record.xmid != null" >
        xmid = #{record.xmid,jdbcType=VARCHAR},
      </if>
      <if test="record.hth != null" >
        hth = #{record.hth,jdbcType=VARCHAR},
      </if>
      <if test="record.xmmc != null" >
        xmmc = #{record.xmmc,jdbcType=VARCHAR},
      </if>
      <if test="record.xmjb != null" >
        xmjb = #{record.xmjb,jdbcType=VARCHAR},
      </if>
      <if test="record.ysnd != null" >
        ysnd = #{record.ysnd,jdbcType=VARCHAR},
      </if>
      <if test="record.yshf != null" >
        yshf = #{record.yshf,jdbcType=VARCHAR},
      </if>
      <if test="record.ysxd != null" >
        ysxd = #{record.ysxd,jdbcType=VARCHAR},
      </if>
      <if test="record.ysje != null" >
        ysje = #{record.ysje,jdbcType=VARCHAR},
      </if>
      <if test="record.jf != null" >
        jf = #{record.jf,jdbcType=VARCHAR},
      </if>
      <if test="record.fwdxbm != null" >
        fwdxbm = #{record.fwdxbm,jdbcType=VARCHAR},
      </if>
      <if test="record.fwdx != null" >
        fwdx = #{record.fwdx,jdbcType=VARCHAR},
      </if>
      <if test="record.zylbbm != null" >
        zylbbm = #{record.zylbbm,jdbcType=VARCHAR},
      </if>
      <if test="record.zylb != null" >
        zylb = #{record.zylb,jdbcType=VARCHAR},
      </if>
      <if test="record.fzdwbm != null" >
        fzdwbm = #{record.fzdwbm,jdbcType=VARCHAR},
      </if>
      <if test="record.fzdw != null" >
        fzdw = #{record.fzdw,jdbcType=VARCHAR},
      </if>
      <if test="record.jtfzdwbm != null" >
        jtfzdwbm = #{record.jtfzdwbm,jdbcType=VARCHAR},
      </if>
      <if test="record.jtfzdw != null" >
        jtfzdw = #{record.jtfzdw,jdbcType=VARCHAR},
      </if>
      <if test="record.fzryx != null" >
        fzryx = #{record.fzryx,jdbcType=VARCHAR},
      </if>
      <if test="record.fzrdh != null" >
        fzrdh = #{record.fzrdh,jdbcType=VARCHAR},
      </if>
      <if test="record.fzrxm != null" >
        fzrxm = #{record.fzrxm,jdbcType=VARCHAR},
      </if>
      <if test="record.lxrdh != null" >
        lxrdh = #{record.lxrdh,jdbcType=VARCHAR},
      </if>
      <if test="record.lxryx != null" >
        lxryx = #{record.lxryx,jdbcType=VARCHAR},
      </if>
      <if test="record.lxrxm != null" >
        lxrxm = #{record.lxrxm,jdbcType=VARCHAR},
      </if>
      <if test="record.jssxxm != null" >
        jssxxm = #{record.jssxxm,jdbcType=VARCHAR},
      </if>
      <if test="record.jssj != null" >
        jssj = #{record.jssj,jdbcType=VARCHAR},
      </if>
      <if test="record.kssj != null" >
        kssj = #{record.kssj,jdbcType=VARCHAR},
      </if>
      <if test="record.yjsj != null" >
        yjsj = #{record.yjsj,jdbcType=VARCHAR},
      </if>
      <if test="record.zyly != null" >
        zyly = #{record.zyly,jdbcType=VARCHAR},
      </if>
      <if test="record.zysx != null" >
        zysx = #{record.zysx,jdbcType=VARCHAR},
      </if>
      <if test="record.sjid != null" >
        sjid = #{record.sjid,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createPerson != null" >
        create_person = #{record.createPerson,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.updateDate != null" >
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.projectId != null" >
        project_id = #{record.projectId,jdbcType=VARCHAR},
      </if>
      <if test="record.parentProjectId != null" >
        parent_project_id = #{record.parentProjectId,jdbcType=VARCHAR},
      </if>
      <if test="record.projectType != null" >
        project_type = #{record.projectType,jdbcType=VARCHAR},
      </if>
      <if test="record.erpProjectCode != null" >
        erp_project_code = #{record.erpProjectCode,jdbcType=VARCHAR},
      </if>
      <if test="record.erpProjectName != null" >
        erp_project_name = #{record.erpProjectName,jdbcType=VARCHAR},
      </if>
      <if test="record.projectScope != null" >
        project_scope = #{record.projectScope,jdbcType=VARCHAR},
      </if>
      <if test="record.projectLevel != null" >
        project_level = #{record.projectLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.projectProperty != null" >
        project_property = #{record.projectProperty,jdbcType=VARCHAR},
      </if>
      <if test="record.projectAbc != null" >
        project_abc = #{record.projectAbc,jdbcType=VARCHAR},
      </if>
      <if test="record.projectSource != null" >
        project_source = #{record.projectSource,jdbcType=VARCHAR},
      </if>
      <if test="record.yjsjks != null" >
        yjsjks = #{record.yjsjks,jdbcType=VARCHAR},
      </if>
      <if test="record.yjsjjs != null" >
        yjsjjs = #{record.yjsjjs,jdbcType=VARCHAR},
      </if>
      <if test="record.xmlbbm != null" >
        xmlbbm = #{record.xmlbbm,jdbcType=VARCHAR},
      </if>
      <if test="record.xmlbmc != null" >
        xmlbmc = #{record.xmlbmc,jdbcType=VARCHAR},
      </if>
      <if test="record.gsbmmc != null" >
        gsbmmc = #{record.gsbmmc,jdbcType=VARCHAR},
      </if>
      <if test="record.gsbmbm != null" >
        gsbmbm = #{record.gsbmbm,jdbcType=VARCHAR},
      </if>
      <if test="record.zycmc != null" >
        zycmc = #{record.zycmc,jdbcType=VARCHAR},
      </if>
      <if test="record.zycbm != null" >
        zycbm = #{record.zycbm,jdbcType=VARCHAR},
      </if>
      <if test="record.typeFlag != null" >
        type_flag = #{record.typeFlag,jdbcType=VARCHAR},
      </if>
      <if test="record.define1 != null" >
        define1 = #{record.define1,jdbcType=VARCHAR},
      </if>
      <if test="record.define2 != null" >
        define2 = #{record.define2,jdbcType=VARCHAR},
      </if>
      <if test="record.define3 != null" >
        define3 = #{record.define3,jdbcType=VARCHAR},
      </if>
      <if test="record.define4 != null" >
        define4 = #{record.define4,jdbcType=VARCHAR},
      </if>
      <if test="record.define5 != null" >
        define5 = #{record.define5,jdbcType=VARCHAR},
      </if>
      <if test="record.define6 != null" >
        define6 = #{record.define6,jdbcType=VARCHAR},
      </if>
      <if test="record.define7 != null" >
        define7 = #{record.define7,jdbcType=VARCHAR},
      </if>
      <if test="record.define8 != null" >
        define8 = #{record.define8,jdbcType=VARCHAR},
      </if>
      <if test="record.define9 != null" >
        define9 = #{record.define9,jdbcType=VARCHAR},
      </if>
      <if test="record.lxbj != null" >
        lxbj = #{record.lxbj,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.yjnr != null" >
        yjnr = #{record.yjnr,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.jdap != null" >
        jdap = #{record.jdap,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.yjmb != null" >
        yjmb = #{record.yjmb,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update out_project_info
    set data_id = #{record.dataId,jdbcType=VARCHAR},
      nd = #{record.nd,jdbcType=VARCHAR},
      xmid = #{record.xmid,jdbcType=VARCHAR},
      hth = #{record.hth,jdbcType=VARCHAR},
      xmmc = #{record.xmmc,jdbcType=VARCHAR},
      xmjb = #{record.xmjb,jdbcType=VARCHAR},
      ysnd = #{record.ysnd,jdbcType=VARCHAR},
      yshf = #{record.yshf,jdbcType=VARCHAR},
      ysxd = #{record.ysxd,jdbcType=VARCHAR},
      ysje = #{record.ysje,jdbcType=VARCHAR},
      jf = #{record.jf,jdbcType=VARCHAR},
      fwdxbm = #{record.fwdxbm,jdbcType=VARCHAR},
      fwdx = #{record.fwdx,jdbcType=VARCHAR},
      zylbbm = #{record.zylbbm,jdbcType=VARCHAR},
      zylb = #{record.zylb,jdbcType=VARCHAR},
      fzdwbm = #{record.fzdwbm,jdbcType=VARCHAR},
      fzdw = #{record.fzdw,jdbcType=VARCHAR},
      jtfzdwbm = #{record.jtfzdwbm,jdbcType=VARCHAR},
      jtfzdw = #{record.jtfzdw,jdbcType=VARCHAR},
      fzryx = #{record.fzryx,jdbcType=VARCHAR},
      fzrdh = #{record.fzrdh,jdbcType=VARCHAR},
      fzrxm = #{record.fzrxm,jdbcType=VARCHAR},
      lxrdh = #{record.lxrdh,jdbcType=VARCHAR},
      lxryx = #{record.lxryx,jdbcType=VARCHAR},
      lxrxm = #{record.lxrxm,jdbcType=VARCHAR},
      jssxxm = #{record.jssxxm,jdbcType=VARCHAR},
      jssj = #{record.jssj,jdbcType=VARCHAR},
      kssj = #{record.kssj,jdbcType=VARCHAR},
      yjsj = #{record.yjsj,jdbcType=VARCHAR},
      zyly = #{record.zyly,jdbcType=VARCHAR},
      zysx = #{record.zysx,jdbcType=VARCHAR},
      sjid = #{record.sjid,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      create_person = #{record.createPerson,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      project_id = #{record.projectId,jdbcType=VARCHAR},
      parent_project_id = #{record.parentProjectId,jdbcType=VARCHAR},
      project_type = #{record.projectType,jdbcType=VARCHAR},
      erp_project_code = #{record.erpProjectCode,jdbcType=VARCHAR},
      erp_project_name = #{record.erpProjectName,jdbcType=VARCHAR},
      project_scope = #{record.projectScope,jdbcType=VARCHAR},
      project_level = #{record.projectLevel,jdbcType=VARCHAR},
      project_property = #{record.projectProperty,jdbcType=VARCHAR},
      project_abc = #{record.projectAbc,jdbcType=VARCHAR},
      project_source = #{record.projectSource,jdbcType=VARCHAR},
      yjsjks = #{record.yjsjks,jdbcType=VARCHAR},
      yjsjjs = #{record.yjsjjs,jdbcType=VARCHAR},
      xmlbbm = #{record.xmlbbm,jdbcType=VARCHAR},
      xmlbmc = #{record.xmlbmc,jdbcType=VARCHAR},
      gsbmmc = #{record.gsbmmc,jdbcType=VARCHAR},
      gsbmbm = #{record.gsbmbm,jdbcType=VARCHAR},
      zycmc = #{record.zycmc,jdbcType=VARCHAR},
      zycbm = #{record.zycbm,jdbcType=VARCHAR},
      type_flag = #{record.typeFlag,jdbcType=VARCHAR},
      define1 = #{record.define1,jdbcType=VARCHAR},
      define2 = #{record.define2,jdbcType=VARCHAR},
      define3 = #{record.define3,jdbcType=VARCHAR},
      define4 = #{record.define4,jdbcType=VARCHAR},
      define5 = #{record.define5,jdbcType=VARCHAR},
      define6 = #{record.define6,jdbcType=VARCHAR},
      define7 = #{record.define7,jdbcType=VARCHAR},
      define8 = #{record.define8,jdbcType=VARCHAR},
      define9 = #{record.define9,jdbcType=VARCHAR},
      lxbj = #{record.lxbj,jdbcType=LONGVARCHAR},
      yjnr = #{record.yjnr,jdbcType=LONGVARCHAR},
      jdap = #{record.jdap,jdbcType=LONGVARCHAR},
      yjmb = #{record.yjmb,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update out_project_info
    set data_id = #{record.dataId,jdbcType=VARCHAR},
      nd = #{record.nd,jdbcType=VARCHAR},
      xmid = #{record.xmid,jdbcType=VARCHAR},
      hth = #{record.hth,jdbcType=VARCHAR},
      xmmc = #{record.xmmc,jdbcType=VARCHAR},
      xmjb = #{record.xmjb,jdbcType=VARCHAR},
      ysnd = #{record.ysnd,jdbcType=VARCHAR},
      yshf = #{record.yshf,jdbcType=VARCHAR},
      ysxd = #{record.ysxd,jdbcType=VARCHAR},
      ysje = #{record.ysje,jdbcType=VARCHAR},
      jf = #{record.jf,jdbcType=VARCHAR},
      fwdxbm = #{record.fwdxbm,jdbcType=VARCHAR},
      fwdx = #{record.fwdx,jdbcType=VARCHAR},
      zylbbm = #{record.zylbbm,jdbcType=VARCHAR},
      zylb = #{record.zylb,jdbcType=VARCHAR},
      fzdwbm = #{record.fzdwbm,jdbcType=VARCHAR},
      fzdw = #{record.fzdw,jdbcType=VARCHAR},
      jtfzdwbm = #{record.jtfzdwbm,jdbcType=VARCHAR},
      jtfzdw = #{record.jtfzdw,jdbcType=VARCHAR},
      fzryx = #{record.fzryx,jdbcType=VARCHAR},
      fzrdh = #{record.fzrdh,jdbcType=VARCHAR},
      fzrxm = #{record.fzrxm,jdbcType=VARCHAR},
      lxrdh = #{record.lxrdh,jdbcType=VARCHAR},
      lxryx = #{record.lxryx,jdbcType=VARCHAR},
      lxrxm = #{record.lxrxm,jdbcType=VARCHAR},
      jssxxm = #{record.jssxxm,jdbcType=VARCHAR},
      jssj = #{record.jssj,jdbcType=VARCHAR},
      kssj = #{record.kssj,jdbcType=VARCHAR},
      yjsj = #{record.yjsj,jdbcType=VARCHAR},
      zyly = #{record.zyly,jdbcType=VARCHAR},
      zysx = #{record.zysx,jdbcType=VARCHAR},
      sjid = #{record.sjid,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      create_person = #{record.createPerson,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      project_id = #{record.projectId,jdbcType=VARCHAR},
      parent_project_id = #{record.parentProjectId,jdbcType=VARCHAR},
      project_type = #{record.projectType,jdbcType=VARCHAR},
      erp_project_code = #{record.erpProjectCode,jdbcType=VARCHAR},
      erp_project_name = #{record.erpProjectName,jdbcType=VARCHAR},
      project_scope = #{record.projectScope,jdbcType=VARCHAR},
      project_level = #{record.projectLevel,jdbcType=VARCHAR},
      project_property = #{record.projectProperty,jdbcType=VARCHAR},
      project_abc = #{record.projectAbc,jdbcType=VARCHAR},
      project_source = #{record.projectSource,jdbcType=VARCHAR},
      yjsjks = #{record.yjsjks,jdbcType=VARCHAR},
      yjsjjs = #{record.yjsjjs,jdbcType=VARCHAR},
      xmlbbm = #{record.xmlbbm,jdbcType=VARCHAR},
      xmlbmc = #{record.xmlbmc,jdbcType=VARCHAR},
      gsbmmc = #{record.gsbmmc,jdbcType=VARCHAR},
      gsbmbm = #{record.gsbmbm,jdbcType=VARCHAR},
      zycmc = #{record.zycmc,jdbcType=VARCHAR},
      zycbm = #{record.zycbm,jdbcType=VARCHAR},
      type_flag = #{record.typeFlag,jdbcType=VARCHAR},
      define1 = #{record.define1,jdbcType=VARCHAR},
      define2 = #{record.define2,jdbcType=VARCHAR},
      define3 = #{record.define3,jdbcType=VARCHAR},
      define4 = #{record.define4,jdbcType=VARCHAR},
      define5 = #{record.define5,jdbcType=VARCHAR},
      define6 = #{record.define6,jdbcType=VARCHAR},
      define7 = #{record.define7,jdbcType=VARCHAR},
      define8 = #{record.define8,jdbcType=VARCHAR},
      define9 = #{record.define9,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pcitc.base.stp.out.OutProjectInfoWithBLOBs" >
    update out_project_info
    <set >
      <if test="nd != null" >
        nd = #{nd,jdbcType=VARCHAR},
      </if>
      <if test="xmid != null" >
        xmid = #{xmid,jdbcType=VARCHAR},
      </if>
      <if test="hth != null" >
        hth = #{hth,jdbcType=VARCHAR},
      </if>
      <if test="xmmc != null" >
        xmmc = #{xmmc,jdbcType=VARCHAR},
      </if>
      <if test="xmjb != null" >
        xmjb = #{xmjb,jdbcType=VARCHAR},
      </if>
      <if test="ysnd != null" >
        ysnd = #{ysnd,jdbcType=VARCHAR},
      </if>
      <if test="yshf != null" >
        yshf = #{yshf,jdbcType=VARCHAR},
      </if>
      <if test="ysxd != null" >
        ysxd = #{ysxd,jdbcType=VARCHAR},
      </if>
      <if test="ysje != null" >
        ysje = #{ysje,jdbcType=VARCHAR},
      </if>
      <if test="jf != null" >
        jf = #{jf,jdbcType=VARCHAR},
      </if>
      <if test="fwdxbm != null" >
        fwdxbm = #{fwdxbm,jdbcType=VARCHAR},
      </if>
      <if test="fwdx != null" >
        fwdx = #{fwdx,jdbcType=VARCHAR},
      </if>
      <if test="zylbbm != null" >
        zylbbm = #{zylbbm,jdbcType=VARCHAR},
      </if>
      <if test="zylb != null" >
        zylb = #{zylb,jdbcType=VARCHAR},
      </if>
      <if test="fzdwbm != null" >
        fzdwbm = #{fzdwbm,jdbcType=VARCHAR},
      </if>
      <if test="fzdw != null" >
        fzdw = #{fzdw,jdbcType=VARCHAR},
      </if>
      <if test="jtfzdwbm != null" >
        jtfzdwbm = #{jtfzdwbm,jdbcType=VARCHAR},
      </if>
      <if test="jtfzdw != null" >
        jtfzdw = #{jtfzdw,jdbcType=VARCHAR},
      </if>
      <if test="fzryx != null" >
        fzryx = #{fzryx,jdbcType=VARCHAR},
      </if>
      <if test="fzrdh != null" >
        fzrdh = #{fzrdh,jdbcType=VARCHAR},
      </if>
      <if test="fzrxm != null" >
        fzrxm = #{fzrxm,jdbcType=VARCHAR},
      </if>
      <if test="lxrdh != null" >
        lxrdh = #{lxrdh,jdbcType=VARCHAR},
      </if>
      <if test="lxryx != null" >
        lxryx = #{lxryx,jdbcType=VARCHAR},
      </if>
      <if test="lxrxm != null" >
        lxrxm = #{lxrxm,jdbcType=VARCHAR},
      </if>
      <if test="jssxxm != null" >
        jssxxm = #{jssxxm,jdbcType=VARCHAR},
      </if>
      <if test="jssj != null" >
        jssj = #{jssj,jdbcType=VARCHAR},
      </if>
      <if test="kssj != null" >
        kssj = #{kssj,jdbcType=VARCHAR},
      </if>
      <if test="yjsj != null" >
        yjsj = #{yjsj,jdbcType=VARCHAR},
      </if>
      <if test="zyly != null" >
        zyly = #{zyly,jdbcType=VARCHAR},
      </if>
      <if test="zysx != null" >
        zysx = #{zysx,jdbcType=VARCHAR},
      </if>
      <if test="sjid != null" >
        sjid = #{sjid,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createPerson != null" >
        create_person = #{createPerson,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="projectId != null" >
        project_id = #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="parentProjectId != null" >
        parent_project_id = #{parentProjectId,jdbcType=VARCHAR},
      </if>
      <if test="projectType != null" >
        project_type = #{projectType,jdbcType=VARCHAR},
      </if>
      <if test="erpProjectCode != null" >
        erp_project_code = #{erpProjectCode,jdbcType=VARCHAR},
      </if>
      <if test="erpProjectName != null" >
        erp_project_name = #{erpProjectName,jdbcType=VARCHAR},
      </if>
      <if test="projectScope != null" >
        project_scope = #{projectScope,jdbcType=VARCHAR},
      </if>
      <if test="projectLevel != null" >
        project_level = #{projectLevel,jdbcType=VARCHAR},
      </if>
      <if test="projectProperty != null" >
        project_property = #{projectProperty,jdbcType=VARCHAR},
      </if>
      <if test="projectAbc != null" >
        project_abc = #{projectAbc,jdbcType=VARCHAR},
      </if>
      <if test="projectSource != null" >
        project_source = #{projectSource,jdbcType=VARCHAR},
      </if>
      <if test="yjsjks != null" >
        yjsjks = #{yjsjks,jdbcType=VARCHAR},
      </if>
      <if test="yjsjjs != null" >
        yjsjjs = #{yjsjjs,jdbcType=VARCHAR},
      </if>
      <if test="xmlbbm != null" >
        xmlbbm = #{xmlbbm,jdbcType=VARCHAR},
      </if>
      <if test="xmlbmc != null" >
        xmlbmc = #{xmlbmc,jdbcType=VARCHAR},
      </if>
      <if test="gsbmmc != null" >
        gsbmmc = #{gsbmmc,jdbcType=VARCHAR},
      </if>
      <if test="gsbmbm != null" >
        gsbmbm = #{gsbmbm,jdbcType=VARCHAR},
      </if>
      <if test="zycmc != null" >
        zycmc = #{zycmc,jdbcType=VARCHAR},
      </if>
      <if test="zycbm != null" >
        zycbm = #{zycbm,jdbcType=VARCHAR},
      </if>
      <if test="typeFlag != null" >
        type_flag = #{typeFlag,jdbcType=VARCHAR},
      </if>
      <if test="define1 != null" >
        define1 = #{define1,jdbcType=VARCHAR},
      </if>
      <if test="define2 != null" >
        define2 = #{define2,jdbcType=VARCHAR},
      </if>
      <if test="define3 != null" >
        define3 = #{define3,jdbcType=VARCHAR},
      </if>
      <if test="define4 != null" >
        define4 = #{define4,jdbcType=VARCHAR},
      </if>
      <if test="define5 != null" >
        define5 = #{define5,jdbcType=VARCHAR},
      </if>
      <if test="define6 != null" >
        define6 = #{define6,jdbcType=VARCHAR},
      </if>
      <if test="define7 != null" >
        define7 = #{define7,jdbcType=VARCHAR},
      </if>
      <if test="define8 != null" >
        define8 = #{define8,jdbcType=VARCHAR},
      </if>
      <if test="define9 != null" >
        define9 = #{define9,jdbcType=VARCHAR},
      </if>
      <if test="lxbj != null" >
        lxbj = #{lxbj,jdbcType=LONGVARCHAR},
      </if>
      <if test="yjnr != null" >
        yjnr = #{yjnr,jdbcType=LONGVARCHAR},
      </if>
      <if test="jdap != null" >
        jdap = #{jdap,jdbcType=LONGVARCHAR},
      </if>
      <if test="yjmb != null" >
        yjmb = #{yjmb,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where data_id = #{dataId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.pcitc.base.stp.out.OutProjectInfoWithBLOBs" >
    update out_project_info
    set nd = #{nd,jdbcType=VARCHAR},
      xmid = #{xmid,jdbcType=VARCHAR},
      hth = #{hth,jdbcType=VARCHAR},
      xmmc = #{xmmc,jdbcType=VARCHAR},
      xmjb = #{xmjb,jdbcType=VARCHAR},
      ysnd = #{ysnd,jdbcType=VARCHAR},
      yshf = #{yshf,jdbcType=VARCHAR},
      ysxd = #{ysxd,jdbcType=VARCHAR},
      ysje = #{ysje,jdbcType=VARCHAR},
      jf = #{jf,jdbcType=VARCHAR},
      fwdxbm = #{fwdxbm,jdbcType=VARCHAR},
      fwdx = #{fwdx,jdbcType=VARCHAR},
      zylbbm = #{zylbbm,jdbcType=VARCHAR},
      zylb = #{zylb,jdbcType=VARCHAR},
      fzdwbm = #{fzdwbm,jdbcType=VARCHAR},
      fzdw = #{fzdw,jdbcType=VARCHAR},
      jtfzdwbm = #{jtfzdwbm,jdbcType=VARCHAR},
      jtfzdw = #{jtfzdw,jdbcType=VARCHAR},
      fzryx = #{fzryx,jdbcType=VARCHAR},
      fzrdh = #{fzrdh,jdbcType=VARCHAR},
      fzrxm = #{fzrxm,jdbcType=VARCHAR},
      lxrdh = #{lxrdh,jdbcType=VARCHAR},
      lxryx = #{lxryx,jdbcType=VARCHAR},
      lxrxm = #{lxrxm,jdbcType=VARCHAR},
      jssxxm = #{jssxxm,jdbcType=VARCHAR},
      jssj = #{jssj,jdbcType=VARCHAR},
      kssj = #{kssj,jdbcType=VARCHAR},
      yjsj = #{yjsj,jdbcType=VARCHAR},
      zyly = #{zyly,jdbcType=VARCHAR},
      zysx = #{zysx,jdbcType=VARCHAR},
      sjid = #{sjid,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      create_person = #{createPerson,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      project_id = #{projectId,jdbcType=VARCHAR},
      parent_project_id = #{parentProjectId,jdbcType=VARCHAR},
      project_type = #{projectType,jdbcType=VARCHAR},
      erp_project_code = #{erpProjectCode,jdbcType=VARCHAR},
      erp_project_name = #{erpProjectName,jdbcType=VARCHAR},
      project_scope = #{projectScope,jdbcType=VARCHAR},
      project_level = #{projectLevel,jdbcType=VARCHAR},
      project_property = #{projectProperty,jdbcType=VARCHAR},
      project_abc = #{projectAbc,jdbcType=VARCHAR},
      project_source = #{projectSource,jdbcType=VARCHAR},
      yjsjks = #{yjsjks,jdbcType=VARCHAR},
      yjsjjs = #{yjsjjs,jdbcType=VARCHAR},
      xmlbbm = #{xmlbbm,jdbcType=VARCHAR},
      xmlbmc = #{xmlbmc,jdbcType=VARCHAR},
      gsbmmc = #{gsbmmc,jdbcType=VARCHAR},
      gsbmbm = #{gsbmbm,jdbcType=VARCHAR},
      zycmc = #{zycmc,jdbcType=VARCHAR},
      zycbm = #{zycbm,jdbcType=VARCHAR},
      type_flag = #{typeFlag,jdbcType=VARCHAR},
      define1 = #{define1,jdbcType=VARCHAR},
      define2 = #{define2,jdbcType=VARCHAR},
      define3 = #{define3,jdbcType=VARCHAR},
      define4 = #{define4,jdbcType=VARCHAR},
      define5 = #{define5,jdbcType=VARCHAR},
      define6 = #{define6,jdbcType=VARCHAR},
      define7 = #{define7,jdbcType=VARCHAR},
      define8 = #{define8,jdbcType=VARCHAR},
      define9 = #{define9,jdbcType=VARCHAR},
      lxbj = #{lxbj,jdbcType=LONGVARCHAR},
      yjnr = #{yjnr,jdbcType=LONGVARCHAR},
      jdap = #{jdap,jdbcType=LONGVARCHAR},
      yjmb = #{yjmb,jdbcType=LONGVARCHAR}
    where data_id = #{dataId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pcitc.base.stp.out.OutProjectInfo" >
    update out_project_info
    set nd = #{nd,jdbcType=VARCHAR},
      xmid = #{xmid,jdbcType=VARCHAR},
      hth = #{hth,jdbcType=VARCHAR},
      xmmc = #{xmmc,jdbcType=VARCHAR},
      xmjb = #{xmjb,jdbcType=VARCHAR},
      ysnd = #{ysnd,jdbcType=VARCHAR},
      yshf = #{yshf,jdbcType=VARCHAR},
      ysxd = #{ysxd,jdbcType=VARCHAR},
      ysje = #{ysje,jdbcType=VARCHAR},
      jf = #{jf,jdbcType=VARCHAR},
      fwdxbm = #{fwdxbm,jdbcType=VARCHAR},
      fwdx = #{fwdx,jdbcType=VARCHAR},
      zylbbm = #{zylbbm,jdbcType=VARCHAR},
      zylb = #{zylb,jdbcType=VARCHAR},
      fzdwbm = #{fzdwbm,jdbcType=VARCHAR},
      fzdw = #{fzdw,jdbcType=VARCHAR},
      jtfzdwbm = #{jtfzdwbm,jdbcType=VARCHAR},
      jtfzdw = #{jtfzdw,jdbcType=VARCHAR},
      fzryx = #{fzryx,jdbcType=VARCHAR},
      fzrdh = #{fzrdh,jdbcType=VARCHAR},
      fzrxm = #{fzrxm,jdbcType=VARCHAR},
      lxrdh = #{lxrdh,jdbcType=VARCHAR},
      lxryx = #{lxryx,jdbcType=VARCHAR},
      lxrxm = #{lxrxm,jdbcType=VARCHAR},
      jssxxm = #{jssxxm,jdbcType=VARCHAR},
      jssj = #{jssj,jdbcType=VARCHAR},
      kssj = #{kssj,jdbcType=VARCHAR},
      yjsj = #{yjsj,jdbcType=VARCHAR},
      zyly = #{zyly,jdbcType=VARCHAR},
      zysx = #{zysx,jdbcType=VARCHAR},
      sjid = #{sjid,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      create_person = #{createPerson,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      project_id = #{projectId,jdbcType=VARCHAR},
      parent_project_id = #{parentProjectId,jdbcType=VARCHAR},
      project_type = #{projectType,jdbcType=VARCHAR},
      erp_project_code = #{erpProjectCode,jdbcType=VARCHAR},
      erp_project_name = #{erpProjectName,jdbcType=VARCHAR},
      project_scope = #{projectScope,jdbcType=VARCHAR},
      project_level = #{projectLevel,jdbcType=VARCHAR},
      project_property = #{projectProperty,jdbcType=VARCHAR},
      project_abc = #{projectAbc,jdbcType=VARCHAR},
      project_source = #{projectSource,jdbcType=VARCHAR},
      yjsjks = #{yjsjks,jdbcType=VARCHAR},
      yjsjjs = #{yjsjjs,jdbcType=VARCHAR},
      xmlbbm = #{xmlbbm,jdbcType=VARCHAR},
      xmlbmc = #{xmlbmc,jdbcType=VARCHAR},
      gsbmmc = #{gsbmmc,jdbcType=VARCHAR},
      gsbmbm = #{gsbmbm,jdbcType=VARCHAR},
      zycmc = #{zycmc,jdbcType=VARCHAR},
      zycbm = #{zycbm,jdbcType=VARCHAR},
      type_flag = #{typeFlag,jdbcType=VARCHAR},
      define1 = #{define1,jdbcType=VARCHAR},
      define2 = #{define2,jdbcType=VARCHAR},
      define3 = #{define3,jdbcType=VARCHAR},
      define4 = #{define4,jdbcType=VARCHAR},
      define5 = #{define5,jdbcType=VARCHAR},
      define6 = #{define6,jdbcType=VARCHAR},
      define7 = #{define7,jdbcType=VARCHAR},
      define8 = #{define8,jdbcType=VARCHAR},
      define9 = #{define9,jdbcType=VARCHAR}
    where data_id = #{dataId,jdbcType=VARCHAR}
  </update>
  
	<!-- 批量插入项目数据 -->
	<insert id="insertOutProjectBatch" parameterType="java.util.List">
		insert into out_project_info (data_id, nd, xmid, hth,
		xmmc, xmjb, jf, ysnd, yshf, ysxd, ysje, 
		fwdxbm, fwdx,
		zylbbm, zylb, fzdwbm,
		fzdw, jtfzdwbm, jtfzdw,
		fzrxm,fzrdh,fzryx,lxrxm,lxrdh,lxryx,
		jssxxm, yjsj,kssj,jssj,
		zyly,
		zysx, sjid, create_date,
		create_person, status,
		update_date,project_id, parent_project_id,
		project_type,project_property,
		erp_project_code,
		erp_project_name,type_flag,
		xmlbbm,xmlbmc,gsbmmc,gsbmbm,zycmc,zycbm,
		define1,define2,define3,define4,define5,define6,define7,define8,define9
		)
		values
		<foreach collection="list" item="projectInfo" index="index"
			separator=",">
			(
			#{projectInfo.dataId,jdbcType=VARCHAR},
			#{projectInfo.nd,jdbcType=VARCHAR},
			#{projectInfo.xmid,jdbcType=VARCHAR},
			#{projectInfo.hth,jdbcType=VARCHAR},
			#{projectInfo.xmmc,jdbcType=VARCHAR},
			#{projectInfo.xmjb,jdbcType=VARCHAR},
			#{projectInfo.jf,jdbcType=VARCHAR},
			#{projectInfo.ysnd,jdbcType=VARCHAR},
			#{projectInfo.yshf,jdbcType=VARCHAR},
			#{projectInfo.ysxd,jdbcType=VARCHAR},
			#{projectInfo.ysje,jdbcType=VARCHAR},
			#{projectInfo.fwdxbm,jdbcType=VARCHAR},
			#{projectInfo.fwdx,jdbcType=VARCHAR},
			#{projectInfo.zylbbm,jdbcType=VARCHAR},
			#{projectInfo.zylb,jdbcType=VARCHAR},
			#{projectInfo.fzdwbm,jdbcType=VARCHAR},
			#{projectInfo.fzdw,jdbcType=VARCHAR},
			#{projectInfo.jtfzdwbm,jdbcType=VARCHAR},
			#{projectInfo.jtfzdw,jdbcType=VARCHAR},
			#{projectInfo.fzrxm,jdbcType=VARCHAR},
			#{projectInfo.fzrdh,jdbcType=VARCHAR},
			#{projectInfo.fzryx,jdbcType=VARCHAR},
			#{projectInfo.lxrxm,jdbcType=VARCHAR},
			#{projectInfo.lxrdh,jdbcType=VARCHAR},
			#{projectInfo.lxryx,jdbcType=VARCHAR},
			#{projectInfo.jssxxm,jdbcType=VARCHAR},
			#{projectInfo.yjsj,jdbcType=VARCHAR},
			#{projectInfo.kssj,jdbcType=VARCHAR},
			#{projectInfo.jssj,jdbcType=VARCHAR},
			#{projectInfo.zyly,jdbcType=VARCHAR},
			#{projectInfo.zysx,jdbcType=VARCHAR},
			#{projectInfo.sjid,jdbcType=VARCHAR},
			#{projectInfo.createDate,jdbcType=TIMESTAMP},
			#{projectInfo.createPerson,jdbcType=VARCHAR},
			#{projectInfo.status,jdbcType=VARCHAR},
			#{projectInfo.updateDate,jdbcType=TIMESTAMP},
			#{projectInfo.projectId,jdbcType=VARCHAR},
			#{projectInfo.parentProjectId,jdbcType=TIMESTAMP},
			#{projectInfo.projectType,jdbcType=VARCHAR},
			#{projectInfo.projectProperty,jdbcType=VARCHAR},
			#{projectInfo.erpProjectCode,jdbcType=VARCHAR},
			#{projectInfo.erpProjectName,jdbcType=VARCHAR},
			#{projectInfo.typeFlag,jdbcType=TIMESTAMP},
			#{projectInfo.xmlbbm,jdbcType=VARCHAR},
			#{projectInfo.xmlbmc,jdbcType=VARCHAR},
			#{projectInfo.gsbmmc,jdbcType=VARCHAR},
			#{projectInfo.gsbmbm,jdbcType=VARCHAR},
			#{projectInfo.zycmc,jdbcType=VARCHAR},
			#{projectInfo.zycbm,jdbcType=VARCHAR},
			#{projectInfo.define1,jdbcType=VARCHAR},
			#{projectInfo.define2,jdbcType=VARCHAR},
			#{projectInfo.define3,jdbcType=VARCHAR},
			#{projectInfo.define4,jdbcType=VARCHAR},
			#{projectInfo.define5,jdbcType=VARCHAR},
			#{projectInfo.define6,jdbcType=VARCHAR},
			#{projectInfo.define7,jdbcType=VARCHAR},
			#{projectInfo.define8,jdbcType=VARCHAR},
			#{projectInfo.define9,jdbcType=VARCHAR}
			)
		</foreach>
	</insert>
	
	<!-- 批量插入项目预算数据 -->
	<insert id="insertProjectItemData" parameterType="java.util.List">
		insert into out_project_item (data_id, nd, ktid, ktmc, jfhj,sjhf,xdjf,
		create_date, create_person, status, update_date, 
		define1,define2,define3,define4,define5,define6
		)
		values
		<foreach collection="list" item="projectInfo" index="index"
			separator=",">
			(
			#{projectInfo.dataId,jdbcType=VARCHAR},
			#{projectInfo.nd,jdbcType=VARCHAR},
			#{projectInfo.ktid,jdbcType=VARCHAR},
			#{projectInfo.ktmc,jdbcType=VARCHAR},
			#{projectInfo.jfhj,jdbcType=VARCHAR},
			#{projectInfo.sjhf,jdbcType=VARCHAR},
			#{projectInfo.xdjf,jdbcType=VARCHAR},
			#{projectInfo.createDate,jdbcType=TIMESTAMP},
			#{projectInfo.createPerson,jdbcType=VARCHAR},
			#{projectInfo.status,jdbcType=VARCHAR},
			#{projectInfo.updateDate,jdbcType=TIMESTAMP},
			#{projectInfo.define1,jdbcType=VARCHAR},
			#{projectInfo.define2,jdbcType=VARCHAR},
			#{projectInfo.define3,jdbcType=VARCHAR},
			#{projectInfo.define4,jdbcType=VARCHAR},
			#{projectInfo.define5,jdbcType=VARCHAR},
			#{projectInfo.define6,jdbcType=VARCHAR}
			)
		</foreach>
	</insert>

	<select id="selectProjectByCond" resultMap="BaseResultMap"
		parameterType="com.pcitc.base.stp.out.OutProjectInfo">
		select out_project_info.*, group_concat(out_project_erp.erp_project_code) as epc
		from out_project_info left join out_project_erp on (out_project_info.data_id = out_project_erp.opi_id)
		where
		(out_project_info.project_type = '0' or out_project_info.project_type = '2')
		<if test="nd != null">
			and out_project_info.nd = #{nd,jdbcType=VARCHAR}
		</if>
		<if test="hth != null">
			and out_project_info.hth like '%${hth}%'
		</if>
		<if test="xmmc != null">
			and out_project_info.xmmc like '%${xmmc}%'
		</if>
		<if test="define1 != null">
			and out_project_info.define1 like '%${define1}%'
		</if>
		<if test="define2 != null">
			and out_project_info.define2 like '%${define2}%'
		</if>
		<if test="projectProperty != null">
			and out_project_info.project_property like '%${projectProperty}%'
		</if>
		<if test="projectScope != null">
			and out_project_info.project_scope like '%${projectScope}%'
		</if>
		<if test="typeFlag != null">
			and out_project_info.type_flag like '%${typeFlag}%'
		</if>
		<if test="zylb != null">
			and out_project_info.zylb like '%${zylb}%'
		</if>
		<if test="zycmc != null">
			and out_project_info.zycmc like '%${zycmc}%'
		</if>
		
		<if test="status != null">
			and out_project_info.status = #{status,jdbcType=VARCHAR}
		</if>
		group by out_project_info.data_id
	</select>

	<!-- 首页计算新开项目总数 -->
	<select id="getOutProjectInfoCount" resultType="java.util.Map" parameterType="java.util.HashMap">
		select 
        	count(DISTINCT xmid) as projectCount
		from out_project_info
		where 
			project_property not like '%十条龙%' and out_project_info.nd = '${nd}' and out_project_info.ysnd = '${nd}' and
			(project_type = '0' or project_type = '2') and out_project_info.project_property not like '%国家%'
			<if test="define2 != null and define2 != ''">
				and define2 like '%${define2}%'
			</if>
			<if test="typeFlag != null and typeFlag != ''">
				and type_flag like '%${typeFlag}%'
			</if>
	</select>
	
	<!-- 首页计算项目总金额, 包含结转和新开 -->
	<select id="getOutProjectInfoMoney" resultType="java.util.Map" parameterType="java.util.HashMap">
		select 
        	round(sum(out_project_info.ysje),4) as projectMoney
		from out_project_info
		where 
			project_property not like '%十条龙%' and out_project_info.ysnd = '${nd}' and
			(project_type = '0' or project_type = '2') and out_project_info.project_property not like '%国家%'
			<if test="define2 != null and define2 != ''">
				and define2 like '%${define2}%'
			</if>
			<if test="typeFlag != null and typeFlag != ''">
				and type_flag like '%${typeFlag}%'
			</if>
	</select>
	
	<!-- 研究院首页计算装备和科研合同总数 -->
	<select id="getOutProjectInfoCountWithKYZB" resultType="java.util.Map" parameterType="java.util.HashMap">
		select 
        	sum(case when xmlbbm != 'KYZB' then 1 else 0 end) as projectCount, 
			sum(case when xmlbbm = 'KYZB' then 1 else 0 end) as kyzbCount
		from out_project_info
		where 
			project_property not like '%十条龙%' and out_project_info.ysnd = '${nd}' and
			(project_type = '0' or project_type = '2') and out_project_info.project_property not like '%国家%'
			<if test="typeFlag != null and typeFlag != ''">
				and type_flag like '%${typeFlag}%'
			</if>
	</select>
	
	<!-- 首页计算十条龙及重大专项项目的总数量 -->
	<select id="getOutProjectDragonInfoCount" resultType="java.util.Map" parameterType="java.util.HashMap">
		select 
        	sum(case when project_property = '重大专项' or project_property = '十条龙项目' then 1 else 0 end) as zsl,
        	sum(case when project_property = '重大专项' then 1 else 0 end) as zdzxsl, 
			sum(case when project_property = '十条龙项目' then 1 else 0 end) as stlsl
		from (
			select DISTINCT xmmc,project_property
			from out_project_info
			where (project_type = '0' or project_type = '1') and nd='${nd}'
				<if test="define2 != null and define2 != ''">
					and define2 is not null and type_flag like '%直属研究院%'
				</if>
		) as tableA
	</select>

	<select id="getOutProjectScopeInfo" resultType="java.util.Map" parameterType="java.lang.String">
		select
			sum(case nd when '${nd}' then 1 else 0 end) as newProject,
			count(*) as totalProject,fzdw
		from out_project_info
		where project_type != '1'
		group by fzdw
	</select>


	<select id="getProjectTypeInfoByUnit" resultType="java.util.Map"
		parameterType="java.lang.String">
		select
			sum(case project_scope when '新开课题' then 1 else 0 end) as xksl,
			sum(case project_scope when '结转课题' then 1 else 0 end) as xjsl,
			sum(case project_scope when '完工课题' then 1 else 0 end) as wjsl,
			SUBSTR(type_flag FROM 2) type_flag
		from out_project_info
		where type_flag is not null
			  and project_type != '1' and xmlbbm != 'KYZB'
		group BY type_flag
	</select>
	
	<select id="getZBProjectTypeInfoByUnit" resultType="java.util.Map"
		parameterType="java.lang.String">
		select
			sum(case project_scope when '新开课题' then 1 else 0 end) as xksl,
			sum(case project_scope when '结转课题' then 1 else 0 end) as xjsl,
			sum(case project_scope when '完工课题' then 1 else 0 end) as wjsl,
			SUBSTR(type_flag FROM 2) type_flag
		from out_project_info
		where type_flag is not null
			  and project_type != '1' and xmlbbm = 'KYZB'
		group BY type_flag
	</select>
	
	<!-- 首页、领导首页，查询新开的国家项目、重点项目、重大项目、其他项目、总计的统计 -->
	<select id="getProjectTotalInfoByNew" resultType="java.util.Map" parameterType="java.util.HashMap">
		select
			sum(case when project_property ='国家项目' and project_scope = '新开课题' then 1 else 0 end) as gjxmsl,
			sum(case when project_property ='重大专项' and project_scope = '新开课题' then 1 else 0 end) as zdzzsl,
			sum(case when project_property ='重点项目' and project_scope = '新开课题' then 1 else 0 end) as zdxmsl,
			sum(case when project_property ='其他项目' and project_scope = '新开课题' then 1 else 0 end) as qtsl,
			count(*) as zsl
		from out_project_info
		where project_type != '1' and (project_scope = '新开课题' or project_scope = '结转课题') 
			<if test="define2 != null and define2 != ''">
				and define2 is not null and define2 like '%${define2}%'
			</if>
			<if test="typeFlag != null and typeFlag != ''">
				and type_flag like '%${typeFlag}%'
			</if>
	</select>

	<select id="getProjectTotalCountYearAndLastYear" resultType="java.util.Map"
		parameterType="java.lang.String">
		select
		sum(case when project_property ='国家项目' and project_scope = '新开课题' then 1 else 0 end) as xkgjsl,
		sum(case when project_property ='国家项目' and nd = '2017' then 1 else 0 end) as qngjsl,
		sum(case when project_property ='重大专项' and project_scope = '新开课题' then 1 else 0 end) as xkzzsl,
		sum(case when project_property ='重大专项' and nd = '2017' then 1 else 0 end) as qnzzsl,
		sum(case when project_property ='重点项目' and project_scope = '新开课题' then 1 else 0 end) as xkzdsl,
		sum(case when project_property ='重点项目' and nd = '2017' then 1 else 0 end) as qnzdsl,
		sum(case when LEFT(hth,3) ='CLY' and project_scope = '新开课题' then 1 else 0 end) as lysybsl,
		sum(case when LEFT(hth,3) ='CLY' and nd = '2017' then 1 else 0 end) as qnlysybsl,
		sum(case when LEFT(hth,3) ='CHG' and project_scope = '新开课题' then 1 else 0 end) as hgsybsl,
		sum(case when LEFT(hth,3) ='CHG' and nd = '2017' then 1 else 0 end) as qnhgsybsl
		from out_project_info
		where project_type != '1'
	</select>
	
	<select id="getProjectCountByProjectType" resultType="java.util.Map"
		parameterType="java.lang.String">
		select
			sum(case when project_scope = '新开课题' then 1 else 0 end) as xksl,
        	sum(case when project_scope = '结转课题' then 1 else 0 end) as xjsl,
        	count(*) as zsl,define4 as zycmc
		from out_project_info
		where (project_type = '0' or project_type = '2') and xmlbbm != 'KYZB' and 
			  (project_scope = '新开课题' or project_scope = '结转课题') and 
			  define4 is not null
    	group by define4
	</select>
	
	<select id="getProjectTypeCountByType" resultType="java.util.Map"
		parameterType="java.lang.String">
		select
		sum(case when project_property = '国家项目' then 1 else 0 end) as gjxmsl,
	    sum(case when project_property = '重大专项' then 1 else 0 end) as zdzxxmsl,
	    sum(case when project_property = '重点项目' then 1 else 0 end) as zdxmsl,
	    sum(case when project_property = '其他项目' then 1 else 0 end) as qtsl,
	    sum(case when define2 = '101勘探院' then 1 else 0 end) as ktysl,
	    sum(case when define2 = '102物探院' then 1 else 0 end) as wtysl,
	    sum(case when define2 = '103工程院' then 1 else 0 end) as gcysl,
	    sum(case when define2 = '104石科院' then 1 else 0 end) as skysl,
	    sum(case when define2 = '105大连院' then 1 else 0 end) as dlysl,
	    sum(case when define2 = '106北化院' then 1 else 0 end) as bhysl,
	    sum(case when define2 = '107上海院' then 1 else 0 end) as shysl,
	    sum(case when define2 = '108安工院' then 1 else 0 end) as agysl,
	    
	    count(*) as zsl,project_scope
			from out_project_info
			where project_type != '1' and (project_scope = '新开课题' or project_scope = '结转课题') and xmlbbm != 'KYZB'
	    group by project_scope
	</select>
	
	<select id="getProjectTypeCountByUnit" resultType="java.util.Map"
		parameterType="java.lang.String">
		select
		    sum(case when project_scope = '新开课题' then 1 else 0 end) as xksl,
		    sum(case when project_scope = '结转课题' then 1 else 0 end) as xjsl,
		    count(*) as zsl,
	    	SUBSTR(define2 FROM 4) define2
		from out_project_info
		where project_type != '1' and (project_scope = '新开课题' or project_scope = '结转课题') and 
			  define2 is not null and xmlbbm !='KYZB' and type_flag like '%直属研究院%'
	    group by define2
	</select>
	
	<select id="getZBProjectTypeCountByUnit" resultType="java.util.Map"
		parameterType="java.lang.String">
		select
		    sum(case when project_scope = '新开课题' then 1 else 0 end) as xksl,
		    sum(case when project_scope = '结转课题' then 1 else 0 end) as xjsl,
		    count(*) as zsl,
	    	SUBSTR(define2 FROM 4) define2
		from out_project_info
		where project_type != '1' and (project_scope = '新开课题' or project_scope = '结转课题') and 
			  define2 is not null and xmlbbm ='KYZB' and type_flag like '%直属研究院%'
	    group by define2
	</select>
	
	<select id="getZBProjectCountByProjectType" resultType="java.util.Map"
		parameterType="java.lang.String">
		select
			sum(case when project_scope = '新开课题' then 1 else 0 end) as xksl,
        	sum(case when project_scope = '结转课题' then 1 else 0 end) as xjsl,
        	count(*) as zsl,zylb
		from out_project_info
		where project_type != '1' and zylb is not null and xmlbbm = 'KYZB'
    	group by zylb
	</select>
	
	<select id="getZBProjectTypeCountByType" resultType="java.util.Map"
		parameterType="java.lang.String">
		select
			sum(case when project_property = '国家项目' then 1 else 0 end) as gjxmsl,
		    sum(case when project_property = '重大专项' then 1 else 0 end) as zdzxxmsl,
		    sum(case when project_property = '重点项目' then 1 else 0 end) as zdxmsl,
		    sum(case when project_property = '其他项目' then 1 else 0 end) as qtsl,
		    sum(case when define2 = '101勘探院' then 1 else 0 end) as ktysl,
		    sum(case when define2 = '102物探院' then 1 else 0 end) as wtysl,
		    sum(case when define2 = '103工程院' then 1 else 0 end) as gcysl,
		    sum(case when define2 = '104石科院' then 1 else 0 end) as skysl,
		    sum(case when define2 = '105大连院' then 1 else 0 end) as dlysl,
		    sum(case when define2 = '106北化院' then 1 else 0 end) as bhysl,
		    sum(case when define2 = '107上海院' then 1 else 0 end) as shysl,
		    sum(case when define2 = '108安工院' then 1 else 0 end) as agysl,
		    count(*) as zsl,project_scope
		from out_project_info
		where project_type != '1' and (project_scope = '新开课题' or project_scope = '结转课题') and xmlbbm = 'KYZB'
	    group by project_scope
	</select>
	
	<select id="getProjectMoneyByProjectType" resultType="java.util.Map"
		parameterType="java.lang.String">
		select
			round(sum(case when project_scope = '新开课题' then jf else 0 end)/10000,4) as xkje,
	        round(sum(case when project_scope = '结转课题' then jf else 0 end)/10000,4) as xjje,
	        round(sum(jf)/10000,4) as zje,
	        define1
		from out_project_info
		where (project_type = '0' or project_type = '2') and (project_scope = '新开课题' or project_scope = '结转课题')
	    group by define1
	</select>
	
	<select id="getProjectMoneyByUnit" resultType="java.util.Map" parameterType="java.lang.String">
		
		                 
      SELECT 
        type_flag,
        TRUNCATE(zje/10000,2) AS zje,
        TRUNCATE(fyxje/10000,2)  AS fyxje,
        TRUNCATE( zbxje/10000,2) AS zbxje, 
		TRUNCATE(prezje/10000,2) AS prezje,
		TRUNCATE(prefyxje/10000,2) AS prefyxje,
		TRUNCATE(prezbxje/10000,2) AS prezbxje,
		TRUNCATE((prezje-zje)/10000,2)AS wxd,
		CASE  WHEN TRUNCATE( zje/ prezje ,2)      IS NULL OR  TRUNCATE( zje/ prezje ,2)=0 THEN '0'      ELSE TRUNCATE( (zje/ prezje)*100 ,2) END AS ztzwcl ,
		CASE  WHEN TRUNCATE( fyxje/prefyxje ,2)   IS NULL OR  TRUNCATE( fyxje/prefyxje ,2)=0 THEN '0'   ELSE TRUNCATE( fyxje/prefyxje*100 ,2) END AS fyxtzwcl ,
		CASE  WHEN TRUNCATE( zbxje / prezbxje ,2) IS NULL OR  TRUNCATE( zbxje / prezbxje ,2)=0 THEN '0' ELSE TRUNCATE( zbxje / prezbxje*100 ,2) END AS zbxtzwcl,
		CASE  WHEN type_flag LIKE '总计' THEN 1
		      WHEN type_flag LIKE '直属研究院' THEN 2
		      WHEN type_flag LIKE '分子公司' THEN 3
		      WHEN type_flag LIKE '集团单位' THEN 4
		      WHEN type_flag LIKE '外部单位' THEN 5
		      WHEN type_flag LIKE '盈科' THEN 6
		      WHEN type_flag LIKE '休斯顿研发中心' THEN 7
		      WHEN type_flag LIKE '中东研发中心' THEN 8
		      WHEN type_flag LIKE '集团公司' THEN 9
		       WHEN type_flag LIKE '资产公司' THEN 10
		END AS orders 
               FROM (  
                         SELECT 
                         SUBSTR(temName FROM 2) type_flag,ROUND(SUM(CASE WHEN showFlag = 'act' THEN fyxje ELSE 0 END),4) AS fyxje, 
				ROUND(SUM(CASE WHEN showFlag = 'act' THEN zbxje ELSE 0 END),4) AS zbxje, 
				ROUND(SUM(CASE WHEN showFlag = 'act' THEN zje ELSE 0 END),4) AS zje,
				ROUND(SUM(CASE WHEN showFlag = 'pre' THEN fyxje ELSE 0 END),4) AS prefyxje, 
				ROUND(SUM(CASE WHEN showFlag = 'pre' THEN zbxje ELSE 0 END),4) AS prezbxje,
				ROUND(SUM(CASE WHEN showFlag = 'pre' THEN zje ELSE 0 END),4) AS prezje
				
				
		FROM (		
				SELECT	
					ROUND(SUM(CASE WHEN define1 = '费用性' THEN jf ELSE 0 END),4) AS fyxje,
			    	ROUND(SUM(CASE WHEN define1 = '资本性' THEN jf ELSE 0 END),4) AS zbxje,
			    	ROUND(SUM(jf),4) AS zje,
			    	type_flag,'act' AS showFlag,
						type_flag AS temName
				FROM out_project_info
				WHERE project_type != '1' AND project_scope = '新开课题' AND type_flag IS NOT NULL
			  	GROUP BY type_flag
				UNION ALL
				
				SELECT fyx_money,zbx_money,fyx_money+zbx_money AS zje,show_ali,'pre' AS showFlag,
				CASE WHEN show_ali = '直属研究院' THEN '1直属研究院'
	       		 	WHEN show_ali = '分子公司' THEN '2分子公司'
					WHEN show_ali = '集团单位' THEN '3集团单位'
					WHEN show_ali = '外部单位' THEN '4外部单位'
					WHEN show_ali = '盈科' THEN '9盈科'
					WHEN show_ali = '休斯顿研发中心' THEN '5休斯顿研发中心'
					WHEN show_ali = '中东研发中心' THEN '6中东研发中心'
					WHEN show_ali = '集团公司' THEN '7集团公司'
					WHEN show_ali = '资产公司' THEN '8资产公司' ELSE show_ali END AS temName
				FROM out_tem_money_total
				WHERE 
					money_level = '2'
			) AS tableB
		GROUP BY temName
		
		UNION ALL 
		SELECT 
		type_flag,
		SUM(fyxje) AS fyxje,
                SUM( zbxje) AS zbxje, 
		SUM(zje )AS zje,
		SUM(prefyxje) AS prefyxje,
		SUM(prezbxje) AS prezbxje,
		SUM(prezje) AS prezje
				
		
		 FROM 
		(
                  SELECT '总计' type_flag,
                  ROUND(SUM(CASE WHEN showFlag = 'act' THEN fyxje ELSE 0 END),4) AS fyxje, 
				ROUND(SUM(CASE WHEN showFlag = 'act' THEN zbxje ELSE 0 END),4) AS zbxje, 
				ROUND(SUM(CASE WHEN showFlag = 'act' THEN zje ELSE 0 END),4) AS zje,
				ROUND(SUM(CASE WHEN showFlag = 'pre' THEN fyxje ELSE 0 END),4) AS prefyxje, 
				ROUND(SUM(CASE WHEN showFlag = 'pre' THEN zbxje ELSE 0 END),4) AS prezbxje,
				ROUND(SUM(CASE WHEN showFlag = 'pre' THEN zje ELSE 0 END),4) AS prezje,
				ROUND(SUM(CASE WHEN showFlag = 'act' THEN zje ELSE 0 END)/SUM(CASE WHEN showFlag = 'pre' THEN zje ELSE 0 END),4) AS ztzwcl,
				ROUND(SUM(CASE WHEN showFlag = 'act' THEN fyxje ELSE 0 END)/SUM(CASE WHEN showFlag = 'pre' THEN fyxje ELSE 0 END),4) AS fyxtzwcl,
				ROUND(SUM(CASE WHEN showFlag = 'act' THEN zbxje ELSE 0 END)/SUM(CASE WHEN showFlag = 'pre' THEN zbxje ELSE 0 END),4) AS zbxtzwcl
		FROM (		
				SELECT	
					ROUND(SUM(CASE WHEN define1 = '费用性' THEN jf ELSE 0 END),4) AS fyxje,
			    	ROUND(SUM(CASE WHEN define1 = '资本性' THEN jf ELSE 0 END),4) AS zbxje,
			    	ROUND(SUM(jf),4) AS zje,
			    	type_flag,'act' AS showFlag,
						type_flag AS temName
				FROM out_project_info
				WHERE project_type != '1' AND project_scope = '新开课题' AND type_flag IS NOT NULL
			  	GROUP BY type_flag
				UNION ALL
				
				SELECT fyx_money,zbx_money,fyx_money+zbx_money AS zje,show_ali,'pre' AS showFlag,
				CASE WHEN show_ali = '直属研究院' THEN '1直属研究院'
	       		 	WHEN show_ali = '分子公司' THEN '2分子公司'
					WHEN show_ali = '集团单位' THEN '3集团单位'
					WHEN show_ali = '外部单位' THEN '4外部单位'
					WHEN show_ali = '盈科' THEN '9盈科'
					WHEN show_ali = '休斯顿研发中心' THEN '5休斯顿研发中心'
					WHEN show_ali = '中东研发中心' THEN '6中东研发中心'
					WHEN show_ali = '集团公司' THEN '7集团公司'
					WHEN show_ali = '资产公司' THEN '8资产公司' ELSE show_ali END AS temName
				FROM out_tem_money_total
				WHERE 
					money_level = '2'
			) AS tableB GROUP BY temName
			)asda 
				
		
		
		)abc ORDER BY orders
		
		
	</select>
	
	<!--  领导首页-直属研究院，8个研究院的资本性、费用性信息 -->
	<select id="getProjectMoneyByYJY" resultType="java.util.Map" parameterType="java.util.HashMap">
		select
			round(sum(case when define1 = '费用性' then jf else 0 end),4) as fyxje,
	    	round(sum(case when define1 = '资本性' then jf else 0 end),4) as zbxje,
	    	round(sum(jf), 2) as zje,
			sum(case when define1 = '费用性' then 1 else 0 end) as fyxsl,
			sum(case when define1 = '资本性' then 1 else 0 end) as zbxsl,
			count(*) as zsl,
			round(sum(case when define1 = '费用性' then 1 else 0 end)/count(*)*100, 2) as fyxRate,
			round(sum(case when define1 = '资本性' then 1 else 0 end)/count(*)*100, 2) as zbxRate,
	    	SUBSTR(define2 FROM 4) define2
		from out_project_info
		where project_type != '1' and project_property not like '%十条龙%' and out_project_info.ysnd = '${nd}'  and
			   type_flag like '%直属研究院%' and out_project_info.project_property not like '%国家%'
	    group by define2
	</select>
	
	<!--  领导首页-直属研究院，8个研究院国家项目情况 -->
	<select id="getCountryProjectByYJY" resultType="java.util.Map" parameterType="java.util.HashMap">
		select
			sum(case when project_property = '国家项目' and nd = '${nd}' then 1 else 0 end) as gjxksl,
			sum(case when project_property = '国家项目' and nd != '${nd}' then 1 else 0 end) as gjjzsl,
			sum(case when project_property = '国家项目' then 1 else 0 end) as gjsl,
	    	SUBSTR(define2 FROM 4) define2
		from out_project_info
		where project_type != '1' and project_property not like '%十条龙%' and out_project_info.ysnd = '${nd}'  and
			   type_flag like '%直属研究院%'
	    group by define2
	</select>
	
	<select id="getProjectTypeCountForTree" resultType="java.util.Map"
		parameterType="java.lang.String">
		select
		    count(*) as zsl,UUID() as id,
	    	SUBSTR(type_flag FROM 2) type_flag,project_scope
		from out_project_info
		where project_type != '1' and (project_scope = '新开课题' or project_scope = '结转课题') and type_flag is not null and xmlbbm !='KYZB'
	    group by type_flag,project_scope
	</select>
	
	<select id="getProjectCountByTypeForTree" resultType="java.util.Map"
		parameterType="java.lang.String">
		select
		    count(*) as zsl,UUID() as id,
	    	define4 as zycmc,project_scope
		from out_project_info
		where project_type != '1' and (project_scope = '新开课题' or project_scope = '结转课题') and 
			  define4 is not null and xmlbbm !='KYZB'
	    group by define4,project_scope
	</select>
	
	<select id="getZBProjectTypeCountForTree" resultType="java.util.Map"
		parameterType="java.lang.String">
		select
		    count(*) as zsl,UUID() as id,
	    	SUBSTR(type_flag FROM 2) type_flag,project_scope
		from out_project_info
		where project_type != '1' and (project_scope = '新开课题' or project_scope = '结转课题') and type_flag is not null and xmlbbm ='KYZB'
	    group by type_flag,project_scope
	</select>
	
	<select id="getZBProjectCountByTypeForTree" resultType="java.util.Map"
		parameterType="java.lang.String">
		select
		    count(*) as zsl,UUID() as id,project_scope,SUBSTR(define2 FROM 4) define2
		from out_project_info
		where 
			project_type != '1' and (project_scope = '新开课题' or project_scope = '结转课题') and xmlbbm ='KYZB' 
			and define2 is not null and type_flag like '%直属研究院%'
	    group by project_scope,define2
	    
	</select>
	
	<select id="getProjectMoneyForTree" resultType="java.util.Map" parameterType="java.lang.String">
		select
		    round(sum(jf)/10000,4) as zje,UUID() as id,define1,project_scope
		from out_project_info
		where project_type != '1' and (project_scope = '新开课题' or project_scope = '结转课题')
	    group by define1,project_scope
	</select>
	
	<select id="getProjectMoneyByIniAndTypeForTree" resultType="java.util.Map" parameterType="java.lang.String">
		select
		    round(sum(jf)/10000,4) as zje,UUID() as id,
	    	define1,SUBSTR(type_flag FROM 2) type_flag
		from out_project_info
		where project_type != '1' and (project_scope = '新开课题' or project_scope = '结转课题') and type_flag is not null
	    group by define1,type_flag
	</select>
	
	
	<!-- 领导页的各类型的项目数量 -->
	<select id="getProjectTypeCountForLD" resultType="java.util.Map" parameterType="java.lang.String">
		select project_property,count(*) as xmsl
		FROM out_project_info
		where 
			project_type != '1' and (project_scope = '新开课题' or project_scope = '结转课题') and 
			(project_property = '重点项目' or project_property = '国家项目' or project_property = '重大专项' or project_property = '十条龙项目')
		group by project_property
	</select>
	
	<!-- 领导页,科研项目数量按单位分析 -->
	<select id="getProjectTypeCountForTreeLD" resultType="java.util.Map" parameterType="java.lang.String">
		select
		    count(*) as zsl,UUID() as id,
	    	SUBSTR(type_flag FROM 2) type_flag,project_scope
		from out_project_info
		where project_type != '1' and (project_scope = '新开课题' or project_scope = '结转课题') and type_flag is not null and xmlbbm !='KYZB'
	    group by type_flag,project_scope
	</select>
	
	<!-- 领导二级页面，直属研究院、分子公司等9个单位，各单位的新开、续建、完结情况 -->
	<select id="getProjectTypeInfoByUnitLD" resultType="java.util.Map"
		parameterType="java.lang.String">
		select
			sum(case project_scope when '新开课题' then 1 else 0 end) as xksl,
			sum(case project_scope when '结转课题' then 1 else 0 end) as xjsl,
			SUBSTR(type_flag FROM 2) type_flag
		from out_project_info
		where type_flag is not null
			  and project_type != '1' and (project_scope = '新开课题' or project_scope = '结转课题')
		group BY type_flag
	</select>
	
	<!-- 领导二级页面，各个处室的新开、续建、完结情况 -->
	<select id="getProjectCountByProjectTypeLD" resultType="java.util.Map"
		parameterType="java.lang.String">
		select
			sum(case when project_scope = '新开课题' then 1 else 0 end) as xksl,
        	sum(case when project_scope = '结转课题' then 1 else 0 end) as xjsl,
        	count(*) as zsl,define4 as zycmc
		from out_project_info
		where (project_type = '0' or project_type = '2') and 
			  (project_scope = '新开课题' or project_scope = '结转课题') and 
			  define4 is not null
    	group by define4
	</select>
	
	<!-- 领导二级页面，8个院及国家级项目等性质的新开、续建、完结情况 -->
	<select id="getProjectTypeCountByTypeLD" resultType="java.util.Map"
		parameterType="java.lang.String">
		select
		sum(case when project_property = '国家项目' then 1 else 0 end) as gjxmsl,
	    sum(case when project_property = '重大专项' then 1 else 0 end) as zdzxxmsl,
	    sum(case when project_property = '重点项目' then 1 else 0 end) as zdxmsl,
	    sum(case when project_property = '其他项目' then 1 else 0 end) as qtsl,
	    sum(case when project_property = '十条龙' then 1 else 0 end) as stlxmsl,
	    sum(case when define2 = '101勘探院' then 1 else 0 end) as ktysl,
	    sum(case when define2 = '102物探院' then 1 else 0 end) as wtysl,
	    sum(case when define2 = '103工程院' then 1 else 0 end) as gcysl,
	    sum(case when define2 = '104石科院' then 1 else 0 end) as skysl,
	    sum(case when define2 = '105大连院' then 1 else 0 end) as dlysl,
	    sum(case when define2 = '106北化院' then 1 else 0 end) as bhysl,
	    sum(case when define2 = '107上海院' then 1 else 0 end) as shysl,
	    sum(case when define2 = '108安工院' then 1 else 0 end) as agysl,
	    
	    count(*) as zsl,project_scope
			from out_project_info
			where project_type != '1' and (project_scope = '新开课题' or project_scope = '结转课题')
	    group by project_scope
	</select>
	
	<!-- 领导二级页面，8个院新开、续建情况,每一行是一个院 -->
	<select id="getProjectTypeCountByUnitLD" resultType="java.util.Map" parameterType="java.util.HashMap">
		select
		    sum(case when nd = '${nd}' then 1 else 0 end) as xksl,
		    sum(case when nd != '${nd}' then 1 else 0 end) as xjsl,
		    count(xmid) as zsl,
		    round(count(DISTINCT xmid)/(select count(*) 
		    							from out_project_info 
		    							where 
		    								project_type != '1' and project_property not like '%十条龙%' and out_project_info.ysnd = '${nd}' and type_flag like '%直属研究院%'and out_project_info.project_property not like '%国家%'
		    								<if test="xmlbbm != null and xmlbbm == 'kyzb'">
												 and xmlbbm ='KYZB'
											</if>
											<if test="xmlbbm != null and xmlbbm == 'fkyzb'">
												 and xmlbbm !='KYZB'
											</if>
		    						)*100,4) zslRate,
			round(sum(case when nd = '2018' then 1 else 0 end)/(select count(*) 
		    							from out_project_info 
		    							where 
		    								project_type != '1' and project_property not like '%十条龙%' and out_project_info.ysnd = '${nd}' and type_flag like '%直属研究院%' and out_project_info.project_property not like '%国家%'
		    								<if test="xmlbbm != null and xmlbbm == 'kyzb'">
												 and xmlbbm ='KYZB'
											</if>
											<if test="xmlbbm != null and xmlbbm == 'fkyzb'">
												 and xmlbbm !='KYZB'
											</if>
		    						)*100,4) xkRate,
			round(sum(case when nd != '2018' then 1 else 0 end)/(select count(*) 
		    							from out_project_info 
		    							where 
		    								project_type != '1' and project_property not like '%十条龙%' and out_project_info.ysnd = '${nd}' and type_flag like '%直属研究院%' and out_project_info.project_property not like '%国家%'
		    								<if test="xmlbbm != null and xmlbbm == 'kyzb'">
												 and xmlbbm ='KYZB'
											</if>
											<if test="xmlbbm != null and xmlbbm == 'fkyzb'">
												 and xmlbbm !='KYZB'
											</if>
		    						)*100,4) xjRate,
	    	SUBSTR(define2 FROM 4) define2
		from out_project_info
		where project_type != '1' and project_property not like '%十条龙%' and out_project_info.ysnd = '${nd}'  and
			   type_flag like '%直属研究院%' and out_project_info.project_property not like '%国家%'
			  <if test="xmlbbm != null and xmlbbm == 'kyzb'">
				 and xmlbbm ='KYZB'
			  </if>
			  <if test="xmlbbm != null and xmlbbm == 'fkyzb'">
				 and xmlbbm !='KYZB'
			  </if>
	    group by define2
	</select>
	
	<!-- 领导二级页面，预算数据，8个院费用性和资本性的柱状图 -->
	<select id="getInstituteMoneyWithYS" resultType="java.util.Map" parameterType="java.util.HashMap">
		SELECT show_ali as unitName,zbx_money as zbxje,fyx_money as fyxje 
		FROM out_tem_money_total
		WHERE 
			is_yjy = '研究院' 
		ORDER BY show_order
	</select>
	
	<!-- 领导二级页面，预算数据，直属研究院、分子公司等9个维度的费用统计,树形结构 -->
	<select id="getCompanyMoneyTreeWithYS" resultType="java.util.Map" parameterType="java.util.HashMap">
		SELECT show_ali as unitName,fyx_money as showJE,UUID() as id,'费用性' as typeName
		FROM out_tem_money_total
		WHERE 
			money_level = '2' and fyx_money !=''
		
		union all 
		SELECT show_ali as unitName,zbx_money as showJE,UUID() as id,'资本性' as typeName
		FROM out_tem_money_total
		WHERE 
			money_level = '2' and zbx_money !=''
	</select>
	
	<!-- 领导二级页面，预算数据，直属研究院、分子公司等9个维度的费用统计 -->
	<select id="getCompanyMoneyWithYS" resultType="java.util.Map" parameterType="java.util.HashMap">
		SELECT show_ali as unitName,zbx_money as zbxje,fyx_money as fyxje 
		FROM out_tem_money_total
		WHERE 
			money_level = '2'
	</select>
	
	<!-- 领导二级页面，预算数据，17处室的费用统计 -->
	<select id="getOfficeMoneyWithYS" resultType="java.util.Map" parameterType="java.util.HashMap">
		SELECT unit_name as unitName,sum(xk_money) as xkje,sum(jz_money) as jzje
		FROM out_tem_money
		group by unit_name
	</select>
	
	<!-- 领导二级页面，预算数据，17处室的费用统计， 树形结构 -->
	<select id="getOfficeMoneyTreeWithYS" resultType="java.util.Map" parameterType="java.util.HashMap">
			SELECT unit_name as unitName,sum(xk_money) as showJE,'新开课题' as typeName, UUID() as id
			FROM out_tem_money
			group by unit_name
			
			union all 
			SELECT unit_name as unitName,sum(jz_money) as showJE,'结转课题' as typeName, UUID() as id
			FROM out_tem_money
			group by unit_name
	</select>
	
	<!-- 领导二级页面，直属研究院，8个院预算金额和实际金额的统计 -->
	<select id="getProjectMoneyByInstituteForLD" resultType="java.util.Map" parameterType="java.util.HashMap">
			select 
				sum(case when showFlag = 'preMoney' then zbxje else 0 end) as prezbxje,
				sum(case when showFlag = 'preMoney' then fyxje else 0 end) as prefyxje,
				sum(case when showFlag = 'preMoney' then zje else 0 end) as prezje,
				sum(case when showFlag = 'actMoney' then zbxje else 0 end) as actzbxje,
				sum(case when showFlag = 'actMoney' then fyxje else 0 end) as actfyxje,
				sum(case when showFlag = 'actMoney' then zje else 0 end) as actzje,
				round(sum(case when showFlag = 'actMoney' then fyxje else 0 end)/sum(case when showFlag = 'preMoney' then fyxje else 0 end) * 100, 2) as fyxrate,
				round(sum(case when showFlag = 'actMoney' then zbxje else 0 end)/sum(case when showFlag = 'preMoney' then zbxje else 0 end) * 100, 2) as zbxrate,
				round(sum(case when showFlag = 'actMoney' then zje else 0 end)/sum(case when showFlag = 'preMoney' then zje else 0 end) * 100, 2) as zrate,
				unitName
			from (	
				SELECT show_ali as unitName,zbx_money as zbxje,fyx_money as fyxje,zbx_money+fyx_money as zje,'preMoney' as showFlag,show_order
				FROM out_tem_money_total
				WHERE
					is_yjy = '研究院'
					
				union ALL
				SELECT SUBSTR(define2 FROM 4) as unitName,ROUND(sum(case when define1 = '资本性' then jf else 0 end),2) as zbxje,
					    ROUND(sum(case when define1 = '费用性' then jf else 0 end),2) as fyxje,
							ROUND(sum(jf),2) as zje,
							'actMoney' as showFlag,SUBSTR(define2,3,1) as show_order
				FROM out_project_info
				WHERE
					define2 is not NULL and nd = '2018' and (project_scope = '新开课题' or project_scope = '结转课题') and type_flag like '%直属研究院%'
				group by define2) as tableA
			GROUP BY unitName, show_order
			ORDER BY show_order
	</select>
	
	<!-- 领导二级页面，重大专项项目详情 -->
	<select id="getZDSTLProjectInfo" resultType="java.util.Map" parameterType="java.util.HashMap">
			select 
				nd,ysnd,hth,xmmc,jf,ysje,fzdw,zylb,fzrxm,zycmc,xmlbmc,define1,fwdx
			from out_project_info
			where 
				project_property = '重大专项' and ysnd = '${nd}'
			order by nd desc,hth
	</select>
	
	<!-- 领导二级页面，重大项目和十条龙项目, 8个院中重大、十条龙项目的情况, 每一行是一个院 -->
	<select id="getZDSTLProjectCountByInstitute" resultType="java.util.Map" parameterType="java.util.HashMap">
		select
		    sum(case when project_property = '重大专项' and project_type != '2' then 1 else 0 end) as zdzxsl,
			sum(case when project_property = '十条龙项目' and project_type != '2' then 1 else 0 end) as stlsl,
		    count(*) as zsl,
	    	SUBSTR(define2 FROM 4) define2
		from out_project_info
		where define2 is not null and (project_scope = '新开课题' or project_scope = '结转课题') and type_flag like '%直属研究院%'
	    group by define2
	</select>
	
	<!--  领导二级页面，重点项目、国家项目、重大专项、十条龙、其他项目的新开、结转情况 -->
	<select id="getProjectNewOldInfoByType" resultType="java.util.Map" parameterType="java.util.HashMap">
		select 
			sum(case when nd = '${nd}' then 1 else 0 end) as xksl,
		    sum(case when nd != '${nd}' then 1 else 0 end) as xjsl,
		    count(*) as zsl,
			(select count(*) from out_project_info where project_type != '1' and project_property not like '%十条龙%' and out_project_info.ysnd = '${nd}' and define7 not like '%已关闭%' and type_flag like '%直属研究院%' and out_project_info.project_property not like '%国家%') as temsh,
			round(count(*)/(select count(*) from out_project_info 
							where 
								project_type != '1' and project_property not like '%十条龙%' and out_project_info.ysnd = '${nd}'
								and type_flag like '%直属研究院%' and out_project_info.project_property not like '%国家%'
								<if test="xmlbbm != null and xmlbbm == 'kyzb'">
									 and xmlbbm ='KYZB'
							    </if>
							    <if test="xmlbbm != null and xmlbbm == 'fkyzb'">
								     and xmlbbm !='KYZB'
							    </if>
							)*100, 2) as zslRate,
			round(sum(case when nd = '${nd}' then 1 else 0 end)/count(*)*100, 2) as xkRate,
			round(sum(case when nd != '${nd}' then 1 else 0 end)/count(*)*100, 2) as xjRate,
			project_property
		FROM out_project_info
		where 
			project_type != '1' and project_property not like '%十条龙%' and out_project_info.ysnd = '${nd}'
			and type_flag like '%直属研究院%' and out_project_info.project_property not like '%国家%'
			<if test="xmlbbm != null and xmlbbm == 'kyzb'">
				 and xmlbbm ='KYZB'
		    </if>
		    <if test="xmlbbm != null and xmlbbm == 'fkyzb'">
			     and xmlbbm !='KYZB'
		    </if>
			
		group by project_property
	</select>
	
	<!--  领导二级页面，各类型技术的新开、结转情况 -->
	<select id="getProjectInfoByTecTypeWithOldNew" resultType="java.util.Map" parameterType="java.util.HashMap">
		SELECT SUBSTR(define5 FROM 4) define5,SUM(zsl) zsl,SUM(xksl) xksl,SUM(xjsl) xjsl FROM (
			select 
				case when define5 is null then '109其他相关技术' else define5 end as define5,
					 count(*) as zsl,
				   sum(case when nd = '${nd}' then 1 else 0 end) as xksl,
			       sum(case when nd != '${nd}' then 1 else 0 end) as xjsl
			from out_project_info
			WHERE
				ysnd= '${nd}' and project_type != '1' and project_property not like '%十条龙%'
				and out_project_info.project_property not like '%国家%'
				<if test="typeFlag != null and typeFlag != ''">
					and type_flag like '%${typeFlag}%'
				</if>
				<if test="xmlbbm != null and xmlbbm == 'kyzb'">
					 and xmlbbm ='KYZB'
				</if>
				<if test="xmlbbm != null and xmlbbm == 'fkyzb'">
					 and xmlbbm !='KYZB'
				</if>
			group by define5) AS tableA 
		GROUP BY tableA.define5
	</select>
	
	<!--  领导首页-十条龙，十条龙项目的类型分布 -->
	<select id="getDragonProjectInfoByType" resultType="java.util.Map" parameterType="java.util.HashMap">
		select xmlbmc,count(DISTINCT xmmc) as sl
		from out_project_info
		WHERE
			project_property = '十条龙项目'  and nd='${nd}' and project_type != '2'
		group by xmlbmc
	</select>
	
	<!--  领导首页-十条龙，十条龙项目的出入龙情况 -->
	<select id="getDragonProjectInfoWithOutIn" resultType="java.util.Map" parameterType="java.util.HashMap">
		select 
			 sum(case when ysnd='${nd}' and `status` = '申请休眠' then 1 else 0 end) sqxm,
			 sum(case when ysnd='${nd}' and `status` = '申请退龙' then 1 else 0 end) sqtl,
			 sum(case when ysnd='${nd}' and `status` = '入龙' then 1 else 0 end) tjrl,
			 sum(case when ysnd='${nd}' and `status` = '申请延期' then 1 else 0 end) sqyq,
			 sum(case when ysnd='${nd}' and `status` = '申请出龙' then 1 else 0 end) sqcl,
			 sum(case when ysnd='${nd}' and `status` = '在研项目' then 1 else 0 end) zyxm
		from (
			select distinct xmmc,ysnd,`status`
			from out_project_info
			WHERE
				project_property = '十条龙项目' and project_type != '2'
		) as tableA
		
	</select>
	
	<!--  领导首页-十条龙，8个研究院的龙项目/重大专项项目分布 -->
	<select id="getDragonProjectInfoByInstitute" resultType="java.util.Map" parameterType="java.util.HashMap">
		select SUBSTR(define2 FROM 4) as define2,
			 sum(case when project_property = '十条龙项目' then 1 else 0 end) stlxm,
			 sum(case when project_property = '重大专项' then 1 else 0 end) zdzx
		FROM 
			(select distinct xmmc,ysnd,project_property,define2
			 from out_project_info
			 WHERE
				 ysnd = '${nd}' and type_flag like '%研究院' and project_type != '2'
	    	) as tableA
		GROUP BY tableA.define2
	</select>
	
	<!--  领导首页-十条龙，十条龙项目的详情 -->
	<select id="getDragonProjectDetails" resultType="java.util.Map" parameterType="java.util.HashMap">
		select nd,xmmc,fzdw as zydw,`status`,define6,jdap,hth
		from out_project_info
		WHERE
			 project_property = '十条龙项目' and define6 = '4组员单位'
			<if test="nd != null">
				and out_project_info.nd = #{nd}
			</if>
			<if test="ysnd != null">
				and out_project_info.ysnd = #{ysnd}
			</if>
			<if test="xmmc != null">
				and out_project_info.xmmc like '%${xmmc}%'
			</if>
			<if test="status != null">
				and (
				<foreach collection="status" item="status" index="index" separator=" or ">
					out_project_info.status like '%${status}%'
				</foreach>
				)
			</if>
			<if test="define2 != null">
				and (
				<foreach collection="define2" item="define2" index="index" separator=" or ">
					out_project_info.define2 like '%${define2}%'
				</foreach>
				)
			</if>
			<if test="xmlbmc != null">
				and (
				<foreach collection="xmlbmc" item="xmlbmc" index="index" separator=" or ">
					out_project_info.xmlbmc like '%${xmlbmc}%'
				</foreach>
				)
			</if>
			<if test="type_flag != null">
				and (
				<foreach collection="type_flag" item="type_flag" index="index" separator=" or ">
					out_project_info.type_flag like '%${type_flag}%'
				</foreach>
				)
			</if>
		
		union all
		select nd,xmmc,GROUP_CONCAT(fzdw) as zydw,`status`,define6,jdap,hth
		from out_project_info
		WHERE
			 project_property = '十条龙项目' and (define6 = '1组长单位' or define6 = '2副组长单位')
			<if test="nd != null">
				and out_project_info.nd = #{nd}
			</if>
			<if test="ysnd != null">
				and out_project_info.ysnd = #{ysnd}
			</if>
			<if test="xmmc != null">
				and out_project_info.xmmc like '%${xmmc}%'
			</if>
			<if test="status != null">
				and (
				<foreach collection="status" item="status" index="index" separator=" or ">
					out_project_info.status like '%${status}%'
				</foreach>
				)
			</if>
			<if test="define2 != null">
				and (
				<foreach collection="define2" item="define2" index="index" separator=" or ">
					out_project_info.define2 like '%${define2}%'
				</foreach>
				)
			</if>
			<if test="xmlbmc != null">
				and (
				<foreach collection="xmlbmc" item="xmlbmc" index="index" separator=" or ">
					out_project_info.xmlbmc like '%${xmlbmc}%'
				</foreach>
				)
			</if>
			<if test="type_flag != null">
				and (
				<foreach collection="type_flag" item="type_flag" index="index" separator=" or ">
					out_project_info.type_flag like '%${type_flag}%'
				</foreach>
				)
			</if>
		GROUP BY xmmc
		
		union all
		select nd,xmmc,GROUP_CONCAT(fzdw) as zydw,`status`,define6,jdap,hth
		from out_project_info
		WHERE
			 project_property = '十条龙项目' and define6 = '3协作单位'
			<if test="nd != null">
				and out_project_info.nd = #{nd}
			</if>
			<if test="ysnd != null">
				and out_project_info.ysnd = #{ysnd}
			</if>
			<if test="xmmc != null">
				and out_project_info.xmmc like '%${xmmc}%'
			</if>
			<if test="status != null">
				and (
				<foreach collection="status" item="status" index="index" separator=" or ">
					out_project_info.status like '%${status}%'
				</foreach>
				)
			</if>
			<if test="define2 != null">
				and (
				<foreach collection="define2" item="define2" index="index" separator=" or ">
					out_project_info.define2 like '%${define2}%'
				</foreach>
				)
			</if>
			<if test="xmlbmc != null">
				and (
				<foreach collection="xmlbmc" item="xmlbmc" index="index" separator=" or ">
					out_project_info.xmlbmc like '%${xmlbmc}%'
				</foreach>
				)
			</if>
			<if test="type_flag != null">
				and (
				<foreach collection="type_flag" item="type_flag" index="index" separator=" or ">
					out_project_info.type_flag like '%${type_flag}%'
				</foreach>
				)
			</if>
		GROUP BY xmmc
		order by hth,define6
	</select>
	
	<!-- 得到已保存的预算数据 -->
	<select id="getProjectItemList" resultType="java.util.Map" parameterType="java.util.HashMap">
		select *
		from out_project_item
	</select>
	
	<!-- 删除年度预算数据 -->
	<delete id="deleteProjectItemByNd" parameterType="java.lang.String" >
    	delete from out_project_item
   	 	where nd = #{nd,jdbcType=VARCHAR}
  	</delete>
  	
  	<!-- 删除国家项目预算数据 -->
	<delete id="deleteCountryProjectItemByDefind1" parameterType="java.lang.String" >
    	delete from out_project_item
   	 	where nd = #{nd,jdbcType=VARCHAR} and define1 = 'sap国家项目预算'
  	</delete>
  	
  	<!-- 获取详细的查询条件 -->
	<select id="getProjectInfoSelectCondition" resultType="java.util.Map" parameterType="java.util.HashMap">
		select 'define1' as showCode,define1 as showName from out_project_info
		group by define1
		union ALL
		select 'define2',SUBSTR(define2 FROM 4) from out_project_info
		where 
		type_flag like '%研究院%'
		group by define2
		
		union ALL
		
		select 'type_flag',case when type_flag is null then '其他' else SUBSTR(type_flag FROM 2) end as type_flag
		from out_project_info
		group by type_flag
		
		union ALL
		select 'zylb', case when zylb is null then '其他' else zylb end as zylb
		from out_project_info
		group by zylb
		
		union ALL
		select 'zycmc', case when zycmc is null then '其他' else zycmc end as zycmc
		from out_project_info
		group by zycmc
		
	</select>
	
	
	<!-- 分页显示项目数据数据,统计的第三级展示 -->
	<select id="selectCommonProjectByCond" resultMap="BaseResultMap" parameterType="java.util.HashMap">
		select out_project_info.define1,substr(out_project_info.define2 from 4) as define2,substr(out_project_info.type_flag from 2) as type_flag,
			   out_project_info.xmmc,out_project_info.jf,out_project_info.ysje,out_project_info.ysnd,
			   out_project_info.project_property,out_project_info.fzdw,out_project_info.zylb,
		       out_project_info.nd,out_project_info.hth,out_project_info.zycmc
		from out_project_info
		where
			 out_project_info.project_type != '1'
			 and out_project_info.project_property not like '%十条龙%'
			<if test="nd != null">
				and out_project_info.nd = #{nd}
			</if>
			<if test="ysnd != null">
				and out_project_info.ysnd = #{ysnd}
			</if>
			<if test="hth != null">
				and out_project_info.hth like '%${hth}%'
			</if>
			<if test="xmmc != null">
				and out_project_info.xmmc like '%${xmmc}%'
			</if>
			<if test="define1 != null">
				and (
				<foreach collection="define1" item="define1" index="index" separator=" or ">
					out_project_info.define1 like '%${define1}%'
				</foreach>
				)
			</if>
			<if test="define2 != null">
				and (
				<foreach collection="define2" item="define2" index="index" separator=" or ">
					out_project_info.define2 like '%${define2}%'
				</foreach>
				)
			</if>
			<if test="define5 != null">
				and (
				<foreach collection="define5" item="define5" index="index" separator=" or ">
					out_project_info.define5 like '%${define5}%'
				</foreach>
				)
			</if>
			<if test="project_property != null">
				and (
				<foreach collection="project_property" item="project_property" index="index" separator=" or ">
					out_project_info.project_property like '%${project_property}%'
				</foreach>
				)
			</if>
			<if test="project_property == null">
				and out_project_info.project_property not like '%国家%'
			</if>
			<if test="zylb != null">
				and (
				<foreach collection="zylb" item="zylb" index="index" separator=" or ">
					out_project_info.zylb like '%${zylb}%'
				</foreach>
				)
			</if>
			<if test="type_flag != null">
				and (
				<foreach collection="type_flag" item="type_flag" index="index" separator=" or ">
					out_project_info.type_flag like '%${type_flag}%'
				</foreach>
				)
			</if>
			<if test="zycmc != null">
				and (
				<foreach collection="zycmc" item="zycmc" index="index" separator=" or ">
					out_project_info.zycmc like '%${zycmc}%'
				</foreach>
				)
			</if>
			<!--add start-->
	        <if test="keyword != null">
	            ${keyword}
	        </if>
	        <!--add end-->
			
			<if test="orderKey != null and orderKey != ''">
				<if test="orderType != null and orderType != ''">
					order by ${orderKey} ${orderType}
				</if>
				<if test="orderType == null or orderType == ''">
					order by ${orderKey} desc
				</if>
			</if>

	</select>
	
	
  <!--首页查询start-->
  <select id="findOutProjectInfoList" parameterType="com.pcitc.base.stp.out.OutProjectInfo" resultMap="BaseResultMap">
    select
    data_id,
    nd,
    xmid,
    hth,
    xmmc,
    xmjb,
    ysnd,
    yshf,
    ysxd,
    ysje,
    jf,
    fwdxbm,
    fwdx,
    zylbbm,
    zylb,
    fzdwbm,
    fzdw,
    jtfzdwbm,
    jtfzdw,
    fzryx,
    fzrdh,
    fzrxm,
    lxrdh,
    lxryx,
    lxrxm,
    jssxxm,
    jssj,
    kssj,
    yjsj,
    zyly,
    zysx,
    sjid,
    --     lxbj,
    --     yjnr,
    --     jdap,
    --     yjmb,
    create_date,
    create_person,
    status,
    update_date,
    project_id,
    parent_project_id,
    project_type,
    erp_project_code,
    erp_project_name,
    project_scope,
    project_level,
    project_property,
    project_abc,
    project_source,
    yjsjks,
    yjsjjs,
    xmlbbm,
    xmlbmc,
    gsbmmc,
    gsbmbm,
    zycmc,
    zycbm,
    type_flag,
    define1,
    define2,
    define3,
    define4,
    define5,
    define6,
    define7,
    define8,
    define9
    from out_project_info
    where 1=1
    <if test="dataId!=null and dataId!=''.toString()">
      and data_id like '%${dataId}%'
    </if>
    <if test="nd!=null and nd!=''.toString()">
      and nd like '%${nd}%'
    </if>
    <if test="xmid!=null and xmid!=''.toString()">
      and xmid like '%${xmid}%'
    </if>
    <if test="hth!=null and hth!=''.toString()">
      and hth like '%${hth}%'
    </if>
    <if test="xmmc!=null and xmmc!=''.toString()">
      and xmmc like '%${xmmc}%'
    </if>
    <if test="xmjb!=null and xmjb!=''.toString()">
      and xmjb like '%${xmjb}%'
    </if>
    <if test="ysnd!=null and ysnd!=''.toString()">
      and ysnd like '%${ysnd}%'
    </if>
    <if test="yshf!=null and yshf!=''.toString()">
      and yshf like '%${yshf}%'
    </if>
    <if test="ysxd!=null and ysxd!=''.toString()">
      and ysxd like '%${ysxd}%'
    </if>
    <if test="ysje!=null and ysje!=''.toString()">
      and ysje like '%${ysje}%'
    </if>
    <if test="jf!=null and jf!=''.toString()">
      and jf like '%${jf}%'
    </if>
    <if test="fwdxbm!=null and fwdxbm!=''.toString()">
      and fwdxbm like '%${fwdxbm}%'
    </if>
    <if test="fwdx!=null and fwdx!=''.toString()">
      and fwdx like '%${fwdx}%'
    </if>
    <if test="zylbbm!=null and zylbbm!=''.toString()">
      and zylbbm like '%${zylbbm}%'
    </if>
    <if test="zylb!=null and zylb!=''.toString()">
      and zylb like '%${zylb}%'
    </if>
    <if test="fzdwbm!=null and fzdwbm!=''.toString()">
      and fzdwbm like '%${fzdwbm}%'
    </if>
    <if test="fzdw!=null and fzdw!=''.toString()">
      and fzdw like '%${fzdw}%'
    </if>
    <if test="jtfzdwbm!=null and jtfzdwbm!=''.toString()">
      and jtfzdwbm like '%${jtfzdwbm}%'
    </if>
    <if test="jtfzdw!=null and jtfzdw!=''.toString()">
      and jtfzdw like '%${jtfzdw}%'
    </if>
    <if test="fzryx!=null and fzryx!=''.toString()">
      and fzryx like '%${fzryx}%'
    </if>
    <if test="fzrdh!=null and fzrdh!=''.toString()">
      and fzrdh like '%${fzrdh}%'
    </if>
    <if test="fzrxm!=null and fzrxm!=''.toString()">
      and fzrxm like '%${fzrxm}%'
    </if>
    <if test="lxrdh!=null and lxrdh!=''.toString()">
      and lxrdh like '%${lxrdh}%'
    </if>
    <if test="lxryx!=null and lxryx!=''.toString()">
      and lxryx like '%${lxryx}%'
    </if>
    <if test="lxrxm!=null and lxrxm!=''.toString()">
      and lxrxm like '%${lxrxm}%'
    </if>
    <if test="jssxxm!=null and jssxxm!=''.toString()">
      and jssxxm like '%${jssxxm}%'
    </if>
    <if test="jssj!=null and jssj!=''.toString()">
      and jssj like '%${jssj}%'
    </if>
    <if test="kssj!=null and kssj!=''.toString()">
      and kssj like '%${kssj}%'
    </if>
    <if test="yjsj!=null and yjsj!=''.toString()">
      and yjsj like '%${yjsj}%'
    </if>
    <if test="zyly!=null and zyly!=''.toString()">
      and zyly like '%${zyly}%'
    </if>
    <if test="zysx!=null and zysx!=''.toString()">
      and zysx like '%${zysx}%'
    </if>
    <if test="sjid!=null and sjid!=''.toString()">
      and sjid like '%${sjid}%'
    </if>
    <!--<if test="lxbj!=null and lxbj!=''.toString()">-->
    <!--and lxbj like '%${lxbj}%'-->
    <!--</if>-->
    <!--<if test="yjnr!=null and yjnr!=''.toString()">-->
    <!--and yjnr like '%${yjnr}%'-->
    <!--</if>-->
    <!--<if test="jdap!=null and jdap!=''.toString()">-->
    <!--and jdap like '%${jdap}%'-->
    <!--</if>-->
    <!--<if test="yjmb!=null and yjmb!=''.toString()">-->
    <!--and yjmb like '%${yjmb}%'-->
    <!--</if>-->
    <if test="createDate!=null and createDate!=''.toString()">
      and create_date like '%${createDate}%'
    </if>
    <if test="createPerson!=null and createPerson!=''.toString()">
      and create_person like '%${createPerson}%'
    </if>
    <if test="status!=null and status!=''.toString()">
      and status like '%${status}%'
    </if>
    <if test="updateDate!=null and updateDate!=''.toString()">
      and update_date like '%${updateDate}%'
    </if>
    <if test="projectId!=null and projectId!=''.toString()">
      and project_id like '%${projectId}%'
    </if>
    <if test="parentProjectId!=null and parentProjectId!=''.toString()">
      and parent_project_id like '%${parentProjectId}%'
    </if>
    <if test="projectType!=null and projectType!=''.toString()">
      and project_type like '%${projectType}%'
    </if>
    <if test="erpProjectCode!=null and erpProjectCode!=''.toString()">
      and erp_project_code like '%${erpProjectCode}%'
    </if>
    <if test="erpProjectName!=null and erpProjectName!=''.toString()">
      and erp_project_name like '%${erpProjectName}%'
    </if>
    <if test="projectScope!=null and projectScope!=''.toString()">
      and project_scope like '%${projectScope}%'
    </if>
    <if test="projectLevel!=null and projectLevel!=''.toString()">
      and project_level like '%${projectLevel}%'
    </if>
    <if test="projectProperty!=null and projectProperty!=''.toString()">
      and project_property like '%${projectProperty}%'
    </if>
    <if test="projectAbc!=null and projectAbc!=''.toString()">
      and project_abc like '%${projectAbc}%'
    </if>
    <if test="projectSource!=null and projectSource!=''.toString()">
      and project_source like '%${projectSource}%'
    </if>
    <if test="yjsjks!=null and yjsjks!=''.toString()">
      and yjsjks like '%${yjsjks}%'
    </if>
    <if test="yjsjjs!=null and yjsjjs!=''.toString()">
      and yjsjjs like '%${yjsjjs}%'
    </if>
    <if test="xmlbbm!=null and xmlbbm!=''.toString()">
      and xmlbbm like '%${xmlbbm}%'
    </if>
    <if test="xmlbmc!=null and xmlbmc!=''.toString()">
      and xmlbmc like '%${xmlbmc}%'
    </if>
    <if test="gsbmmc!=null and gsbmmc!=''.toString()">
      and gsbmmc like '%${gsbmmc}%'
    </if>
    <if test="gsbmbm!=null and gsbmbm!=''.toString()">
      and gsbmbm like '%${gsbmbm}%'
    </if>
    <if test="zycmc!=null and zycmc!=''.toString()">
      and zycmc like '%${zycmc}%'
    </if>
    <if test="zycbm!=null and zycbm!=''.toString()">
      and zycbm like '%${zycbm}%'
    </if>
    <if test="typeFlag!=null and typeFlag!=''.toString()">
      and type_flag like '%${typeFlag}%'
    </if>
    <if test="define1!=null and define1!=''.toString()">
      and define1 like '%${define1}%'
    </if>
    <if test="define2!=null and define2!=''.toString()">
      and define2 like '%${define2}%'
    </if>
    <if test="define3!=null and define3!=''.toString()">
      and define3 like '%${define3}%'
    </if>
    <if test="define4!=null and define4!=''.toString()">
      and define4 like '%${define4}%'
    </if>
    <if test="define5!=null and define5!=''.toString()">
      and define5 like '%${define5}%'
    </if>
    <if test="define6!=null and define6!=''.toString()">
      and define6 like '%${define6}%'
    </if>
    <if test="define7!=null and define7!=''.toString()">
      and define7 like '%${define7}%'
    </if>
    <if test="define8!=null and define8!=''.toString()">
      and define8 like '%${define8}%'
    </if>
    <if test="define9!=null and define9!=''.toString()">
      and define9 like '%${define9}%'
    </if>

  </select>
  <select id="findOutProjectInfoListOr" parameterType="com.pcitc.base.stp.out.OutProjectInfo" resultMap="BaseResultMap">
    select
    data_id,
    nd,
    xmid,
    hth,
    xmmc,
    xmjb,
    ysnd,
    yshf,
    ysxd,
    ysje,
    jf,
    fwdxbm,
    fwdx,
    zylbbm,
    zylb,
    fzdwbm,
    fzdw,
    jtfzdwbm,
    jtfzdw,
    fzryx,
    fzrdh,
    fzrxm,
    lxrdh,
    lxryx,
    lxrxm,
    jssxxm,
    jssj,
    kssj,
    yjsj,
    zyly,
    zysx,
    sjid,
    --     lxbj,
    --     yjnr,
    --     jdap,
    --     yjmb,
    create_date,
    create_person,
    status,
    update_date,
    project_id,
    parent_project_id,
    project_type,
    erp_project_code,
    erp_project_name,
    project_scope,
    project_level,
    project_property,
    project_abc,
    project_source,
    yjsjks,
    yjsjjs,
    xmlbbm,
    xmlbmc,
    gsbmmc,
    gsbmbm,
    zycmc,
    zycbm,
    type_flag,
    define1,
    define2,
    define3,
    define4,
    define5,
    define6,
    define7,
    define8,
    define9
    from out_project_info
    where
    <if test="dataId!=null and dataId!=''.toString()">
      data_id like '%${dataId}%'
    </if>
    <if test="nd!=null and nd!=''.toString()">
      or nd like '%${nd}%'
    </if>
    <if test="xmid!=null and xmid!=''.toString()">
      or xmid like '%${xmid}%'
    </if>
    <if test="hth!=null and hth!=''.toString()">
      or hth like '%${hth}%'
    </if>
    <if test="xmmc!=null and xmmc!=''.toString()">
      or xmmc like '%${xmmc}%'
    </if>
    <if test="xmjb!=null and xmjb!=''.toString()">
      or xmjb like '%${xmjb}%'
    </if>
    <if test="ysnd!=null and ysnd!=''.toString()">
      or ysnd like '%${ysnd}%'
    </if>
    <if test="yshf!=null and yshf!=''.toString()">
      or yshf like '%${yshf}%'
    </if>
    <if test="ysxd!=null and ysxd!=''.toString()">
      or ysxd like '%${ysxd}%'
    </if>
    <if test="ysje!=null and ysje!=''.toString()">
      or ysje like '%${ysje}%'
    </if>
    <if test="jf!=null and jf!=''.toString()">
      or jf like '%${jf}%'
    </if>
    <if test="fwdxbm!=null and fwdxbm!=''.toString()">
      or fwdxbm like '%${fwdxbm}%'
    </if>
    <if test="fwdx!=null and fwdx!=''.toString()">
      or fwdx like '%${fwdx}%'
    </if>
    <if test="zylbbm!=null and zylbbm!=''.toString()">
      or zylbbm like '%${zylbbm}%'
    </if>
    <if test="zylb!=null and zylb!=''.toString()">
      or zylb like '%${zylb}%'
    </if>
    <if test="fzdwbm!=null and fzdwbm!=''.toString()">
      or fzdwbm like '%${fzdwbm}%'
    </if>
    <if test="fzdw!=null and fzdw!=''.toString()">
      or fzdw like '%${fzdw}%'
    </if>
    <if test="jtfzdwbm!=null and jtfzdwbm!=''.toString()">
      or jtfzdwbm like '%${jtfzdwbm}%'
    </if>
    <if test="jtfzdw!=null and jtfzdw!=''.toString()">
      or jtfzdw like '%${jtfzdw}%'
    </if>
    <if test="fzryx!=null and fzryx!=''.toString()">
      or fzryx like '%${fzryx}%'
    </if>
    <if test="fzrdh!=null and fzrdh!=''.toString()">
      or fzrdh like '%${fzrdh}%'
    </if>
    <if test="fzrxm!=null and fzrxm!=''.toString()">
      or fzrxm like '%${fzrxm}%'
    </if>
    <if test="lxrdh!=null and lxrdh!=''.toString()">
      or lxrdh like '%${lxrdh}%'
    </if>
    <if test="lxryx!=null and lxryx!=''.toString()">
      or lxryx like '%${lxryx}%'
    </if>
    <if test="lxrxm!=null and lxrxm!=''.toString()">
      or lxrxm like '%${lxrxm}%'
    </if>
    <if test="jssxxm!=null and jssxxm!=''.toString()">
      or jssxxm like '%${jssxxm}%'
    </if>
    <if test="jssj!=null and jssj!=''.toString()">
      or jssj like '%${jssj}%'
    </if>
    <if test="kssj!=null and kssj!=''.toString()">
      or kssj like '%${kssj}%'
    </if>
    <if test="yjsj!=null and yjsj!=''.toString()">
      or yjsj like '%${yjsj}%'
    </if>
    <if test="zyly!=null and zyly!=''.toString()">
      or zyly like '%${zyly}%'
    </if>
    <if test="zysx!=null and zysx!=''.toString()">
      or zysx like '%${zysx}%'
    </if>
    <if test="sjid!=null and sjid!=''.toString()">
      or sjid like '%${sjid}%'
    </if>
    <!--<if test="lxbj!=null and lxbj!=''.toString()">-->
    <!--and lxbj like '%${lxbj}%'-->
    <!--</if>-->
    <!--<if test="yjnr!=null and yjnr!=''.toString()">-->
    <!--and yjnr like '%${yjnr}%'-->
    <!--</if>-->
    <!--<if test="jdap!=null and jdap!=''.toString()">-->
    <!--and jdap like '%${jdap}%'-->
    <!--</if>-->
    <!--<if test="yjmb!=null and yjmb!=''.toString()">-->
    <!--and yjmb like '%${yjmb}%'-->
    <!--</if>-->
    <if test="createDate!=null and createDate!=''.toString()">
      or create_date like '%${createDate}%'
    </if>
    <if test="createPerson!=null and createPerson!=''.toString()">
      or create_person like '%${createPerson}%'
    </if>
    <if test="status!=null and status!=''.toString()">
      or status like '%${status}%'
    </if>
    <if test="updateDate!=null and updateDate!=''.toString()">
      or update_date like '%${updateDate}%'
    </if>
    <if test="projectId!=null and projectId!=''.toString()">
      or project_id like '%${projectId}%'
    </if>
    <if test="parentProjectId!=null and parentProjectId!=''.toString()">
      or parent_project_id like '%${parentProjectId}%'
    </if>
    <if test="projectType!=null and projectType!=''.toString()">
      or project_type like '%${projectType}%'
    </if>
    <if test="erpProjectCode!=null and erpProjectCode!=''.toString()">
      or erp_project_code like '%${erpProjectCode}%'
    </if>
    <if test="erpProjectName!=null and erpProjectName!=''.toString()">
      or erp_project_name like '%${erpProjectName}%'
    </if>
    <if test="projectScope!=null and projectScope!=''.toString()">
      or project_scope like '%${projectScope}%'
    </if>
    <if test="projectLevel!=null and projectLevel!=''.toString()">
      or project_level like '%${projectLevel}%'
    </if>
    <if test="projectProperty!=null and projectProperty!=''.toString()">
      or project_property like '%${projectProperty}%'
    </if>
    <if test="projectAbc!=null and projectAbc!=''.toString()">
      or project_abc like '%${projectAbc}%'
    </if>
    <if test="projectSource!=null and projectSource!=''.toString()">
      or project_source like '%${projectSource}%'
    </if>
    <if test="yjsjks!=null and yjsjks!=''.toString()">
      or yjsjks like '%${yjsjks}%'
    </if>
    <if test="yjsjjs!=null and yjsjjs!=''.toString()">
      or yjsjjs like '%${yjsjjs}%'
    </if>
    <if test="xmlbbm!=null and xmlbbm!=''.toString()">
      or xmlbbm like '%${xmlbbm}%'
    </if>
    <if test="xmlbmc!=null and xmlbmc!=''.toString()">
      or xmlbmc like '%${xmlbmc}%'
    </if>
    <if test="gsbmmc!=null and gsbmmc!=''.toString()">
      or gsbmmc like '%${gsbmmc}%'
    </if>
    <if test="gsbmbm!=null and gsbmbm!=''.toString()">
      or gsbmbm like '%${gsbmbm}%'
    </if>
    <if test="zycmc!=null and zycmc!=''.toString()">
      or zycmc like '%${zycmc}%'
    </if>
    <if test="zycbm!=null and zycbm!=''.toString()">
      or zycbm like '%${zycbm}%'
    </if>
    <if test="typeFlag!=null and typeFlag!=''.toString()">
      or type_flag like '%${typeFlag}%'
    </if>
    <if test="define1!=null and define1!=''.toString()">
      or define1 like '%${define1}%'
    </if>
    <if test="define2!=null and define2!=''.toString()">
      or define2 like '%${define2}%'
    </if>
    <if test="define3!=null and define3!=''.toString()">
      or define3 like '%${define3}%'
    </if>
    <if test="define4!=null and define4!=''.toString()">
      or define4 like '%${define4}%'
    </if>
    <if test="define5!=null and define5!=''.toString()">
      or define5 like '%${define5}%'
    </if>
    <if test="define6!=null and define6!=''.toString()">
      or define6 like '%${define6}%'
    </if>
    <if test="define7!=null and define7!=''.toString()">
      or define7 like '%${define7}%'
    </if>
    <if test="define8!=null and define8!=''.toString()">
      or define8 like '%${define8}%'
    </if>
    <if test="define9!=null and define9!=''.toString()">
      or define9 like '%${define9}%'
    </if>

  </select>
  <!--首页查询end-->
</mapper>