<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pcitc.mapper.out.OutProjectPlanMapper" >
  <resultMap id="BaseResultMap" type="com.pcitc.base.stp.out.OutProjectPlan" >
    <id column="DATA_ID" property="dataId" jdbcType="VARCHAR" />
    <result column="XMID" property="xmid" jdbcType="VARCHAR" />
    <result column="ND" property="nd" jdbcType="VARCHAR" />
    <result column="HTH" property="hth" jdbcType="VARCHAR" />
    <result column="XMMC" property="xmmc" jdbcType="VARCHAR" />
    <result column="XMJB" property="xmjb" jdbcType="VARCHAR" />
    <result column="YSND" property="ysnd" jdbcType="VARCHAR" />
    <result column="YSFYXJE" property="ysfyxje" jdbcType="VARCHAR" />
    <result column="YSZBXJE" property="yszbxje" jdbcType="VARCHAR" />
    <result column="YSJE" property="ysje" jdbcType="VARCHAR" />
    <result column="JF" property="jf" jdbcType="VARCHAR" />
    <result column="FWDXBM" property="fwdxbm" jdbcType="VARCHAR" />
    <result column="FWDX" property="fwdx" jdbcType="VARCHAR" />
    <result column="GSBMBM" property="gsbmbm" jdbcType="VARCHAR" />
    <result column="GSBMMC" property="gsbmmc" jdbcType="VARCHAR" />
    <result column="ZYCBM" property="zycbm" jdbcType="VARCHAR" />
    <result column="ZYCMC" property="zycmc" jdbcType="VARCHAR" />
    <result column="XMLBBM" property="xmlbbm" jdbcType="VARCHAR" />
    <result column="XMLBMC" property="xmlbmc" jdbcType="VARCHAR" />
    <result column="ZYLBBM" property="zylbbm" jdbcType="VARCHAR" />
    <result column="ZYLB" property="zylb" jdbcType="VARCHAR" />
    <result column="FZDWBM" property="fzdwbm" jdbcType="VARCHAR" />
    <result column="FZDW" property="fzdw" jdbcType="VARCHAR" />
    <result column="JTFZDWBM" property="jtfzdwbm" jdbcType="VARCHAR" />
    <result column="JTFZDW" property="jtfzdw" jdbcType="VARCHAR" />
    <result column="FZRYX" property="fzryx" jdbcType="VARCHAR" />
    <result column="FZRDH" property="fzrdh" jdbcType="VARCHAR" />
    <result column="FZRXM" property="fzrxm" jdbcType="VARCHAR" />
    <result column="JSSXXM" property="jssxxm" jdbcType="VARCHAR" />
    <result column="JSSJ" property="jssj" jdbcType="VARCHAR" />
    <result column="KSSJ" property="kssj" jdbcType="VARCHAR" />
    <result column="YJSJ" property="yjsj" jdbcType="VARCHAR" />
    <result column="ZYLY" property="zyly" jdbcType="VARCHAR" />
    <result column="ZYSX" property="zysx" jdbcType="VARCHAR" />
    <result column="SJID" property="sjid" jdbcType="VARCHAR" />
    <result column="LXBJ" property="lxbj" jdbcType="VARCHAR" />
    <result column="YJNR" property="yjnr" jdbcType="VARCHAR" />
    <result column="JDAP" property="jdap" jdbcType="VARCHAR" />
    <result column="YJMB" property="yjmb" jdbcType="VARCHAR" />
    <result column="YJYJC" property="yjyjc" jdbcType="VARCHAR" />
    <result column="PROJECT_PROPERTY" property="projectProperty" jdbcType="VARCHAR" />
    <result column="PROJECT_SCOPE" property="projectScope" jdbcType="VARCHAR" />
    <result column="PROJECT_ID" property="projectId" jdbcType="VARCHAR" />
    <result column="QDBZ" property="qdbz" jdbcType="VARCHAR" />
    <result column="FZDWUNITCW" property="fzdwunitcw" jdbcType="VARCHAR" />
    <result column="FZDWUNIT" property="fzdwunit" jdbcType="VARCHAR" />
    <result column="PROJECT_TYPE" property="projectType" jdbcType="VARCHAR" />
    <result column="DEFINE1" property="define1" jdbcType="VARCHAR" />
    <result column="DEFINE2" property="define2" jdbcType="VARCHAR" />
    <result column="DEFINE3" property="define3" jdbcType="VARCHAR" />
    <result column="DEFINE4" property="define4" jdbcType="VARCHAR" />
    <result column="DEFINE5" property="define5" jdbcType="VARCHAR" />
    <result column="DEFINE6" property="define6" jdbcType="VARCHAR" />
    <result column="DEFINE7" property="define7" jdbcType="VARCHAR" />
    <result column="DEFINE8" property="define8" jdbcType="VARCHAR" />
    <result column="DEFINE9" property="define9" jdbcType="VARCHAR" />
    <result column="DEFINE10" property="define10" jdbcType="VARCHAR" />
    <result column="DEFINE11" property="define11" jdbcType="VARCHAR" />
    <result column="DEFINE12" property="define12" jdbcType="VARCHAR" />
    <result column="DEFINE13" property="define13" jdbcType="VARCHAR" />
    <result column="DEFINE14" property="define14" jdbcType="VARCHAR" />
    <result column="DEFINE15" property="define15" jdbcType="VARCHAR" />
    <result column="DEFINE16" property="define16" jdbcType="VARCHAR" />
    <result column="DEFINE17" property="define17" jdbcType="VARCHAR" />
    <result column="DEFINE18" property="define18" jdbcType="VARCHAR" />
    <result column="DEFINE19" property="define19" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    DATA_ID, XMID, ND, HTH, XMMC, XMJB, YSND, YSFYXJE, YSZBXJE, YSJE, JF, FWDXBM, FWDX, 
    GSBMBM, GSBMMC, ZYCBM, ZYCMC, XMLBBM, XMLBMC, ZYLBBM, ZYLB, FZDWBM, FZDW, JTFZDWBM, 
    JTFZDW, FZRYX, FZRDH, FZRXM, JSSXXM, JSSJ, KSSJ, YJSJ, ZYLY, ZYSX, SJID, LXBJ, YJNR, 
    JDAP, YJMB, YJYJC, PROJECT_PROPERTY, PROJECT_SCOPE, PROJECT_ID, QDBZ, FZDWUNITCW, 
    FZDWUNIT, PROJECT_TYPE, DEFINE1, DEFINE2, DEFINE3, DEFINE4, DEFINE5, DEFINE6, DEFINE7, 
    DEFINE8, DEFINE9, DEFINE10, DEFINE11, DEFINE12, DEFINE13, DEFINE14, DEFINE15, DEFINE16, 
    DEFINE17, DEFINE18, DEFINE19
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pcitc.base.stp.out.OutProjectPlanExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from out_project_plan
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from out_project_plan
    where DATA_ID = #{dataId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from out_project_plan
    where DATA_ID = #{dataId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.pcitc.base.stp.out.OutProjectPlanExample" >
    delete from out_project_plan
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pcitc.base.stp.out.OutProjectPlan" >
    insert into out_project_plan (DATA_ID, XMID, ND, 
      HTH, XMMC, XMJB, YSND, 
      YSFYXJE, YSZBXJE, YSJE, 
      JF, FWDXBM, FWDX, GSBMBM, 
      GSBMMC, ZYCBM, ZYCMC, 
      XMLBBM, XMLBMC, ZYLBBM, 
      ZYLB, FZDWBM, FZDW, 
      JTFZDWBM, JTFZDW, FZRYX, 
      FZRDH, FZRXM, JSSXXM, 
      JSSJ, KSSJ, YJSJ, ZYLY, 
      ZYSX, SJID, LXBJ, YJNR, 
      JDAP, YJMB, YJYJC, 
      PROJECT_PROPERTY, PROJECT_SCOPE, PROJECT_ID, 
      QDBZ, FZDWUNITCW, FZDWUNIT, 
      PROJECT_TYPE, DEFINE1, DEFINE2, 
      DEFINE3, DEFINE4, DEFINE5, 
      DEFINE6, DEFINE7, DEFINE8, 
      DEFINE9, DEFINE10, DEFINE11, 
      DEFINE12, DEFINE13, DEFINE14, 
      DEFINE15, DEFINE16, DEFINE17, 
      DEFINE18, DEFINE19)
    values (#{dataId,jdbcType=VARCHAR}, #{xmid,jdbcType=VARCHAR}, #{nd,jdbcType=VARCHAR}, 
      #{hth,jdbcType=VARCHAR}, #{xmmc,jdbcType=VARCHAR}, #{xmjb,jdbcType=VARCHAR}, #{ysnd,jdbcType=VARCHAR}, 
      #{ysfyxje,jdbcType=VARCHAR}, #{yszbxje,jdbcType=VARCHAR}, #{ysje,jdbcType=VARCHAR}, 
      #{jf,jdbcType=VARCHAR}, #{fwdxbm,jdbcType=VARCHAR}, #{fwdx,jdbcType=VARCHAR}, #{gsbmbm,jdbcType=VARCHAR}, 
      #{gsbmmc,jdbcType=VARCHAR}, #{zycbm,jdbcType=VARCHAR}, #{zycmc,jdbcType=VARCHAR}, 
      #{xmlbbm,jdbcType=VARCHAR}, #{xmlbmc,jdbcType=VARCHAR}, #{zylbbm,jdbcType=VARCHAR}, 
      #{zylb,jdbcType=VARCHAR}, #{fzdwbm,jdbcType=VARCHAR}, #{fzdw,jdbcType=VARCHAR}, 
      #{jtfzdwbm,jdbcType=VARCHAR}, #{jtfzdw,jdbcType=VARCHAR}, #{fzryx,jdbcType=VARCHAR}, 
      #{fzrdh,jdbcType=VARCHAR}, #{fzrxm,jdbcType=VARCHAR}, #{jssxxm,jdbcType=VARCHAR}, 
      #{jssj,jdbcType=VARCHAR}, #{kssj,jdbcType=VARCHAR}, #{yjsj,jdbcType=VARCHAR}, #{zyly,jdbcType=VARCHAR}, 
      #{zysx,jdbcType=VARCHAR}, #{sjid,jdbcType=VARCHAR}, #{lxbj,jdbcType=VARCHAR}, #{yjnr,jdbcType=VARCHAR}, 
      #{jdap,jdbcType=VARCHAR}, #{yjmb,jdbcType=VARCHAR}, #{yjyjc,jdbcType=VARCHAR}, 
      #{projectProperty,jdbcType=VARCHAR}, #{projectScope,jdbcType=VARCHAR}, #{projectId,jdbcType=VARCHAR}, 
      #{qdbz,jdbcType=VARCHAR}, #{fzdwunitcw,jdbcType=VARCHAR}, #{fzdwunit,jdbcType=VARCHAR}, 
      #{projectType,jdbcType=VARCHAR}, #{define1,jdbcType=VARCHAR}, #{define2,jdbcType=VARCHAR}, 
      #{define3,jdbcType=VARCHAR}, #{define4,jdbcType=VARCHAR}, #{define5,jdbcType=VARCHAR}, 
      #{define6,jdbcType=VARCHAR}, #{define7,jdbcType=VARCHAR}, #{define8,jdbcType=VARCHAR}, 
      #{define9,jdbcType=VARCHAR}, #{define10,jdbcType=VARCHAR}, #{define11,jdbcType=VARCHAR}, 
      #{define12,jdbcType=VARCHAR}, #{define13,jdbcType=VARCHAR}, #{define14,jdbcType=VARCHAR}, 
      #{define15,jdbcType=VARCHAR}, #{define16,jdbcType=VARCHAR}, #{define17,jdbcType=VARCHAR}, 
      #{define18,jdbcType=VARCHAR}, #{define19,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.pcitc.base.stp.out.OutProjectPlan" >
    insert into out_project_plan
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="dataId != null" >
        DATA_ID,
      </if>
      <if test="xmid != null" >
        XMID,
      </if>
      <if test="nd != null" >
        ND,
      </if>
      <if test="hth != null" >
        HTH,
      </if>
      <if test="xmmc != null" >
        XMMC,
      </if>
      <if test="xmjb != null" >
        XMJB,
      </if>
      <if test="ysnd != null" >
        YSND,
      </if>
      <if test="ysfyxje != null" >
        YSFYXJE,
      </if>
      <if test="yszbxje != null" >
        YSZBXJE,
      </if>
      <if test="ysje != null" >
        YSJE,
      </if>
      <if test="jf != null" >
        JF,
      </if>
      <if test="fwdxbm != null" >
        FWDXBM,
      </if>
      <if test="fwdx != null" >
        FWDX,
      </if>
      <if test="gsbmbm != null" >
        GSBMBM,
      </if>
      <if test="gsbmmc != null" >
        GSBMMC,
      </if>
      <if test="zycbm != null" >
        ZYCBM,
      </if>
      <if test="zycmc != null" >
        ZYCMC,
      </if>
      <if test="xmlbbm != null" >
        XMLBBM,
      </if>
      <if test="xmlbmc != null" >
        XMLBMC,
      </if>
      <if test="zylbbm != null" >
        ZYLBBM,
      </if>
      <if test="zylb != null" >
        ZYLB,
      </if>
      <if test="fzdwbm != null" >
        FZDWBM,
      </if>
      <if test="fzdw != null" >
        FZDW,
      </if>
      <if test="jtfzdwbm != null" >
        JTFZDWBM,
      </if>
      <if test="jtfzdw != null" >
        JTFZDW,
      </if>
      <if test="fzryx != null" >
        FZRYX,
      </if>
      <if test="fzrdh != null" >
        FZRDH,
      </if>
      <if test="fzrxm != null" >
        FZRXM,
      </if>
      <if test="jssxxm != null" >
        JSSXXM,
      </if>
      <if test="jssj != null" >
        JSSJ,
      </if>
      <if test="kssj != null" >
        KSSJ,
      </if>
      <if test="yjsj != null" >
        YJSJ,
      </if>
      <if test="zyly != null" >
        ZYLY,
      </if>
      <if test="zysx != null" >
        ZYSX,
      </if>
      <if test="sjid != null" >
        SJID,
      </if>
      <if test="lxbj != null" >
        LXBJ,
      </if>
      <if test="yjnr != null" >
        YJNR,
      </if>
      <if test="jdap != null" >
        JDAP,
      </if>
      <if test="yjmb != null" >
        YJMB,
      </if>
      <if test="yjyjc != null" >
        YJYJC,
      </if>
      <if test="projectProperty != null" >
        PROJECT_PROPERTY,
      </if>
      <if test="projectScope != null" >
        PROJECT_SCOPE,
      </if>
      <if test="projectId != null" >
        PROJECT_ID,
      </if>
      <if test="qdbz != null" >
        QDBZ,
      </if>
      <if test="fzdwunitcw != null" >
        FZDWUNITCW,
      </if>
      <if test="fzdwunit != null" >
        FZDWUNIT,
      </if>
      <if test="projectType != null" >
        PROJECT_TYPE,
      </if>
      <if test="define1 != null" >
        DEFINE1,
      </if>
      <if test="define2 != null" >
        DEFINE2,
      </if>
      <if test="define3 != null" >
        DEFINE3,
      </if>
      <if test="define4 != null" >
        DEFINE4,
      </if>
      <if test="define5 != null" >
        DEFINE5,
      </if>
      <if test="define6 != null" >
        DEFINE6,
      </if>
      <if test="define7 != null" >
        DEFINE7,
      </if>
      <if test="define8 != null" >
        DEFINE8,
      </if>
      <if test="define9 != null" >
        DEFINE9,
      </if>
      <if test="define10 != null" >
        DEFINE10,
      </if>
      <if test="define11 != null" >
        DEFINE11,
      </if>
      <if test="define12 != null" >
        DEFINE12,
      </if>
      <if test="define13 != null" >
        DEFINE13,
      </if>
      <if test="define14 != null" >
        DEFINE14,
      </if>
      <if test="define15 != null" >
        DEFINE15,
      </if>
      <if test="define16 != null" >
        DEFINE16,
      </if>
      <if test="define17 != null" >
        DEFINE17,
      </if>
      <if test="define18 != null" >
        DEFINE18,
      </if>
      <if test="define19 != null" >
        DEFINE19,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="dataId != null" >
        #{dataId,jdbcType=VARCHAR},
      </if>
      <if test="xmid != null" >
        #{xmid,jdbcType=VARCHAR},
      </if>
      <if test="nd != null" >
        #{nd,jdbcType=VARCHAR},
      </if>
      <if test="hth != null" >
        #{hth,jdbcType=VARCHAR},
      </if>
      <if test="xmmc != null" >
        #{xmmc,jdbcType=VARCHAR},
      </if>
      <if test="xmjb != null" >
        #{xmjb,jdbcType=VARCHAR},
      </if>
      <if test="ysnd != null" >
        #{ysnd,jdbcType=VARCHAR},
      </if>
      <if test="ysfyxje != null" >
        #{ysfyxje,jdbcType=VARCHAR},
      </if>
      <if test="yszbxje != null" >
        #{yszbxje,jdbcType=VARCHAR},
      </if>
      <if test="ysje != null" >
        #{ysje,jdbcType=VARCHAR},
      </if>
      <if test="jf != null" >
        #{jf,jdbcType=VARCHAR},
      </if>
      <if test="fwdxbm != null" >
        #{fwdxbm,jdbcType=VARCHAR},
      </if>
      <if test="fwdx != null" >
        #{fwdx,jdbcType=VARCHAR},
      </if>
      <if test="gsbmbm != null" >
        #{gsbmbm,jdbcType=VARCHAR},
      </if>
      <if test="gsbmmc != null" >
        #{gsbmmc,jdbcType=VARCHAR},
      </if>
      <if test="zycbm != null" >
        #{zycbm,jdbcType=VARCHAR},
      </if>
      <if test="zycmc != null" >
        #{zycmc,jdbcType=VARCHAR},
      </if>
      <if test="xmlbbm != null" >
        #{xmlbbm,jdbcType=VARCHAR},
      </if>
      <if test="xmlbmc != null" >
        #{xmlbmc,jdbcType=VARCHAR},
      </if>
      <if test="zylbbm != null" >
        #{zylbbm,jdbcType=VARCHAR},
      </if>
      <if test="zylb != null" >
        #{zylb,jdbcType=VARCHAR},
      </if>
      <if test="fzdwbm != null" >
        #{fzdwbm,jdbcType=VARCHAR},
      </if>
      <if test="fzdw != null" >
        #{fzdw,jdbcType=VARCHAR},
      </if>
      <if test="jtfzdwbm != null" >
        #{jtfzdwbm,jdbcType=VARCHAR},
      </if>
      <if test="jtfzdw != null" >
        #{jtfzdw,jdbcType=VARCHAR},
      </if>
      <if test="fzryx != null" >
        #{fzryx,jdbcType=VARCHAR},
      </if>
      <if test="fzrdh != null" >
        #{fzrdh,jdbcType=VARCHAR},
      </if>
      <if test="fzrxm != null" >
        #{fzrxm,jdbcType=VARCHAR},
      </if>
      <if test="jssxxm != null" >
        #{jssxxm,jdbcType=VARCHAR},
      </if>
      <if test="jssj != null" >
        #{jssj,jdbcType=VARCHAR},
      </if>
      <if test="kssj != null" >
        #{kssj,jdbcType=VARCHAR},
      </if>
      <if test="yjsj != null" >
        #{yjsj,jdbcType=VARCHAR},
      </if>
      <if test="zyly != null" >
        #{zyly,jdbcType=VARCHAR},
      </if>
      <if test="zysx != null" >
        #{zysx,jdbcType=VARCHAR},
      </if>
      <if test="sjid != null" >
        #{sjid,jdbcType=VARCHAR},
      </if>
      <if test="lxbj != null" >
        #{lxbj,jdbcType=VARCHAR},
      </if>
      <if test="yjnr != null" >
        #{yjnr,jdbcType=VARCHAR},
      </if>
      <if test="jdap != null" >
        #{jdap,jdbcType=VARCHAR},
      </if>
      <if test="yjmb != null" >
        #{yjmb,jdbcType=VARCHAR},
      </if>
      <if test="yjyjc != null" >
        #{yjyjc,jdbcType=VARCHAR},
      </if>
      <if test="projectProperty != null" >
        #{projectProperty,jdbcType=VARCHAR},
      </if>
      <if test="projectScope != null" >
        #{projectScope,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null" >
        #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="qdbz != null" >
        #{qdbz,jdbcType=VARCHAR},
      </if>
      <if test="fzdwunitcw != null" >
        #{fzdwunitcw,jdbcType=VARCHAR},
      </if>
      <if test="fzdwunit != null" >
        #{fzdwunit,jdbcType=VARCHAR},
      </if>
      <if test="projectType != null" >
        #{projectType,jdbcType=VARCHAR},
      </if>
      <if test="define1 != null" >
        #{define1,jdbcType=VARCHAR},
      </if>
      <if test="define2 != null" >
        #{define2,jdbcType=VARCHAR},
      </if>
      <if test="define3 != null" >
        #{define3,jdbcType=VARCHAR},
      </if>
      <if test="define4 != null" >
        #{define4,jdbcType=VARCHAR},
      </if>
      <if test="define5 != null" >
        #{define5,jdbcType=VARCHAR},
      </if>
      <if test="define6 != null" >
        #{define6,jdbcType=VARCHAR},
      </if>
      <if test="define7 != null" >
        #{define7,jdbcType=VARCHAR},
      </if>
      <if test="define8 != null" >
        #{define8,jdbcType=VARCHAR},
      </if>
      <if test="define9 != null" >
        #{define9,jdbcType=VARCHAR},
      </if>
      <if test="define10 != null" >
        #{define10,jdbcType=VARCHAR},
      </if>
      <if test="define11 != null" >
        #{define11,jdbcType=VARCHAR},
      </if>
      <if test="define12 != null" >
        #{define12,jdbcType=VARCHAR},
      </if>
      <if test="define13 != null" >
        #{define13,jdbcType=VARCHAR},
      </if>
      <if test="define14 != null" >
        #{define14,jdbcType=VARCHAR},
      </if>
      <if test="define15 != null" >
        #{define15,jdbcType=VARCHAR},
      </if>
      <if test="define16 != null" >
        #{define16,jdbcType=VARCHAR},
      </if>
      <if test="define17 != null" >
        #{define17,jdbcType=VARCHAR},
      </if>
      <if test="define18 != null" >
        #{define18,jdbcType=VARCHAR},
      </if>
      <if test="define19 != null" >
        #{define19,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pcitc.base.stp.out.OutProjectPlanExample" resultType="java.lang.Integer" >
    select count(*) from out_project_plan
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update out_project_plan
    <set >
      <if test="record.dataId != null" >
        DATA_ID = #{record.dataId,jdbcType=VARCHAR},
      </if>
      <if test="record.xmid != null" >
        XMID = #{record.xmid,jdbcType=VARCHAR},
      </if>
      <if test="record.nd != null" >
        ND = #{record.nd,jdbcType=VARCHAR},
      </if>
      <if test="record.hth != null" >
        HTH = #{record.hth,jdbcType=VARCHAR},
      </if>
      <if test="record.xmmc != null" >
        XMMC = #{record.xmmc,jdbcType=VARCHAR},
      </if>
      <if test="record.xmjb != null" >
        XMJB = #{record.xmjb,jdbcType=VARCHAR},
      </if>
      <if test="record.ysnd != null" >
        YSND = #{record.ysnd,jdbcType=VARCHAR},
      </if>
      <if test="record.ysfyxje != null" >
        YSFYXJE = #{record.ysfyxje,jdbcType=VARCHAR},
      </if>
      <if test="record.yszbxje != null" >
        YSZBXJE = #{record.yszbxje,jdbcType=VARCHAR},
      </if>
      <if test="record.ysje != null" >
        YSJE = #{record.ysje,jdbcType=VARCHAR},
      </if>
      <if test="record.jf != null" >
        JF = #{record.jf,jdbcType=VARCHAR},
      </if>
      <if test="record.fwdxbm != null" >
        FWDXBM = #{record.fwdxbm,jdbcType=VARCHAR},
      </if>
      <if test="record.fwdx != null" >
        FWDX = #{record.fwdx,jdbcType=VARCHAR},
      </if>
      <if test="record.gsbmbm != null" >
        GSBMBM = #{record.gsbmbm,jdbcType=VARCHAR},
      </if>
      <if test="record.gsbmmc != null" >
        GSBMMC = #{record.gsbmmc,jdbcType=VARCHAR},
      </if>
      <if test="record.zycbm != null" >
        ZYCBM = #{record.zycbm,jdbcType=VARCHAR},
      </if>
      <if test="record.zycmc != null" >
        ZYCMC = #{record.zycmc,jdbcType=VARCHAR},
      </if>
      <if test="record.xmlbbm != null" >
        XMLBBM = #{record.xmlbbm,jdbcType=VARCHAR},
      </if>
      <if test="record.xmlbmc != null" >
        XMLBMC = #{record.xmlbmc,jdbcType=VARCHAR},
      </if>
      <if test="record.zylbbm != null" >
        ZYLBBM = #{record.zylbbm,jdbcType=VARCHAR},
      </if>
      <if test="record.zylb != null" >
        ZYLB = #{record.zylb,jdbcType=VARCHAR},
      </if>
      <if test="record.fzdwbm != null" >
        FZDWBM = #{record.fzdwbm,jdbcType=VARCHAR},
      </if>
      <if test="record.fzdw != null" >
        FZDW = #{record.fzdw,jdbcType=VARCHAR},
      </if>
      <if test="record.jtfzdwbm != null" >
        JTFZDWBM = #{record.jtfzdwbm,jdbcType=VARCHAR},
      </if>
      <if test="record.jtfzdw != null" >
        JTFZDW = #{record.jtfzdw,jdbcType=VARCHAR},
      </if>
      <if test="record.fzryx != null" >
        FZRYX = #{record.fzryx,jdbcType=VARCHAR},
      </if>
      <if test="record.fzrdh != null" >
        FZRDH = #{record.fzrdh,jdbcType=VARCHAR},
      </if>
      <if test="record.fzrxm != null" >
        FZRXM = #{record.fzrxm,jdbcType=VARCHAR},
      </if>
      <if test="record.jssxxm != null" >
        JSSXXM = #{record.jssxxm,jdbcType=VARCHAR},
      </if>
      <if test="record.jssj != null" >
        JSSJ = #{record.jssj,jdbcType=VARCHAR},
      </if>
      <if test="record.kssj != null" >
        KSSJ = #{record.kssj,jdbcType=VARCHAR},
      </if>
      <if test="record.yjsj != null" >
        YJSJ = #{record.yjsj,jdbcType=VARCHAR},
      </if>
      <if test="record.zyly != null" >
        ZYLY = #{record.zyly,jdbcType=VARCHAR},
      </if>
      <if test="record.zysx != null" >
        ZYSX = #{record.zysx,jdbcType=VARCHAR},
      </if>
      <if test="record.sjid != null" >
        SJID = #{record.sjid,jdbcType=VARCHAR},
      </if>
      <if test="record.lxbj != null" >
        LXBJ = #{record.lxbj,jdbcType=VARCHAR},
      </if>
      <if test="record.yjnr != null" >
        YJNR = #{record.yjnr,jdbcType=VARCHAR},
      </if>
      <if test="record.jdap != null" >
        JDAP = #{record.jdap,jdbcType=VARCHAR},
      </if>
      <if test="record.yjmb != null" >
        YJMB = #{record.yjmb,jdbcType=VARCHAR},
      </if>
      <if test="record.yjyjc != null" >
        YJYJC = #{record.yjyjc,jdbcType=VARCHAR},
      </if>
      <if test="record.projectProperty != null" >
        PROJECT_PROPERTY = #{record.projectProperty,jdbcType=VARCHAR},
      </if>
      <if test="record.projectScope != null" >
        PROJECT_SCOPE = #{record.projectScope,jdbcType=VARCHAR},
      </if>
      <if test="record.projectId != null" >
        PROJECT_ID = #{record.projectId,jdbcType=VARCHAR},
      </if>
      <if test="record.qdbz != null" >
        QDBZ = #{record.qdbz,jdbcType=VARCHAR},
      </if>
      <if test="record.fzdwunitcw != null" >
        FZDWUNITCW = #{record.fzdwunitcw,jdbcType=VARCHAR},
      </if>
      <if test="record.fzdwunit != null" >
        FZDWUNIT = #{record.fzdwunit,jdbcType=VARCHAR},
      </if>
      <if test="record.projectType != null" >
        PROJECT_TYPE = #{record.projectType,jdbcType=VARCHAR},
      </if>
      <if test="record.define1 != null" >
        DEFINE1 = #{record.define1,jdbcType=VARCHAR},
      </if>
      <if test="record.define2 != null" >
        DEFINE2 = #{record.define2,jdbcType=VARCHAR},
      </if>
      <if test="record.define3 != null" >
        DEFINE3 = #{record.define3,jdbcType=VARCHAR},
      </if>
      <if test="record.define4 != null" >
        DEFINE4 = #{record.define4,jdbcType=VARCHAR},
      </if>
      <if test="record.define5 != null" >
        DEFINE5 = #{record.define5,jdbcType=VARCHAR},
      </if>
      <if test="record.define6 != null" >
        DEFINE6 = #{record.define6,jdbcType=VARCHAR},
      </if>
      <if test="record.define7 != null" >
        DEFINE7 = #{record.define7,jdbcType=VARCHAR},
      </if>
      <if test="record.define8 != null" >
        DEFINE8 = #{record.define8,jdbcType=VARCHAR},
      </if>
      <if test="record.define9 != null" >
        DEFINE9 = #{record.define9,jdbcType=VARCHAR},
      </if>
      <if test="record.define10 != null" >
        DEFINE10 = #{record.define10,jdbcType=VARCHAR},
      </if>
      <if test="record.define11 != null" >
        DEFINE11 = #{record.define11,jdbcType=VARCHAR},
      </if>
      <if test="record.define12 != null" >
        DEFINE12 = #{record.define12,jdbcType=VARCHAR},
      </if>
      <if test="record.define13 != null" >
        DEFINE13 = #{record.define13,jdbcType=VARCHAR},
      </if>
      <if test="record.define14 != null" >
        DEFINE14 = #{record.define14,jdbcType=VARCHAR},
      </if>
      <if test="record.define15 != null" >
        DEFINE15 = #{record.define15,jdbcType=VARCHAR},
      </if>
      <if test="record.define16 != null" >
        DEFINE16 = #{record.define16,jdbcType=VARCHAR},
      </if>
      <if test="record.define17 != null" >
        DEFINE17 = #{record.define17,jdbcType=VARCHAR},
      </if>
      <if test="record.define18 != null" >
        DEFINE18 = #{record.define18,jdbcType=VARCHAR},
      </if>
      <if test="record.define19 != null" >
        DEFINE19 = #{record.define19,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update out_project_plan
    set DATA_ID = #{record.dataId,jdbcType=VARCHAR},
      XMID = #{record.xmid,jdbcType=VARCHAR},
      ND = #{record.nd,jdbcType=VARCHAR},
      HTH = #{record.hth,jdbcType=VARCHAR},
      XMMC = #{record.xmmc,jdbcType=VARCHAR},
      XMJB = #{record.xmjb,jdbcType=VARCHAR},
      YSND = #{record.ysnd,jdbcType=VARCHAR},
      YSFYXJE = #{record.ysfyxje,jdbcType=VARCHAR},
      YSZBXJE = #{record.yszbxje,jdbcType=VARCHAR},
      YSJE = #{record.ysje,jdbcType=VARCHAR},
      JF = #{record.jf,jdbcType=VARCHAR},
      FWDXBM = #{record.fwdxbm,jdbcType=VARCHAR},
      FWDX = #{record.fwdx,jdbcType=VARCHAR},
      GSBMBM = #{record.gsbmbm,jdbcType=VARCHAR},
      GSBMMC = #{record.gsbmmc,jdbcType=VARCHAR},
      ZYCBM = #{record.zycbm,jdbcType=VARCHAR},
      ZYCMC = #{record.zycmc,jdbcType=VARCHAR},
      XMLBBM = #{record.xmlbbm,jdbcType=VARCHAR},
      XMLBMC = #{record.xmlbmc,jdbcType=VARCHAR},
      ZYLBBM = #{record.zylbbm,jdbcType=VARCHAR},
      ZYLB = #{record.zylb,jdbcType=VARCHAR},
      FZDWBM = #{record.fzdwbm,jdbcType=VARCHAR},
      FZDW = #{record.fzdw,jdbcType=VARCHAR},
      JTFZDWBM = #{record.jtfzdwbm,jdbcType=VARCHAR},
      JTFZDW = #{record.jtfzdw,jdbcType=VARCHAR},
      FZRYX = #{record.fzryx,jdbcType=VARCHAR},
      FZRDH = #{record.fzrdh,jdbcType=VARCHAR},
      FZRXM = #{record.fzrxm,jdbcType=VARCHAR},
      JSSXXM = #{record.jssxxm,jdbcType=VARCHAR},
      JSSJ = #{record.jssj,jdbcType=VARCHAR},
      KSSJ = #{record.kssj,jdbcType=VARCHAR},
      YJSJ = #{record.yjsj,jdbcType=VARCHAR},
      ZYLY = #{record.zyly,jdbcType=VARCHAR},
      ZYSX = #{record.zysx,jdbcType=VARCHAR},
      SJID = #{record.sjid,jdbcType=VARCHAR},
      LXBJ = #{record.lxbj,jdbcType=VARCHAR},
      YJNR = #{record.yjnr,jdbcType=VARCHAR},
      JDAP = #{record.jdap,jdbcType=VARCHAR},
      YJMB = #{record.yjmb,jdbcType=VARCHAR},
      YJYJC = #{record.yjyjc,jdbcType=VARCHAR},
      PROJECT_PROPERTY = #{record.projectProperty,jdbcType=VARCHAR},
      PROJECT_SCOPE = #{record.projectScope,jdbcType=VARCHAR},
      PROJECT_ID = #{record.projectId,jdbcType=VARCHAR},
      QDBZ = #{record.qdbz,jdbcType=VARCHAR},
      FZDWUNITCW = #{record.fzdwunitcw,jdbcType=VARCHAR},
      FZDWUNIT = #{record.fzdwunit,jdbcType=VARCHAR},
      PROJECT_TYPE = #{record.projectType,jdbcType=VARCHAR},
      DEFINE1 = #{record.define1,jdbcType=VARCHAR},
      DEFINE2 = #{record.define2,jdbcType=VARCHAR},
      DEFINE3 = #{record.define3,jdbcType=VARCHAR},
      DEFINE4 = #{record.define4,jdbcType=VARCHAR},
      DEFINE5 = #{record.define5,jdbcType=VARCHAR},
      DEFINE6 = #{record.define6,jdbcType=VARCHAR},
      DEFINE7 = #{record.define7,jdbcType=VARCHAR},
      DEFINE8 = #{record.define8,jdbcType=VARCHAR},
      DEFINE9 = #{record.define9,jdbcType=VARCHAR},
      DEFINE10 = #{record.define10,jdbcType=VARCHAR},
      DEFINE11 = #{record.define11,jdbcType=VARCHAR},
      DEFINE12 = #{record.define12,jdbcType=VARCHAR},
      DEFINE13 = #{record.define13,jdbcType=VARCHAR},
      DEFINE14 = #{record.define14,jdbcType=VARCHAR},
      DEFINE15 = #{record.define15,jdbcType=VARCHAR},
      DEFINE16 = #{record.define16,jdbcType=VARCHAR},
      DEFINE17 = #{record.define17,jdbcType=VARCHAR},
      DEFINE18 = #{record.define18,jdbcType=VARCHAR},
      DEFINE19 = #{record.define19,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pcitc.base.stp.out.OutProjectPlan" >
    update out_project_plan
    <set >
      <if test="xmid != null" >
        XMID = #{xmid,jdbcType=VARCHAR},
      </if>
      <if test="nd != null" >
        ND = #{nd,jdbcType=VARCHAR},
      </if>
      <if test="hth != null" >
        HTH = #{hth,jdbcType=VARCHAR},
      </if>
      <if test="xmmc != null" >
        XMMC = #{xmmc,jdbcType=VARCHAR},
      </if>
      <if test="xmjb != null" >
        XMJB = #{xmjb,jdbcType=VARCHAR},
      </if>
      <if test="ysnd != null" >
        YSND = #{ysnd,jdbcType=VARCHAR},
      </if>
      <if test="ysfyxje != null" >
        YSFYXJE = #{ysfyxje,jdbcType=VARCHAR},
      </if>
      <if test="yszbxje != null" >
        YSZBXJE = #{yszbxje,jdbcType=VARCHAR},
      </if>
      <if test="ysje != null" >
        YSJE = #{ysje,jdbcType=VARCHAR},
      </if>
      <if test="jf != null" >
        JF = #{jf,jdbcType=VARCHAR},
      </if>
      <if test="fwdxbm != null" >
        FWDXBM = #{fwdxbm,jdbcType=VARCHAR},
      </if>
      <if test="fwdx != null" >
        FWDX = #{fwdx,jdbcType=VARCHAR},
      </if>
      <if test="gsbmbm != null" >
        GSBMBM = #{gsbmbm,jdbcType=VARCHAR},
      </if>
      <if test="gsbmmc != null" >
        GSBMMC = #{gsbmmc,jdbcType=VARCHAR},
      </if>
      <if test="zycbm != null" >
        ZYCBM = #{zycbm,jdbcType=VARCHAR},
      </if>
      <if test="zycmc != null" >
        ZYCMC = #{zycmc,jdbcType=VARCHAR},
      </if>
      <if test="xmlbbm != null" >
        XMLBBM = #{xmlbbm,jdbcType=VARCHAR},
      </if>
      <if test="xmlbmc != null" >
        XMLBMC = #{xmlbmc,jdbcType=VARCHAR},
      </if>
      <if test="zylbbm != null" >
        ZYLBBM = #{zylbbm,jdbcType=VARCHAR},
      </if>
      <if test="zylb != null" >
        ZYLB = #{zylb,jdbcType=VARCHAR},
      </if>
      <if test="fzdwbm != null" >
        FZDWBM = #{fzdwbm,jdbcType=VARCHAR},
      </if>
      <if test="fzdw != null" >
        FZDW = #{fzdw,jdbcType=VARCHAR},
      </if>
      <if test="jtfzdwbm != null" >
        JTFZDWBM = #{jtfzdwbm,jdbcType=VARCHAR},
      </if>
      <if test="jtfzdw != null" >
        JTFZDW = #{jtfzdw,jdbcType=VARCHAR},
      </if>
      <if test="fzryx != null" >
        FZRYX = #{fzryx,jdbcType=VARCHAR},
      </if>
      <if test="fzrdh != null" >
        FZRDH = #{fzrdh,jdbcType=VARCHAR},
      </if>
      <if test="fzrxm != null" >
        FZRXM = #{fzrxm,jdbcType=VARCHAR},
      </if>
      <if test="jssxxm != null" >
        JSSXXM = #{jssxxm,jdbcType=VARCHAR},
      </if>
      <if test="jssj != null" >
        JSSJ = #{jssj,jdbcType=VARCHAR},
      </if>
      <if test="kssj != null" >
        KSSJ = #{kssj,jdbcType=VARCHAR},
      </if>
      <if test="yjsj != null" >
        YJSJ = #{yjsj,jdbcType=VARCHAR},
      </if>
      <if test="zyly != null" >
        ZYLY = #{zyly,jdbcType=VARCHAR},
      </if>
      <if test="zysx != null" >
        ZYSX = #{zysx,jdbcType=VARCHAR},
      </if>
      <if test="sjid != null" >
        SJID = #{sjid,jdbcType=VARCHAR},
      </if>
      <if test="lxbj != null" >
        LXBJ = #{lxbj,jdbcType=VARCHAR},
      </if>
      <if test="yjnr != null" >
        YJNR = #{yjnr,jdbcType=VARCHAR},
      </if>
      <if test="jdap != null" >
        JDAP = #{jdap,jdbcType=VARCHAR},
      </if>
      <if test="yjmb != null" >
        YJMB = #{yjmb,jdbcType=VARCHAR},
      </if>
      <if test="yjyjc != null" >
        YJYJC = #{yjyjc,jdbcType=VARCHAR},
      </if>
      <if test="projectProperty != null" >
        PROJECT_PROPERTY = #{projectProperty,jdbcType=VARCHAR},
      </if>
      <if test="projectScope != null" >
        PROJECT_SCOPE = #{projectScope,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null" >
        PROJECT_ID = #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="qdbz != null" >
        QDBZ = #{qdbz,jdbcType=VARCHAR},
      </if>
      <if test="fzdwunitcw != null" >
        FZDWUNITCW = #{fzdwunitcw,jdbcType=VARCHAR},
      </if>
      <if test="fzdwunit != null" >
        FZDWUNIT = #{fzdwunit,jdbcType=VARCHAR},
      </if>
      <if test="projectType != null" >
        PROJECT_TYPE = #{projectType,jdbcType=VARCHAR},
      </if>
      <if test="define1 != null" >
        DEFINE1 = #{define1,jdbcType=VARCHAR},
      </if>
      <if test="define2 != null" >
        DEFINE2 = #{define2,jdbcType=VARCHAR},
      </if>
      <if test="define3 != null" >
        DEFINE3 = #{define3,jdbcType=VARCHAR},
      </if>
      <if test="define4 != null" >
        DEFINE4 = #{define4,jdbcType=VARCHAR},
      </if>
      <if test="define5 != null" >
        DEFINE5 = #{define5,jdbcType=VARCHAR},
      </if>
      <if test="define6 != null" >
        DEFINE6 = #{define6,jdbcType=VARCHAR},
      </if>
      <if test="define7 != null" >
        DEFINE7 = #{define7,jdbcType=VARCHAR},
      </if>
      <if test="define8 != null" >
        DEFINE8 = #{define8,jdbcType=VARCHAR},
      </if>
      <if test="define9 != null" >
        DEFINE9 = #{define9,jdbcType=VARCHAR},
      </if>
      <if test="define10 != null" >
        DEFINE10 = #{define10,jdbcType=VARCHAR},
      </if>
      <if test="define11 != null" >
        DEFINE11 = #{define11,jdbcType=VARCHAR},
      </if>
      <if test="define12 != null" >
        DEFINE12 = #{define12,jdbcType=VARCHAR},
      </if>
      <if test="define13 != null" >
        DEFINE13 = #{define13,jdbcType=VARCHAR},
      </if>
      <if test="define14 != null" >
        DEFINE14 = #{define14,jdbcType=VARCHAR},
      </if>
      <if test="define15 != null" >
        DEFINE15 = #{define15,jdbcType=VARCHAR},
      </if>
      <if test="define16 != null" >
        DEFINE16 = #{define16,jdbcType=VARCHAR},
      </if>
      <if test="define17 != null" >
        DEFINE17 = #{define17,jdbcType=VARCHAR},
      </if>
      <if test="define18 != null" >
        DEFINE18 = #{define18,jdbcType=VARCHAR},
      </if>
      <if test="define19 != null" >
        DEFINE19 = #{define19,jdbcType=VARCHAR},
      </if>
    </set>
    where DATA_ID = #{dataId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pcitc.base.stp.out.OutProjectPlan" >
    update out_project_plan
    set XMID = #{xmid,jdbcType=VARCHAR},
      ND = #{nd,jdbcType=VARCHAR},
      HTH = #{hth,jdbcType=VARCHAR},
      XMMC = #{xmmc,jdbcType=VARCHAR},
      XMJB = #{xmjb,jdbcType=VARCHAR},
      YSND = #{ysnd,jdbcType=VARCHAR},
      YSFYXJE = #{ysfyxje,jdbcType=VARCHAR},
      YSZBXJE = #{yszbxje,jdbcType=VARCHAR},
      YSJE = #{ysje,jdbcType=VARCHAR},
      JF = #{jf,jdbcType=VARCHAR},
      FWDXBM = #{fwdxbm,jdbcType=VARCHAR},
      FWDX = #{fwdx,jdbcType=VARCHAR},
      GSBMBM = #{gsbmbm,jdbcType=VARCHAR},
      GSBMMC = #{gsbmmc,jdbcType=VARCHAR},
      ZYCBM = #{zycbm,jdbcType=VARCHAR},
      ZYCMC = #{zycmc,jdbcType=VARCHAR},
      XMLBBM = #{xmlbbm,jdbcType=VARCHAR},
      XMLBMC = #{xmlbmc,jdbcType=VARCHAR},
      ZYLBBM = #{zylbbm,jdbcType=VARCHAR},
      ZYLB = #{zylb,jdbcType=VARCHAR},
      FZDWBM = #{fzdwbm,jdbcType=VARCHAR},
      FZDW = #{fzdw,jdbcType=VARCHAR},
      JTFZDWBM = #{jtfzdwbm,jdbcType=VARCHAR},
      JTFZDW = #{jtfzdw,jdbcType=VARCHAR},
      FZRYX = #{fzryx,jdbcType=VARCHAR},
      FZRDH = #{fzrdh,jdbcType=VARCHAR},
      FZRXM = #{fzrxm,jdbcType=VARCHAR},
      JSSXXM = #{jssxxm,jdbcType=VARCHAR},
      JSSJ = #{jssj,jdbcType=VARCHAR},
      KSSJ = #{kssj,jdbcType=VARCHAR},
      YJSJ = #{yjsj,jdbcType=VARCHAR},
      ZYLY = #{zyly,jdbcType=VARCHAR},
      ZYSX = #{zysx,jdbcType=VARCHAR},
      SJID = #{sjid,jdbcType=VARCHAR},
      LXBJ = #{lxbj,jdbcType=VARCHAR},
      YJNR = #{yjnr,jdbcType=VARCHAR},
      JDAP = #{jdap,jdbcType=VARCHAR},
      YJMB = #{yjmb,jdbcType=VARCHAR},
      YJYJC = #{yjyjc,jdbcType=VARCHAR},
      PROJECT_PROPERTY = #{projectProperty,jdbcType=VARCHAR},
      PROJECT_SCOPE = #{projectScope,jdbcType=VARCHAR},
      PROJECT_ID = #{projectId,jdbcType=VARCHAR},
      QDBZ = #{qdbz,jdbcType=VARCHAR},
      FZDWUNITCW = #{fzdwunitcw,jdbcType=VARCHAR},
      FZDWUNIT = #{fzdwunit,jdbcType=VARCHAR},
      PROJECT_TYPE = #{projectType,jdbcType=VARCHAR},
      DEFINE1 = #{define1,jdbcType=VARCHAR},
      DEFINE2 = #{define2,jdbcType=VARCHAR},
      DEFINE3 = #{define3,jdbcType=VARCHAR},
      DEFINE4 = #{define4,jdbcType=VARCHAR},
      DEFINE5 = #{define5,jdbcType=VARCHAR},
      DEFINE6 = #{define6,jdbcType=VARCHAR},
      DEFINE7 = #{define7,jdbcType=VARCHAR},
      DEFINE8 = #{define8,jdbcType=VARCHAR},
      DEFINE9 = #{define9,jdbcType=VARCHAR},
      DEFINE10 = #{define10,jdbcType=VARCHAR},
      DEFINE11 = #{define11,jdbcType=VARCHAR},
      DEFINE12 = #{define12,jdbcType=VARCHAR},
      DEFINE13 = #{define13,jdbcType=VARCHAR},
      DEFINE14 = #{define14,jdbcType=VARCHAR},
      DEFINE15 = #{define15,jdbcType=VARCHAR},
      DEFINE16 = #{define16,jdbcType=VARCHAR},
      DEFINE17 = #{define17,jdbcType=VARCHAR},
      DEFINE18 = #{define18,jdbcType=VARCHAR},
      DEFINE19 = #{define19,jdbcType=VARCHAR}
    where DATA_ID = #{dataId,jdbcType=VARCHAR}
  </update>
  
  <!-- 批量插入项目计划数据 -->
  <insert id="insertOutProjectPlanBatch" parameterType="java.util.List">
		insert into out_project_plan (DATA_ID, XMID, ND, 
	      HTH, XMMC, XMJB, JF, YSND, YSJE,
	      FWDXBM, FWDX, GSBMBM, 
	      GSBMMC, ZYCBM, ZYCMC, 
	      XMLBBM, XMLBMC, ZYLBBM, 
	      ZYLB, FZDWBM, FZDW, 
	      JTFZDWBM, JTFZDW, FZRXM,FZRDH,FZRYX, 
	      JSSXXM, KSSJ, JSSJ, YJSJ, ZYLY, 
	      ZYSX, SJID, LXBJ, YJNR, 
	      JDAP, YJMB, YJYJC,
	      PROJECT_PROPERTY, PROJECT_SCOPE, PROJECT_TYPE,
	      DEFINE1, DEFINE2, DEFINE3, 
	      DEFINE4, DEFINE5, DEFINE6
	      )
	    values
		<foreach collection="list" item="projectPlan" index="index"
			separator=",">
			( #{projectPlan.dataId,jdbcType=VARCHAR}, #{projectPlan.xmid,jdbcType=VARCHAR}, #{projectPlan.nd,jdbcType=VARCHAR}, 
		      #{projectPlan.hth,jdbcType=VARCHAR}, #{projectPlan.xmmc,jdbcType=VARCHAR}, #{projectPlan.xmjb,jdbcType=VARCHAR}, #{projectPlan.jf,jdbcType=VARCHAR}, #{projectPlan.ysnd,jdbcType=VARCHAR}, #{projectPlan.ysje,jdbcType=VARCHAR}, 
		      #{projectPlan.fwdxbm,jdbcType=VARCHAR}, #{projectPlan.fwdx,jdbcType=VARCHAR}, #{projectPlan.gsbmbm,jdbcType=VARCHAR}, 
		      #{projectPlan.gsbmmc,jdbcType=VARCHAR}, #{projectPlan.zycbm,jdbcType=VARCHAR}, #{projectPlan.zycmc,jdbcType=VARCHAR}, 
		      #{projectPlan.xmlbbm,jdbcType=VARCHAR}, #{projectPlan.xmlbmc,jdbcType=VARCHAR}, #{projectPlan.zylbbm,jdbcType=VARCHAR}, 
		      #{projectPlan.zylb,jdbcType=VARCHAR}, #{projectPlan.fzdwbm,jdbcType=VARCHAR}, #{projectPlan.fzdw,jdbcType=VARCHAR}, 
		      #{projectPlan.jtfzdwbm,jdbcType=VARCHAR}, #{projectPlan.jtfzdw,jdbcType=VARCHAR}, #{projectPlan.fzrxm,jdbcType=VARCHAR},  #{projectPlan.fzrdh,jdbcType=VARCHAR}, #{projectPlan.fzryx,jdbcType=VARCHAR},
		      #{projectPlan.jssxxm,jdbcType=VARCHAR}, #{projectPlan.kssj,jdbcType=VARCHAR}, #{projectPlan.jssj,jdbcType=VARCHAR}, #{projectPlan.yjsj,jdbcType=VARCHAR}, #{projectPlan.zyly,jdbcType=VARCHAR}, 
		      #{projectPlan.zysx,jdbcType=VARCHAR}, #{projectPlan.sjid,jdbcType=VARCHAR}, #{projectPlan.lxbj,jdbcType=VARCHAR}, #{projectPlan.yjnr,jdbcType=VARCHAR}, 
		      #{projectPlan.jdap,jdbcType=VARCHAR}, #{projectPlan.yjmb,jdbcType=VARCHAR}, #{projectPlan.yjyjc,jdbcType=VARCHAR}, 
		      #{projectPlan.projectProperty,jdbcType=VARCHAR}, #{projectPlan.projectScope,jdbcType=VARCHAR}, #{projectPlan.projectType,jdbcType=VARCHAR}, 
		      #{projectPlan.define1,jdbcType=VARCHAR}, #{projectPlan.define2,jdbcType=VARCHAR}, #{projectPlan.define3,jdbcType=VARCHAR}, 
		      #{projectPlan.define4,jdbcType=VARCHAR}, #{projectPlan.define5,jdbcType=VARCHAR}, #{projectPlan.define6,jdbcType=VARCHAR} )
		</foreach>
	</insert>
	
	<!-- 直属研究院二级页面（领导），项目计划完成的比率，按照项目类型、资本性费用性来分组 -->
	<select id="getPlanCompleteRateByOldNew" resultType="java.util.Map" parameterType="java.util.HashMap">
		select case when tableB.DEFINE1 = '费用性' then '科研开发类' when tableB.DEFINE1 = '资本性' then '科研装备类' else tableB.DEFINE1 end as define1,PROJECT_PROPERTY as project_scope,count(xmid) as jhqds,
			sum(case when tableB.temId is not null then 1 else 0 end) as sjqds
		from (
			select out_project_info.xmid as temId,out_project_plan.xmid as xmid,out_project_plan.DEFINE1,out_project_plan.PROJECT_PROPERTY
			from out_project_plan left join out_project_info on (out_project_plan.xmid = out_project_info.xmid and out_project_info.PROJECT_TYPE != '1' 
																	and out_project_info.define3='项目管理系统' and out_project_info.ND= '${nd}')
			WHERE
				out_project_plan.ND= '${nd}' 
				and out_project_plan.PROJECT_TYPE != '1'
				and out_project_plan.DEFINE4 = '项目管理系统'
				<if test="define3 != null and define3 != ''">
					and out_project_plan.DEFINE3 like '%${define3}%'
				</if>
				
				group by out_project_plan.xmid
		) as tableB 
		group by tableB.DEFINE1,tableB.PROJECT_PROPERTY
	</select>
	
	<!-- 领导首页-科研投入-各个处室的新开结转情况 -->
	<select id="getPlanMoneyByDepartment" resultType="java.util.Map" parameterType="java.util.HashMap">
		select out_tem_money_decompose.cb as zycmc,out_tem_money_decompose.jfyszjys as ysje,
			   out_tem_money_decompose.jfyszjlht as ysjzje,out_tem_money_decompose.jfyszjxq as ysxkje,
			   IFNULL(tableA.sjzje,'0') as sjzje,IFNULL(tableA.xkMoney,'0') as xkMoney,IFNULL(tableA.jzMoney,'0') as jzMoney
		from out_tem_money_decompose left join (
			select 
			    substr(define10,4) as define10,sum(ysfyxje) as sjzje,
				sum(case when ysnd = '${nd}' and nd = '${nd}' then ysfyxje else 0 end) as xkMoney,
				sum(case when ysnd = '${nd}' and nd &lt; '${nd}' then ysfyxje else 0 end) as jzMoney
			from out_project_info 
			WHERE
				out_project_info.ysnd= '${nd}' 
				<if test="zylbbm != null and zylbbm != ''">
					and find_in_set(out_project_info.zylbbm, '${zylbbm}')
				</if>
				<if test="zycbm != null and zycbm != ''">
					and find_in_set(out_project_info.zycbm, '${zycbm}')
				</if>
				<if test="leaderFlag == null or leaderFlag != '1'.toString()">
					<if test="zycbm != null and zycbm != ''">
						and find_in_set(out_project_info.zycbm, '${zycbm}')
					</if>
					<if test="zycbm == null or zycbm == ''">
						and out_project_info.ND = '1900'
					</if>
				</if>
				and out_project_info.PROJECT_TYPE != '1'
				and define3='项目管理系统' and define2 not like '%休斯顿%' and define2 not like '%中东%' 
				group by out_project_info.define10) as tableA ON (out_tem_money_decompose.cb = tableA.define10)
		where
			out_tem_money_decompose.nd = '${nd}' and cb not like '专项' and cb not like '机动'
	</select>
	
	
	<!-- 直属研究院二级页面（领导），总的签订率-->
	<select id="getPlanTotalCompleteRate" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		select IFNULL(count(XMID),0) as zsl,
			IFNULL(sum(case when tableB.temId is not null then 1 else 0 end),0) as yqht,
			IFNULL(sum(case when tableB.temId is null then 1 else 0 end),0) as wqht,
			IFNULL(round(sum(case when tableB.temId is not null then 1 else 0 end)/count(XMID)*100,2),0) as qdl
		from (
			select out_project_info.xmid as temId,out_project_plan.XMID,out_project_plan.DEFINE1,out_project_plan.PROJECT_SCOPE 
			from out_project_plan left join out_project_info on (out_project_plan.XMID = out_project_info.xmid and out_project_info.PROJECT_TYPE != '1' 
																	and out_project_info.define3 = '项目管理系统' and out_project_info.ND= '${nd}')
			WHERE
				out_project_plan.ND = '${nd}'
				and out_project_plan.PROJECT_TYPE != '1'
				and out_project_plan.DEFINE4 = '项目管理系统'
				<if test="define3 != null and define3 != ''">
					and out_project_plan.DEFINE3 like '%${define3}%'
				</if>
				<if test="zylbbm != null and zylbbm != ''">
					and find_in_set(out_project_plan.zylbbm, '${zylbbm}')
				</if>
				<if test="zycbm != null and zycbm != ''">
					and find_in_set(out_project_plan.zycbm, '${zycbm}')
				</if>
				<if test="leaderFlag == null or leaderFlag != '1'.toString()">
					<if test="zycbm != null and zycbm != ''">
						and find_in_set(out_project_plan.zycbm, '${zycbm}')
					</if>
					<if test="zycbm == null or zycbm == ''">
						and out_project_plan.ND = '1900'
					</if>
				</if>
			group by out_project_plan.XMID
		) as tableB
	</select>
	
	<!-- 直属研究院二级页面（领导），总的科研投入，数据来源于hana-->
	<select id="getTotalInvestMoneyWithHana" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		select round(sum(K0DMBTR)/10000,4) as investMoney
		from expenses_pay_hana
		where 
			G0GJAHR = '${nd}'
			and sts = '1'
	</select>
	
	<!-- 直属研究院二级页面（领导），各个院的合同签订率-->
	<select id="getPlanCompleteRateByInstitute" resultType="java.util.Map" parameterType="java.util.HashMap">
		select SUBSTR(tableB.DEFINE2 FROM 6) as define2,count(xmid) as zsl,
			sum(case when tableB.temId is not null then 1 else 0 end) as yqhtzj,
			sum(case when tableB.temId is null then 1 else 0 end) as wqhtzj,
			round(sum(case when tableB.temId is not null then 1 else 0 end)/count(xmid)*100,2) as qdlzj,
			round(sum(case when tableB.temId is not null and DEFINE1 = '资本性' then 1 else 0 end)/sum(case when DEFINE1 = '资本性' then 1 else 0 end)*100,2) as zbxRate,
			round(sum(case when tableB.temId is not null and DEFINE1 = '费用性' then 1 else 0 end)/sum(case when DEFINE1 = '费用性' then 1 else 0 end)*100,2) as fyxRate,
			sum(case when tableB.temId is not null and define1 = '费用性' then 1 else 0 end) as fyxsjsl,
			sum(case when tableB.temId is not null and define1 = '资本性' then 1 else 0 end) as zbxsjsl
		from (
			select out_project_info.xmid as temId,out_project_plan.xmid as xmid,out_project_plan.DEFINE1,out_project_plan.DEFINE2
			from out_project_plan left join out_project_info on (out_project_plan.xmid = out_project_info.xmid and out_project_info.PROJECT_TYPE != '1' 
																 and out_project_info.define3 = '项目管理系统' 
																 and out_project_info.type_flag like '%直属研究院%'
																 and out_project_info.ND= '${nd}')
			WHERE
				out_project_plan.ND= '${nd}' 
				<if test="zylbbm != null and zylbbm != ''">
					and find_in_set(out_project_plan.zylbbm, '${zylbbm}')
				</if>
				<if test="zycbm != null and zycbm != ''">
					and find_in_set(out_project_plan.zycbm, '${zycbm}')
				</if>
				<if test="leaderFlag == null or leaderFlag != '1'.toString()">
					<if test="zycbm != null and zycbm != ''">
						and find_in_set(out_project_plan.zycbm, '${zycbm}')
					</if>
					<if test="zycbm == null or zycbm == ''">
						and out_project_plan.ND = '1900'
					</if>
				</if>
				and out_project_plan.DEFINE3 like '%直属研究院%'
				and out_project_plan.PROJECT_TYPE != '1'
				and out_project_plan.define4 = '项目管理系统'
				group by out_project_plan.xmid,out_project_plan.YSND,out_project_plan.DEFINE2
		) as tableB 
		group by tableB.DEFINE2
		ORDER BY tableB.DEFINE2
	</select>
	
	<!-- 直属研究院二级页面（领导），各个院的合同预算金额-->
	<select id="getPlanMoneyCompleteRateByInstitute" resultType="java.util.Map" parameterType="java.util.HashMap">
		select define2,zsjje, round((out_tem_money_total.zbx_money+out_tem_money_total.fyx_money), 4) as zysje,
				round((out_tem_money_total.zbx_money+out_tem_money_total.fyx_money)-zsjje,4) as wxdje,
				round(zsjje/(out_tem_money_total.zbx_money+out_tem_money_total.fyx_money)*100,4) as jeRate
		from (
			select 
						 SUBSTR(out_project_info.define2 FROM 6) as define2,
						 round(sum(ysje),4) as zsjje
			from out_project_info
			WHERE
				out_project_info.ysnd= '${nd}' 
				<if test="zylbbm != null and zylbbm != ''">
					and find_in_set(out_project_info.zylbbm, '${zylbbm}')
				</if>
				<if test="zycbm != null and zycbm != ''">
					and find_in_set(out_project_info.zycbm, '${zycbm}')
				</if>
				<if test="leaderFlag == null or leaderFlag != '1'.toString()">
					<if test="zycbm != null and zycbm != ''">
						and find_in_set(out_project_info.zycbm, '${zycbm}')
					</if>
					<if test="zycbm == null or zycbm == ''">
						and out_project_info.ND = '1900'
					</if>
				</if>
				and out_project_info.PROJECT_TYPE != '1' and out_project_info.type_flag like '%直属研究院%'
				and define3='项目管理系统'
				group by out_project_info.define2) as tableA LEFT JOIN out_tem_money_total ON (tableA.define2 = out_tem_money_total.show_ali and out_tem_money_total.nd = '${nd}')
	</select>
	
	<!-- 首页-直属研究院，项目计划完成的比率，按照资本性费用性来分组 -->
	<select id="getPlanCompleteRateByPlanType" resultType="java.util.Map" parameterType="java.util.HashMap">
		select tableB.DEFINE1 as define1,count(xmid) as jhqds,
			sum(case when tableB.temId is not null then 1 else 0 end) as sjqds,
			round(sum(case when tableB.temId is not null then 1 else 0 end)/count(xmid)*100,2) as htqdl
		from (
			select out_project_info.xmid as temId,out_project_plan.xmid as xmid,out_project_plan.DEFINE1
			from out_project_plan left join out_project_info on (out_project_plan.xmid = out_project_info.xmid and out_project_info.PROJECT_TYPE != '1' 
																	and out_project_info.define3 = '项目管理系统' and out_project_info.ND= '${nd}')
			WHERE
				out_project_plan.ND= '${nd}' 
				<if test="zylbbm != null and zylbbm != ''">
				    and find_in_set(out_project_plan.zylbbm, '${zylbbm}')
			    </if>
			    <if test="zycbm != null and zycbm != ''">
				    and find_in_set(out_project_plan.zycbm, '${zycbm}')
			    </if>
			    <if test="leaderFlag == null or leaderFlag != '1'.toString()">
				    <if test="zycbm != null and zycbm != ''">
					    and find_in_set(out_project_plan.zycbm, '${zycbm}')
				    </if>
				    <if test="zycbm == null or zycbm == ''">
					    and ND = '1900'
				    </if>
			    </if>
				and out_project_plan.PROJECT_TYPE != '1'
				and out_project_plan.define4 = '项目管理系统'
				group by out_project_plan.xmid
		) as tableB 
		group by tableB.DEFINE1
	</select>
	
	
	<!-- 首页-直属研究院，项目计划完成的比率, 实际的hana报销费用，按照研究院来分组 -->
	<select id="getPlanCompleteRateByPlanTypeForHana" resultType="java.util.Map" parameterType="java.util.HashMap">
		select round(sum(K0DMBTR)/10000,4) as hanaMoney,tableB.* from expenses_pay_hana,(
			select define2,define3,zsjje, round((out_tem_money_total.zbx_money+out_tem_money_total.fyx_money), 4) as zysje,
							round((out_tem_money_total.zbx_money+out_tem_money_total.fyx_money)-zsjje,4) as wxdje,
							round(zsjje/(out_tem_money_total.zbx_money+out_tem_money_total.fyx_money)*100,4) as jeRate,
			        case when define2 = '勘探院' then '0033550000'  
			             when define2 = '工程院' then '0035800000' 
			             when define2 = '物探院' then '0033550006' 
			             when define2 = '石科院' then '0033600000' 
			             when define2 = '大连院' then '0033700000,0034880000' 
			             when define2 = '北化院' then '0033650000' 
			             when define2 = '上海院' then '0033750000' 
			             when define2 = '安工院' then '0033800000' else '' end as hanaCode
					from (
						select 
									 SUBSTR(out_project_info.define2 FROM 6) as define2, out_project_info.define2 as define3,
									 round(sum(ysje),4) as zsjje
						from out_project_info
						WHERE
							out_project_info.ysnd= '${nd}' 
							and out_project_info.PROJECT_TYPE != '1' and out_project_info.type_flag like '%直属研究院%'
							and define3='项目管理系统'
							group by out_project_info.define2) as tableA LEFT JOIN out_tem_money_total ON (tableA.define2 = out_tem_money_total.show_ali and out_tem_money_total.nd = '${nd}')
			) tableB 
		WHERE 
		find_in_set(expenses_pay_hana.G0LIFNR,tableB.hanaCode)  
		and STRCMP(left(G0AUGDT, 6), '201801') &gt; -1
		and STRCMP(left(G0AUGDT, 6), '201812') &lt; 1
		GROUP BY tableB.hanaCode
		ORDER BY tableB.define3
	</select>
	
	<!-- 首页-直属研究院，项目计划完成的比率, 实际的hana报销费用，按照月份分组 -->
	<select id="getPlanCompleteRateByPlanTypeForHanaMonth" resultType="java.util.Map" parameterType="java.util.HashMap">
		select tableA.*,(out_tem_money_total.zbx_money+out_tem_money_total.fyx_money) as zysje 
		from (
			select round(sum(K0DMBTR)/10000,4) as hanaMoney, left(G0AUGDT, 6) as yearMonth
			from expenses_pay_hana
			where 
			G0LIFNR in ('0033550000','0035800000','0033550006','0033600000','0033700000','0034880000','0033650000','0033750000','0033800000') 
			and STRCMP(left(G0AUGDT, 6), '201801') &gt; -1
			and STRCMP(left(G0AUGDT, 6), '201812') &lt; 1
			GROUP BY left(G0AUGDT, 6)
			ORDER BY left(G0AUGDT, 6)
		) tableA LEFT JOIN out_tem_money_total ON (left(yearMonth, 4) = out_tem_money_total.nd AND out_tem_money_total.show_ali = '直属研究院')
	</select>
	
	<!-- 领导首页-科研合同，项目计划完成的比率，按照直属研究所、分子公司等9个来分组 -->
	<select id="getPlanCompleteRateByCompanyType" resultType="java.util.Map" parameterType="java.util.HashMap">
		select SUBSTR(tableB.DEFINE3 FROM 4) as define3,count(xmid) as jhqds,
			sum(case when tableB.temId is not null then 1 else 0 end) as sjqds,
			round(sum(case when tableB.temId is not null then 1 else 0 end)/count(xmid)*100,4) as qdbl,
			round(sum(case when tableB.xmlbbm1 is not null then jf1 else 0 end),4) as zysje,
			round(sum(case when tableB.xmlbbm2 is not null then jf2 else 0 end),4) as zsjje,
			round(sum(case when tableB.xmlbbm2 is not null then jf2 else 0 end)/sum(case when tableB.xmlbbm1 is not null then jf1 else 0 end)*100,4) as zRate,

			round(sum(case when tableB.xmlbbm1 is not null and tableB.xmlbbm1='KYZB' then jf1 else 0 end),4) as zbxysje,
			round(sum(case when tableB.xmlbbm2 is not null and tableB.xmlbbm2='KYZB' then jf2 else 0 end),4) as zbxsjje,
			round(sum(case when tableB.xmlbbm2 is not null and tableB.xmlbbm2='KYZB' then jf2 else 0 end)/sum(case when tableB.xmlbbm1 is not null and tableB.xmlbbm1='KYZB' then jf1 else 0 end)*100,4) as zbxRate,
			
			round(sum(case when tableB.xmlbbm1 is not null and tableB.xmlbbm1!='KYZB' then jf1 else 0 end),4) as fyxysje,
			round(sum(case when tableB.xmlbbm2 is not null and tableB.xmlbbm2!='KYZB' then jf2 else 0 end),4) as fyxsjje,
			round(sum(case when tableB.xmlbbm2 is not null and tableB.xmlbbm2!='KYZB' then jf2 else 0 end)/sum(case when tableB.xmlbbm1 is not null and tableB.xmlbbm1!='KYZB' then jf1 else 0 end)*100,4) as fyxRate

		from (
			select out_project_info.xmid as temId,out_project_plan.xmid as xmid,case when out_project_plan.DEFINE3 is null then 'A10其他' else out_project_plan.DEFINE3 end as DEFINE3,
						 out_project_plan.jf as jf1,out_project_plan.jf as jf2,out_project_plan.xmlbbm as xmlbbm1,out_project_info.xmlbbm as xmlbbm2,out_project_plan.DEFINE12
			from out_project_plan left join out_project_info on (out_project_plan.xmid = out_project_info.xmid and out_project_info.PROJECT_TYPE != '1' 
																	and out_project_info.define3 = '项目管理系统' and out_project_info.ND= '${nd}')
			WHERE
				out_project_plan.ND= '${nd}' 
				<if test="zylbbm != null and zylbbm != ''">
				    and find_in_set(out_project_plan.zylbbm, '${zylbbm}')
			    </if>
			    <if test="zycbm != null and zycbm != ''">
				    and find_in_set(out_project_plan.zycbm, '${zycbm}')
			    </if>
			    <if test="leaderFlag == null or leaderFlag != '1'.toString()">
				    <if test="zycbm != null and zycbm != ''">
					    and find_in_set(out_project_plan.zycbm, '${zycbm}')
				    </if>
				    <if test="zycbm == null or zycbm == ''">
					    and ND = '1900'
				    </if>
			    </if>
				and out_project_plan.PROJECT_TYPE != '1'
				and out_project_plan.define4 = '项目管理系统'
				group by out_project_plan.xmid,out_project_plan.define2,out_project_plan.define8
		) as tableB  
		group by tableB.define3
		ORDER BY tableB.DEFINE3
	</select>
	
	<!-- 领导首页-科研合同，项目计划完成的比率，按照直属研究所、分子公司等9个来分组 -->
	<select id="getPlanMoneyCompleteRateByCompanyType" resultType="java.util.Map" parameterType="java.util.HashMap">
		select tableC.define3,tableC.zbxsjje,tableC.fyxsjje,tableC.zsjje,
			 IFNULL(tableC.zysje,0) zysje,
			 IFNULL(tableC.zbxysje,0) zbxysje,
			 IFNULL(tableC.fyxysje,0) fyxysje,
			 tableC.zbxRate,tableC.fyxRate,tableC.zRate
		FROM (
			SELECT tableB.define3,tableB.zbxsjje,tableB.fyxsjje, tableB.zbxsjje+tableB.fyxsjje as zsjje,
			tableD.xmjf_zbx+tableD.xmjf_fyx as zysje,
			tableD.xmjf_zbx as zbxysje,tableD.xmjf_fyx as fyxysje,
			round(tableB.zbxsjje/tableD.xmjf_zbx *100, 4) zbxRate,
			round(tableB.fyxsjje/tableD.xmjf_fyx *100, 4) fyxRate,
			round((tableB.zbxsjje+tableB.fyxsjje)/(tableD.xmjf_zbx+tableD.xmjf_fyx) *100, 4) zRate
			FROM (			
				select SUBSTR(tableA.DEFINE3 FROM 4) as define3, tableA.DEFINE3 as temOrder, zbxsjje, fyxsjje from (
						select 
							 case when out_project_info.type_flag is null then 'L其他' else out_project_info.type_flag end as DEFINE3,
							 round(sum(yszbxje),4) as zbxsjje,
							 round(sum(ysfyxje),4) as fyxsjje
						from out_project_info 
						WHERE
							out_project_info.ysnd= '${nd}' 
							<if test="zylbbm != null and zylbbm != ''">
								and find_in_set(out_project_info.zylbbm, '${zylbbm}')
							</if>
							<if test="zycbm != null and zycbm != ''">
								and find_in_set(out_project_info.zycbm, '${zycbm}')
							</if>
							<if test="leaderFlag == null or leaderFlag != '1'.toString()">
								<if test="zycbm != null and zycbm != ''">
									and find_in_set(out_project_info.zycbm, '${zycbm}')
								</if>
								<if test="zycbm == null or zycbm == ''">
									and out_project_info.ND = '1900'
								</if>
							</if>
							and out_project_info.PROJECT_TYPE != '1'
							and define3='项目管理系统' and ysje is not null
							group by out_project_info.type_flag
						) as tableA
				) as tableB LEFT JOIN (
									SELECT
										nd,
										case when display_name = '集团单位' then '股份付集团' when display_name = '休斯顿研发中心' then '休斯顿' when display_name = '中东研发中心' then '中东' else display_name end as display_name,
										xmjf_total,
										xmjf_zbx,
										xmjf_fyx
									FROM
										out_tem_money_stock_total
									WHERE
										(
											budget_info_id IN (
												SELECT
													data_id
												FROM
													out_tem_budget_info
												WHERE
													(
														del_flag = '0'
														AND audit_status = '3'
														AND budget_type = '103'
														AND nd  = '${nd}'
														AND `level` = '0'
													)
											)
											AND del_flag = '0'
											AND item_type = '1'
										)
									UNION ALL
										SELECT
											nd,
											'集团公司' AS display_name,
											sum(total) AS xmjf_total,
											0 AS xmjf_zbx,
											sum(total) AS xmjf_fyx
										FROM
											out_tem_money_group_total
										WHERE
											(
												del_flag = '0'
												AND budget_info_id IN (
													SELECT
														data_id
													FROM
														out_tem_budget_info
													WHERE
														(
															del_flag = '0'
															AND audit_status = '3'
															AND budget_type = '101'
															AND nd  = '${nd}'
															AND `level` = '0'
														)
												)
												AND LEVEL = '0'
												AND nd  = '${nd}'
											)
										UNION ALL
											SELECT
												nd,
												'资产公司' AS display_name,
												sum(xmjf) AS xmjf_total,
												0 AS xmjf_zbx,
												sum(xmjf) AS xmjf_fyx
											FROM
												out_tem_money_asset_total
											WHERE
												(
													del_flag = '0'
													AND budget_info_id IN (
														SELECT
															data_id
														FROM
															out_tem_budget_info
														WHERE
															(
																del_flag = '0'
																AND audit_status = '3'
																AND budget_type = '102'
																AND nd = '${nd}'
																AND `level` = '0'
															)
													)
													AND LEVEL = '0'
												)
										
									) as tableD ON (tableB.define3 = tableD.display_name and tableD.nd = '${nd}')
			ORDER BY tableB.temOrder
		) AS tableC
	</select>
	
	<!-- 领导首页-科研合同，科研合同签订率清单-->
	<select id="getPlanCompleteRateDetails" resultType="java.util.Map" parameterType="java.util.HashMap">
		select SUBSTR(tableB.DEFINE3 FROM 4) as define3,SUBSTR(tableB.DEFINE2 FROM 6) as define2,count(xmid) as zsl,
			sum(case when tableB.temId is not null then 1 else 0 end) as yqhtzj,
			sum(case when tableB.temId is null then 1 else 0 end) as wqhtzj,
			round(sum(case when tableB.temId is not null then 1 else 0 end)/count(xmid)*100,2) as qdlzj
		from (
			select out_project_info.xmid as temId,out_project_plan.xmid as xmid,IFNULL(out_project_plan.DEFINE2,'J0100其他') as DEFINE2,IFNULL(out_project_plan.DEFINE3,'J00其他') as DEFINE3
			from out_project_plan left join out_project_info on (out_project_plan.xmid = out_project_info.xmid and (out_project_info.PROJECT_TYPE= '0' or out_project_info.PROJECT_TYPE= '2') and out_project_info.ND= '${nd}'  and out_project_info.define3 = '项目管理系统')
			WHERE
				out_project_plan.ND = '${nd}' 
				<if test="zylbbm != null and zylbbm != ''">
				    and find_in_set(out_project_plan.zylbbm, '${zylbbm}')
			    </if>
			    <if test="zycbm != null and zycbm != ''">
				    and find_in_set(out_project_plan.zycbm, '${zycbm}')
			    </if>
			    <if test="leaderFlag == null or leaderFlag != '1'.toString()">
				    <if test="zycbm != null and zycbm != ''">
					    and find_in_set(out_project_plan.zycbm, '${zycbm}')
				    </if>
				    <if test="zycbm == null or zycbm == ''">
					    and ND = '1900'
				    </if>
			    </if>
				and (out_project_plan.PROJECT_TYPE= '0' or out_project_plan.PROJECT_TYPE= '2')
				and out_project_plan.define4 = '项目管理系统'
				group by out_project_plan.xmid,out_project_plan.define2,out_project_plan.define8
		) as tableB 
		group by tableB.DEFINE3,tableB.DEFINE2
		order by tableB.DEFINE3
	</select>
	
	<!-- 项目计划数据，涉及项目预算、项目计划详情等相关的查询时调用 -->
	<select id="selectProjectPlanByCond" resultType="com.pcitc.base.stp.out.OutProjectPlan" parameterType="java.util.HashMap">
		select tableA.DEFINE1,tableA.DEFINE2,tableA.DEFINE3,GROUP_CONCAT(tableA.DEFINE8) as define8,
			   tableA.DEFINE9,tableA.DEFINE10,tableA.DEFINE11,tableA.DEFINE12,tableA.XMMC,tableA.YSND,
			   tableA.JF,sum(tableA.YSJE) as YSJE,
			   sum(tableA.YSZBXJE) as YSZBXJE,sum(tableA.YSFYXJE) as YSFYXJE,
			   tableA.PROJECT_PROPERTY as projectProperty,tableA.PROJECT_SCOPE as projectScope,tableA.FZDW,tableA.ZYLB,
			   tableA.ND,tableA.HTH,tableA.ZYCMC,
			   case when tableA.qdbz is null then '未签订' else '已签订' end as qdbz
		from (
			select out_project_plan.DEFINE1,out_project_plan.DEFINE9,
				   SUBSTR(out_project_plan.DEFINE2 FROM 6) as DEFINE2,
				   SUBSTR(out_project_plan.DEFINE3 FROM 4) as DEFINE3,
				   SUBSTR(out_project_plan.DEFINE10 FROM 4) as DEFINE10,
				   SUBSTR(out_project_plan.DEFINE11 FROM 2) as DEFINE11,
				   SUBSTR(out_project_plan.DEFINE12 FROM 4) as DEFINE12,
				   SUBSTR(out_project_plan.DEFINE13 FROM 2) as DEFINE13,
				   SUBSTR(out_project_plan.FZDWUNITCW FROM 6) as FZDWUNITCW,
				   SUBSTR(out_project_plan.FZDWUNIT FROM 4) as FZDWUNIT,
				   out_project_plan.zycbm,out_project_plan.zylbbm,
				   out_project_plan.XMID,out_project_plan.XMMC,out_project_plan.YSND,
				   out_project_plan.JF,out_project_plan.YSJE,
				   out_project_plan.YSZBXJE,out_project_plan.YSFYXJE,
				   out_project_plan.PROJECT_PROPERTY,out_project_plan.PROJECT_SCOPE,out_project_plan.FZDW,out_project_plan.ZYLB,
			       out_project_plan.ND,out_project_plan.DEFINE8,out_project_plan.HTH,
			       out_project_plan.ZYCMC,out_project_info.xmid as qdbz
			from out_project_plan left join out_project_info on (out_project_plan.xmid = out_project_info.xmid 
																 and out_project_plan.YSND= out_project_info.YSND 
																 and out_project_plan.define8 = out_project_info.define8
																 and out_project_info.PROJECT_TYPE != '1'
																 and out_project_info.define3 = '项目管理系统')	              
			WHERE
				   out_project_plan.PROJECT_TYPE != '1'
				   and out_project_plan.define4 = '项目管理系统'
				) as tableA
		WHERE 
			1 = 1
			<if test="nd != null and nd != ''">
				and tableA.nd = #{nd}
			</if>
			<if test="ysnd != null and ysnd != ''">
				and tableA.ysnd = #{ysnd}
			</if>
			<if test="hth != null and hth != ''">
				and tableA.hth like '%${hth}%'
			</if>
			<if test="xmmc != null and xmmc != ''">
				and tableA.xmmc like '%${xmmc}%'
			</if>
			<if test="ktlx != null and ktlx == '新开课题' and nd != null and nd != ''">
				and tableA.ysnd = #{nd} and tableA.nd = #{nd} 
			</if>
			<if test="ktlx != null and ktlx == '结转课题' and ysnd != null and ysnd != ''">
				and tableA.ysnd = #{ysnd} and tableA.nd &lt; #{ysnd} 
			</if>
			<if test="qdbz != null and qdbz == '已签订'">
				and tableA.qdbz is not null
			</if>
			<if test="qdbz != null and qdbz == '未签订'">
				and tableA.qdbz is null
			</if>
			<if test="define1 != null">
				and (
				<foreach collection="define1" item="define1" index="index" separator=" or ">
					tableA.define1 like '%${define1}%'
				</foreach>
				)
			</if>
			
			<!-- define12, 财务相关的牵头单位，所以查询define13 -->
			<if test="fzdwflag != null and fzdwflag == '牵头单位'">
				<if test="define12 != null">
					and (
					<foreach collection="define12" item="define12" index="index" separator=" or ">
						tableA.define13 like '%${define12}%'
					</foreach>
					)
				</if>
				<if test="define2 != null">
					and (
					<foreach collection="define2" item="define2" index="index" separator=" or ">
						tableA.fzdwunitcw like '%${define2}%'
					</foreach>
					)
				</if>
			</if>
			
			<!-- define12, 财务相关的承担单位，所以查询define3 -->
			<if test="fzdwflag == null or fzdwflag == '' or fzdwflag == '承担单位'">
				<if test="define12 != null">
					and (
					<foreach collection="define12" item="define12" index="index" separator=" or ">
						tableA.DEFINE3 like '%${define12}%'
					</foreach>
					)
				</if>
				<if test="define2 != null">
					and (
					<foreach collection="define2" item="define2" index="index" separator=" or ">
						tableA.define2 like '%${define2}%'
					</foreach>
					)
				</if>
			</if>
			
			<if test="define10 != null">
				and (
				<foreach collection="define10" item="define10" index="index" separator=" or ">
					tableA.define10 like '%${define10}%'
				</foreach>
				)
			</if>
			<if test="define9 != null">
				and (
				<foreach collection="define9" item="define9" index="index" separator=" or ">
					tableA.define9 like '%${define9}%'
				</foreach>
				)
			</if>
			<if test="define11 != null">
				and (
				<foreach collection="define11" item="define11" index="index" separator=" or ">
					tableA.define11 like '%${define11}%'
				</foreach>
				)
			</if>
			
			<if test="project_property != null">
				and (
				<foreach collection="project_property" item="project_property" index="index" separator=" or ">
					tableA.project_property like '%${project_property}%'
				</foreach>
				)
			</if>
			<if test="projectScope != null">
				and tableA.project_scope like '%${projectScope}%'
			</if>
			<if test="zylb != null">
				and (
				<foreach collection="zylb" item="zylb" index="index" separator=" or ">
					tableA.zylb like '%${zylb}%'
				</foreach>
				)
			</if>
			<if test="type_flag != null">
				and (
				<foreach collection="type_flag" item="type_flag" index="index" separator=" or ">
					tableA.DEFINE3 like '%${type_flag}%'
				</foreach>
				)
			</if>
			<if test="zycmc != null">
				and (
				<foreach collection="zycmc" item="zycmc" index="index" separator=" or ">
					tableA.zycmc like '%${zycmc}%'
				</foreach>
				)
			</if>
			
			<!-- 数据控制 -->
			<if test="zylbbm != null and zylbbm != ''">
				and find_in_set(tableA.zylbbm, '${zylbbm}')
			</if>
			<if test="zycbm != null and zycbm != ''">
				and find_in_set(tableA.zycbm, '${zycbm}')
			</if>
			<if test="leaderFlag == null or leaderFlag != '1'.toString()">
				<if test="zycbm != null and zycbm != ''">
					and find_in_set(tableA.zycbm, '${zycbm}')
				</if>
				<if test="zycbm == null or zycbm == ''">
					and tableA.ND = '1900'
				</if>
			</if>
			<!-- 数据控制 -->
			
			<if test="groupFlag != null and groupFlag != ''">
				<if test="groupFlag != null and groupFlag != ''">
					GROUP BY ${groupFlag}
				</if>
				<if test="groupFlag == null or groupFlag == ''">
					GROUP BY XMID
				</if>
			</if>
			<if test="groupFlag == null">
				GROUP BY XMID
			</if>
			<if test="orderKey != null and orderKey != ''">
				<if test="orderType != null and orderType != ''">
					order by ${orderKey} ${orderType}
				</if>
				<if test="orderType == null or orderType == ''">
					order by ${orderKey} desc
				</if>
			</if>
			<if test="orderKey == null">
				order by tableA.hth desc, tableA.define10
			</if>
			
	</select>
	
	
	<!-- 全生命周期查询，计划为起点 -->
	<select id="selectProjectCycleByCondition" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		select tableB.*, expenses_pay_hana.G0AUGDT from (
			select tableA.*,expenses_bills_pay.billCode,sum(expenses_bills_pay.payAmount) as payAmount from (
				select out_project_plan.XMMC,out_project_plan.XMID,out_project_plan.ND,out_project_plan.FWDX,out_project_plan.XMLBMC,out_project_plan.ZYLB,
					   out_project_plan.FZDW,out_project_plan.FZRXM,out_project_plan.YJSJ,out_project_plan.HTH,
					   out_project_info.xmid as contractFlag,out_project_info.kssj,out_project_info.jf
				from out_project_plan left join out_project_info on (out_project_plan.XMID = out_project_info.xmid 
																	 and out_project_info.PROJECT_TYPE != '1'
																	 and out_project_info.define3 = '项目管理系统')	              
				WHERE
					   out_project_plan.define4 = '项目管理系统'
					   <if test="showType != null and showType != ''.toString() ">
					   	   and out_project_plan.PROJECT_PROPERTY = '${showType}'
					   </if>
					   <if test="xmlb != null and xmlb == '科研装备' ">
					   	   and out_project_plan.XMLBMC = '${xmlb}'
					   </if>
					   <if test="xmlb != null and xmlb == '非科研装备' ">
					   	   and out_project_plan.XMLBMC != '科研装备'
					   </if>
					   <if test="startDate != null and startDate != ''.toString() ">
					   	   and STRCMP(out_project_plan.KSSJ, ${orderKey}) > 0
					   </if>
				group by out_project_plan.XMID
				<if test="orderKey != null and orderKey != ''">
					<if test="orderType != null and orderType != ''">
						order by ${orderKey} ${orderType}
					</if>
					<if test="orderType == null or orderType == ''">
						order by ${orderKey} desc
					</if>
				</if>
				<if test="orderKey == null">
					order by out_project_plan.hth desc, out_project_plan.define10
				</if>
			) as tableA left join expenses_bills_pay on (tableA.HTH = expenses_bills_pay.bak1 
			                                             and expenses_bills_pay.bak1 is not null
														 and tableA.HTH is not null)
			group by tableA.XMID) as tableB left join expenses_pay_hana on (tableB.billCode = expenses_pay_hana.G0ZECSID AND tableB.billCode IS NOT NULL)
		GROUP BY tableB.XMID
		
			
	</select>
	
	<!-- 项目的详情：合同信息 -->
	<select id="getScienceProcessDetails" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		select nd,hth,xmmc,ysnd,ysje,zylb,fzdw,zycmc,define8
		from out_project_info
		where 
			xmid = ${xmid}
			and out_project_info.define3 = '项目管理系统'
		order by out_project_info.ysnd desc, out_project_info.hth, out_project_info.define8
	</select>
	
	<!-- 合同付款详情 -->
	<select id="getContractPayDetails" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		select expenses_bills_pay.suppName,expenses_bills_pay.suppCode,expenses_bills_pay.payAmount,expenses_bills_pay.payModeName,expenses_bills_pay.billCode,
			   max(expenses_pay_hana.G0AUGDT) as G0AUGDT
		from expenses_bills_pay left join expenses_pay_hana on (expenses_bills_pay.billCode = expenses_pay_hana.G0ZECSID)
		where 
			expenses_bills_pay.sts = '1'
			<if test="hth != null">
				and (
				<foreach collection="hth" item="hth" index="index" separator=" or ">
					expenses_bills_pay.bak1 like '%${hth}%'
				</foreach>
				)
			</if>
			and expenses_bills_pay.billCode IS NOT NULL
		group by expenses_bills_pay.data_id
		order by expenses_bills_pay.billCode desc
	</select>
	
	<!-- 合同成果详情 -->
	<select id="getContractAppraisalDetails" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		select cgmc,sqjddw,sqdjh,cglx,zy,jdh,hth,xmmc
		from out_appraisal
		where 
			out_appraisal.status = '1'
			<if test="hth != null">
				and (
				<foreach collection="hth" item="hth" index="index" separator=" or ">
					out_appraisal.hth like '%${hth}%'
				</foreach>
				)
			</if>
		group by out_appraisal.data_id
	</select>
	
	<!-- 项目奖励信息 -->
	<select id="getProjectRewardDetails" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		select xmbh,nd,xmmc,sbdw,sbjz,xkfl,psdj,sbrq,jddw
		from out_reward
		where 
			xmid = ${xmid}
		order by out_reward.xmbh desc
	</select>
</mapper>