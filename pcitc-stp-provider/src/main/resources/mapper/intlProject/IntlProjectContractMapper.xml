<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pcitc.mapper.IntlProject.IntlProjectContractMapper">
  <resultMap id="BaseResultMap" type="com.pcitc.base.stp.IntlProject.IntlProjectContract">
    <id column="contract_id" jdbcType="VARCHAR" property="contractId" />
    <result column="contract_no" jdbcType="VARCHAR" property="contractNo" />
    <result column="sign_date" jdbcType="VARCHAR" property="signDate" />
    <result column="sign_address" jdbcType="VARCHAR" property="signAddress" />
    <result column="project_id" jdbcType="VARCHAR" property="projectId" />
    <result column="contract_content" jdbcType="VARCHAR" property="contractContent" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="update_time" jdbcType="VARCHAR" property="updateTime" />
    <result column="creater" jdbcType="VARCHAR" property="creater" />
    <result column="start_date" jdbcType="VARCHAR" property="startDate" />
    <result column="end_date" jdbcType="VARCHAR" property="endDate" />
    <result column="secrecy_times" jdbcType="VARCHAR" property="secrecyTimes" />
    <result column="data_uuid" jdbcType="VARCHAR" property="dataUuid" />
    <result column="flow_agreement_review" jdbcType="INTEGER" property="flowAgreementReview" />
    <result column="flow_technology_review" jdbcType="INTEGER" property="flowTechnologyReview" />
    <result column="flow_knowledge_review" jdbcType="INTEGER" property="flowKnowledgeReview" />
    <result column="flow_comprehensive_review" jdbcType="INTEGER" property="flowComprehensiveReview" />
    <result column="del_flag" jdbcType="INTEGER" property="delFlag" />
    <result column="append_files" jdbcType="VARCHAR" property="appendFiles" />
    <result column="contract_status" jdbcType="INTEGER" property="contractStatus" />
    <result column="chinese_contract_company" jdbcType="VARCHAR" property="chineseContractCompany" />
    <result column="foreign_contract_company" jdbcType="VARCHAR" property="foreignContractCompany" />
    <result column="company_introduction" jdbcType="VARCHAR" property="companyIntroduction" />
    <result column="company_advantage" jdbcType="VARCHAR" property="companyAdvantage" />
    <result column="project_target" jdbcType="VARCHAR" property="projectTarget" />
    <result column="research_content" jdbcType="VARCHAR" property="researchContent" />
    <result column="person_study" jdbcType="VARCHAR" property="personStudy" />
    <result column="result_status" jdbcType="VARCHAR" property="resultStatus" />
    <result column="unit_id" jdbcType="VARCHAR" property="unitId" />
    <result column="country" jdbcType="VARCHAR" property="country" />
    <result column="foreign_money" jdbcType="DOUBLE" property="foreignMoney" />
    <result column="rmb_money" jdbcType="DOUBLE" property="rmbMoney" />
    <result column="agreement_start_date" jdbcType="VARCHAR" property="agreementStartDate" />
    <result column="agreement_end_date" jdbcType="VARCHAR" property="agreementEndDate" />
    <result column="secrecy_start_date" jdbcType="VARCHAR" property="secrecyStartDate" />
    <result column="secrecy_end_date" jdbcType="VARCHAR" property="secrecyEndDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    contract_id, contract_no, sign_date, sign_address, project_id, contract_content, 
    create_time, update_time, creater, start_date, end_date, secrecy_times, data_uuid, 
    flow_agreement_review, flow_technology_review, flow_knowledge_review, flow_comprehensive_review, 
    del_flag, append_files, contract_status, chinese_contract_company, foreign_contract_company, 
    company_introduction, company_advantage, project_target, research_content, person_study, 
    result_status, unit_id, country, foreign_money, rmb_money, agreement_start_date, 
    agreement_end_date, secrecy_start_date, secrecy_end_date
  </sql>
  <select id="selectByExample" parameterType="com.pcitc.base.stp.IntlProject.IntlProjectContractExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from intl_project_contract
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from intl_project_contract
    where contract_id = #{contractId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from intl_project_contract
    where contract_id = #{contractId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.pcitc.base.stp.IntlProject.IntlProjectContractExample">
    delete from intl_project_contract
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pcitc.base.stp.IntlProject.IntlProjectContract">
    insert into intl_project_contract (contract_id, contract_no, sign_date, 
      sign_address, project_id, contract_content, 
      create_time, update_time, creater, 
      start_date, end_date, secrecy_times, 
      data_uuid, flow_agreement_review, flow_technology_review, 
      flow_knowledge_review, flow_comprehensive_review, 
      del_flag, append_files, contract_status, 
      chinese_contract_company, foreign_contract_company, 
      company_introduction, company_advantage, 
      project_target, research_content, person_study, 
      result_status, unit_id, country, 
      foreign_money, rmb_money, agreement_start_date, 
      agreement_end_date, secrecy_start_date, secrecy_end_date
      )
    values (#{contractId,jdbcType=VARCHAR}, #{contractNo,jdbcType=VARCHAR}, #{signDate,jdbcType=VARCHAR}, 
      #{signAddress,jdbcType=VARCHAR}, #{projectId,jdbcType=VARCHAR}, #{contractContent,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=VARCHAR}, #{updateTime,jdbcType=VARCHAR}, #{creater,jdbcType=VARCHAR}, 
      #{startDate,jdbcType=VARCHAR}, #{endDate,jdbcType=VARCHAR}, #{secrecyTimes,jdbcType=VARCHAR}, 
      #{dataUuid,jdbcType=VARCHAR}, #{flowAgreementReview,jdbcType=INTEGER}, #{flowTechnologyReview,jdbcType=INTEGER}, 
      #{flowKnowledgeReview,jdbcType=INTEGER}, #{flowComprehensiveReview,jdbcType=INTEGER}, 
      #{delFlag,jdbcType=INTEGER}, #{appendFiles,jdbcType=VARCHAR}, #{contractStatus,jdbcType=INTEGER}, 
      #{chineseContractCompany,jdbcType=VARCHAR}, #{foreignContractCompany,jdbcType=VARCHAR}, 
      #{companyIntroduction,jdbcType=VARCHAR}, #{companyAdvantage,jdbcType=VARCHAR}, 
      #{projectTarget,jdbcType=VARCHAR}, #{researchContent,jdbcType=VARCHAR}, #{personStudy,jdbcType=VARCHAR}, 
      #{resultStatus,jdbcType=VARCHAR}, #{unitId,jdbcType=VARCHAR}, #{country,jdbcType=VARCHAR}, 
      #{foreignMoney,jdbcType=DOUBLE}, #{rmbMoney,jdbcType=DOUBLE}, #{agreementStartDate,jdbcType=VARCHAR}, 
      #{agreementEndDate,jdbcType=VARCHAR}, #{secrecyStartDate,jdbcType=VARCHAR}, #{secrecyEndDate,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pcitc.base.stp.IntlProject.IntlProjectContract">
    insert into intl_project_contract
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="contractId != null">
        contract_id,
      </if>
      <if test="contractNo != null">
        contract_no,
      </if>
      <if test="signDate != null">
        sign_date,
      </if>
      <if test="signAddress != null">
        sign_address,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
      <if test="contractContent != null">
        contract_content,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="creater != null">
        creater,
      </if>
      <if test="startDate != null">
        start_date,
      </if>
      <if test="endDate != null">
        end_date,
      </if>
      <if test="secrecyTimes != null">
        secrecy_times,
      </if>
      <if test="dataUuid != null">
        data_uuid,
      </if>
      <if test="flowAgreementReview != null">
        flow_agreement_review,
      </if>
      <if test="flowTechnologyReview != null">
        flow_technology_review,
      </if>
      <if test="flowKnowledgeReview != null">
        flow_knowledge_review,
      </if>
      <if test="flowComprehensiveReview != null">
        flow_comprehensive_review,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
      <if test="appendFiles != null">
        append_files,
      </if>
      <if test="contractStatus != null">
        contract_status,
      </if>
      <if test="chineseContractCompany != null">
        chinese_contract_company,
      </if>
      <if test="foreignContractCompany != null">
        foreign_contract_company,
      </if>
      <if test="companyIntroduction != null">
        company_introduction,
      </if>
      <if test="companyAdvantage != null">
        company_advantage,
      </if>
      <if test="projectTarget != null">
        project_target,
      </if>
      <if test="researchContent != null">
        research_content,
      </if>
      <if test="personStudy != null">
        person_study,
      </if>
      <if test="resultStatus != null">
        result_status,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="country != null">
        country,
      </if>
      <if test="foreignMoney != null">
        foreign_money,
      </if>
      <if test="rmbMoney != null">
        rmb_money,
      </if>
      <if test="agreementStartDate != null">
        agreement_start_date,
      </if>
      <if test="agreementEndDate != null">
        agreement_end_date,
      </if>
      <if test="secrecyStartDate != null">
        secrecy_start_date,
      </if>
      <if test="secrecyEndDate != null">
        secrecy_end_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="contractId != null">
        #{contractId,jdbcType=VARCHAR},
      </if>
      <if test="contractNo != null">
        #{contractNo,jdbcType=VARCHAR},
      </if>
      <if test="signDate != null">
        #{signDate,jdbcType=VARCHAR},
      </if>
      <if test="signAddress != null">
        #{signAddress,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="contractContent != null">
        #{contractContent,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="creater != null">
        #{creater,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null">
        #{startDate,jdbcType=VARCHAR},
      </if>
      <if test="endDate != null">
        #{endDate,jdbcType=VARCHAR},
      </if>
      <if test="secrecyTimes != null">
        #{secrecyTimes,jdbcType=VARCHAR},
      </if>
      <if test="dataUuid != null">
        #{dataUuid,jdbcType=VARCHAR},
      </if>
      <if test="flowAgreementReview != null">
        #{flowAgreementReview,jdbcType=INTEGER},
      </if>
      <if test="flowTechnologyReview != null">
        #{flowTechnologyReview,jdbcType=INTEGER},
      </if>
      <if test="flowKnowledgeReview != null">
        #{flowKnowledgeReview,jdbcType=INTEGER},
      </if>
      <if test="flowComprehensiveReview != null">
        #{flowComprehensiveReview,jdbcType=INTEGER},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=INTEGER},
      </if>
      <if test="appendFiles != null">
        #{appendFiles,jdbcType=VARCHAR},
      </if>
      <if test="contractStatus != null">
        #{contractStatus,jdbcType=INTEGER},
      </if>
      <if test="chineseContractCompany != null">
        #{chineseContractCompany,jdbcType=VARCHAR},
      </if>
      <if test="foreignContractCompany != null">
        #{foreignContractCompany,jdbcType=VARCHAR},
      </if>
      <if test="companyIntroduction != null">
        #{companyIntroduction,jdbcType=VARCHAR},
      </if>
      <if test="companyAdvantage != null">
        #{companyAdvantage,jdbcType=VARCHAR},
      </if>
      <if test="projectTarget != null">
        #{projectTarget,jdbcType=VARCHAR},
      </if>
      <if test="researchContent != null">
        #{researchContent,jdbcType=VARCHAR},
      </if>
      <if test="personStudy != null">
        #{personStudy,jdbcType=VARCHAR},
      </if>
      <if test="resultStatus != null">
        #{resultStatus,jdbcType=VARCHAR},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=VARCHAR},
      </if>
      <if test="country != null">
        #{country,jdbcType=VARCHAR},
      </if>
      <if test="foreignMoney != null">
        #{foreignMoney,jdbcType=DOUBLE},
      </if>
      <if test="rmbMoney != null">
        #{rmbMoney,jdbcType=DOUBLE},
      </if>
      <if test="agreementStartDate != null">
        #{agreementStartDate,jdbcType=VARCHAR},
      </if>
      <if test="agreementEndDate != null">
        #{agreementEndDate,jdbcType=VARCHAR},
      </if>
      <if test="secrecyStartDate != null">
        #{secrecyStartDate,jdbcType=VARCHAR},
      </if>
      <if test="secrecyEndDate != null">
        #{secrecyEndDate,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pcitc.base.stp.IntlProject.IntlProjectContractExample" resultType="java.lang.Long">
    select count(*) from intl_project_contract
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update intl_project_contract
    <set>
      <if test="record.contractId != null">
        contract_id = #{record.contractId,jdbcType=VARCHAR},
      </if>
      <if test="record.contractNo != null">
        contract_no = #{record.contractNo,jdbcType=VARCHAR},
      </if>
      <if test="record.signDate != null">
        sign_date = #{record.signDate,jdbcType=VARCHAR},
      </if>
      <if test="record.signAddress != null">
        sign_address = #{record.signAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.projectId != null">
        project_id = #{record.projectId,jdbcType=VARCHAR},
      </if>
      <if test="record.contractContent != null">
        contract_content = #{record.contractContent,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=VARCHAR},
      </if>
      <if test="record.creater != null">
        creater = #{record.creater,jdbcType=VARCHAR},
      </if>
      <if test="record.startDate != null">
        start_date = #{record.startDate,jdbcType=VARCHAR},
      </if>
      <if test="record.endDate != null">
        end_date = #{record.endDate,jdbcType=VARCHAR},
      </if>
      <if test="record.secrecyTimes != null">
        secrecy_times = #{record.secrecyTimes,jdbcType=VARCHAR},
      </if>
      <if test="record.dataUuid != null">
        data_uuid = #{record.dataUuid,jdbcType=VARCHAR},
      </if>
      <if test="record.flowAgreementReview != null">
        flow_agreement_review = #{record.flowAgreementReview,jdbcType=INTEGER},
      </if>
      <if test="record.flowTechnologyReview != null">
        flow_technology_review = #{record.flowTechnologyReview,jdbcType=INTEGER},
      </if>
      <if test="record.flowKnowledgeReview != null">
        flow_knowledge_review = #{record.flowKnowledgeReview,jdbcType=INTEGER},
      </if>
      <if test="record.flowComprehensiveReview != null">
        flow_comprehensive_review = #{record.flowComprehensiveReview,jdbcType=INTEGER},
      </if>
      <if test="record.delFlag != null">
        del_flag = #{record.delFlag,jdbcType=INTEGER},
      </if>
      <if test="record.appendFiles != null">
        append_files = #{record.appendFiles,jdbcType=VARCHAR},
      </if>
      <if test="record.contractStatus != null">
        contract_status = #{record.contractStatus,jdbcType=INTEGER},
      </if>
      <if test="record.chineseContractCompany != null">
        chinese_contract_company = #{record.chineseContractCompany,jdbcType=VARCHAR},
      </if>
      <if test="record.foreignContractCompany != null">
        foreign_contract_company = #{record.foreignContractCompany,jdbcType=VARCHAR},
      </if>
      <if test="record.companyIntroduction != null">
        company_introduction = #{record.companyIntroduction,jdbcType=VARCHAR},
      </if>
      <if test="record.companyAdvantage != null">
        company_advantage = #{record.companyAdvantage,jdbcType=VARCHAR},
      </if>
      <if test="record.projectTarget != null">
        project_target = #{record.projectTarget,jdbcType=VARCHAR},
      </if>
      <if test="record.researchContent != null">
        research_content = #{record.researchContent,jdbcType=VARCHAR},
      </if>
      <if test="record.personStudy != null">
        person_study = #{record.personStudy,jdbcType=VARCHAR},
      </if>
      <if test="record.resultStatus != null">
        result_status = #{record.resultStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.unitId != null">
        unit_id = #{record.unitId,jdbcType=VARCHAR},
      </if>
      <if test="record.country != null">
        country = #{record.country,jdbcType=VARCHAR},
      </if>
      <if test="record.foreignMoney != null">
        foreign_money = #{record.foreignMoney,jdbcType=DOUBLE},
      </if>
      <if test="record.rmbMoney != null">
        rmb_money = #{record.rmbMoney,jdbcType=DOUBLE},
      </if>
      <if test="record.agreementStartDate != null">
        agreement_start_date = #{record.agreementStartDate,jdbcType=VARCHAR},
      </if>
      <if test="record.agreementEndDate != null">
        agreement_end_date = #{record.agreementEndDate,jdbcType=VARCHAR},
      </if>
      <if test="record.secrecyStartDate != null">
        secrecy_start_date = #{record.secrecyStartDate,jdbcType=VARCHAR},
      </if>
      <if test="record.secrecyEndDate != null">
        secrecy_end_date = #{record.secrecyEndDate,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update intl_project_contract
    set contract_id = #{record.contractId,jdbcType=VARCHAR},
      contract_no = #{record.contractNo,jdbcType=VARCHAR},
      sign_date = #{record.signDate,jdbcType=VARCHAR},
      sign_address = #{record.signAddress,jdbcType=VARCHAR},
      project_id = #{record.projectId,jdbcType=VARCHAR},
      contract_content = #{record.contractContent,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=VARCHAR},
      creater = #{record.creater,jdbcType=VARCHAR},
      start_date = #{record.startDate,jdbcType=VARCHAR},
      end_date = #{record.endDate,jdbcType=VARCHAR},
      secrecy_times = #{record.secrecyTimes,jdbcType=VARCHAR},
      data_uuid = #{record.dataUuid,jdbcType=VARCHAR},
      flow_agreement_review = #{record.flowAgreementReview,jdbcType=INTEGER},
      flow_technology_review = #{record.flowTechnologyReview,jdbcType=INTEGER},
      flow_knowledge_review = #{record.flowKnowledgeReview,jdbcType=INTEGER},
      flow_comprehensive_review = #{record.flowComprehensiveReview,jdbcType=INTEGER},
      del_flag = #{record.delFlag,jdbcType=INTEGER},
      append_files = #{record.appendFiles,jdbcType=VARCHAR},
      contract_status = #{record.contractStatus,jdbcType=INTEGER},
      chinese_contract_company = #{record.chineseContractCompany,jdbcType=VARCHAR},
      foreign_contract_company = #{record.foreignContractCompany,jdbcType=VARCHAR},
      company_introduction = #{record.companyIntroduction,jdbcType=VARCHAR},
      company_advantage = #{record.companyAdvantage,jdbcType=VARCHAR},
      project_target = #{record.projectTarget,jdbcType=VARCHAR},
      research_content = #{record.researchContent,jdbcType=VARCHAR},
      person_study = #{record.personStudy,jdbcType=VARCHAR},
      result_status = #{record.resultStatus,jdbcType=VARCHAR},
      unit_id = #{record.unitId,jdbcType=VARCHAR},
      country = #{record.country,jdbcType=VARCHAR},
      foreign_money = #{record.foreignMoney,jdbcType=DOUBLE},
      rmb_money = #{record.rmbMoney,jdbcType=DOUBLE},
      agreement_start_date = #{record.agreementStartDate,jdbcType=VARCHAR},
      agreement_end_date = #{record.agreementEndDate,jdbcType=VARCHAR},
      secrecy_start_date = #{record.secrecyStartDate,jdbcType=VARCHAR},
      secrecy_end_date = #{record.secrecyEndDate,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pcitc.base.stp.IntlProject.IntlProjectContract">
    update intl_project_contract
    <set>
      <if test="contractNo != null">
        contract_no = #{contractNo,jdbcType=VARCHAR},
      </if>
      <if test="signDate != null">
        sign_date = #{signDate,jdbcType=VARCHAR},
      </if>
      <if test="signAddress != null">
        sign_address = #{signAddress,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="contractContent != null">
        contract_content = #{contractContent,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="creater != null">
        creater = #{creater,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null">
        start_date = #{startDate,jdbcType=VARCHAR},
      </if>
      <if test="endDate != null">
        end_date = #{endDate,jdbcType=VARCHAR},
      </if>
      <if test="secrecyTimes != null">
        secrecy_times = #{secrecyTimes,jdbcType=VARCHAR},
      </if>
      <if test="dataUuid != null">
        data_uuid = #{dataUuid,jdbcType=VARCHAR},
      </if>
      <if test="flowAgreementReview != null">
        flow_agreement_review = #{flowAgreementReview,jdbcType=INTEGER},
      </if>
      <if test="flowTechnologyReview != null">
        flow_technology_review = #{flowTechnologyReview,jdbcType=INTEGER},
      </if>
      <if test="flowKnowledgeReview != null">
        flow_knowledge_review = #{flowKnowledgeReview,jdbcType=INTEGER},
      </if>
      <if test="flowComprehensiveReview != null">
        flow_comprehensive_review = #{flowComprehensiveReview,jdbcType=INTEGER},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=INTEGER},
      </if>
      <if test="appendFiles != null">
        append_files = #{appendFiles,jdbcType=VARCHAR},
      </if>
      <if test="contractStatus != null">
        contract_status = #{contractStatus,jdbcType=INTEGER},
      </if>
      <if test="chineseContractCompany != null">
        chinese_contract_company = #{chineseContractCompany,jdbcType=VARCHAR},
      </if>
      <if test="foreignContractCompany != null">
        foreign_contract_company = #{foreignContractCompany,jdbcType=VARCHAR},
      </if>
      <if test="companyIntroduction != null">
        company_introduction = #{companyIntroduction,jdbcType=VARCHAR},
      </if>
      <if test="companyAdvantage != null">
        company_advantage = #{companyAdvantage,jdbcType=VARCHAR},
      </if>
      <if test="projectTarget != null">
        project_target = #{projectTarget,jdbcType=VARCHAR},
      </if>
      <if test="researchContent != null">
        research_content = #{researchContent,jdbcType=VARCHAR},
      </if>
      <if test="personStudy != null">
        person_study = #{personStudy,jdbcType=VARCHAR},
      </if>
      <if test="resultStatus != null">
        result_status = #{resultStatus,jdbcType=VARCHAR},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=VARCHAR},
      </if>
      <if test="country != null">
        country = #{country,jdbcType=VARCHAR},
      </if>
      <if test="foreignMoney != null">
        foreign_money = #{foreignMoney,jdbcType=DOUBLE},
      </if>
      <if test="rmbMoney != null">
        rmb_money = #{rmbMoney,jdbcType=DOUBLE},
      </if>
      <if test="agreementStartDate != null">
        agreement_start_date = #{agreementStartDate,jdbcType=VARCHAR},
      </if>
      <if test="agreementEndDate != null">
        agreement_end_date = #{agreementEndDate,jdbcType=VARCHAR},
      </if>
      <if test="secrecyStartDate != null">
        secrecy_start_date = #{secrecyStartDate,jdbcType=VARCHAR},
      </if>
      <if test="secrecyEndDate != null">
        secrecy_end_date = #{secrecyEndDate,jdbcType=VARCHAR},
      </if>
    </set>
    where contract_id = #{contractId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pcitc.base.stp.IntlProject.IntlProjectContract">
    update intl_project_contract
    set contract_no = #{contractNo,jdbcType=VARCHAR},
      sign_date = #{signDate,jdbcType=VARCHAR},
      sign_address = #{signAddress,jdbcType=VARCHAR},
      project_id = #{projectId,jdbcType=VARCHAR},
      contract_content = #{contractContent,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=VARCHAR},
      creater = #{creater,jdbcType=VARCHAR},
      start_date = #{startDate,jdbcType=VARCHAR},
      end_date = #{endDate,jdbcType=VARCHAR},
      secrecy_times = #{secrecyTimes,jdbcType=VARCHAR},
      data_uuid = #{dataUuid,jdbcType=VARCHAR},
      flow_agreement_review = #{flowAgreementReview,jdbcType=INTEGER},
      flow_technology_review = #{flowTechnologyReview,jdbcType=INTEGER},
      flow_knowledge_review = #{flowKnowledgeReview,jdbcType=INTEGER},
      flow_comprehensive_review = #{flowComprehensiveReview,jdbcType=INTEGER},
      del_flag = #{delFlag,jdbcType=INTEGER},
      append_files = #{appendFiles,jdbcType=VARCHAR},
      contract_status = #{contractStatus,jdbcType=INTEGER},
      chinese_contract_company = #{chineseContractCompany,jdbcType=VARCHAR},
      foreign_contract_company = #{foreignContractCompany,jdbcType=VARCHAR},
      company_introduction = #{companyIntroduction,jdbcType=VARCHAR},
      company_advantage = #{companyAdvantage,jdbcType=VARCHAR},
      project_target = #{projectTarget,jdbcType=VARCHAR},
      research_content = #{researchContent,jdbcType=VARCHAR},
      person_study = #{personStudy,jdbcType=VARCHAR},
      result_status = #{resultStatus,jdbcType=VARCHAR},
      unit_id = #{unitId,jdbcType=VARCHAR},
      country = #{country,jdbcType=VARCHAR},
      foreign_money = #{foreignMoney,jdbcType=DOUBLE},
      rmb_money = #{rmbMoney,jdbcType=DOUBLE},
      agreement_start_date = #{agreementStartDate,jdbcType=VARCHAR},
      agreement_end_date = #{agreementEndDate,jdbcType=VARCHAR},
      secrecy_start_date = #{secrecyStartDate,jdbcType=VARCHAR},
      secrecy_end_date = #{secrecyEndDate,jdbcType=VARCHAR}
    where contract_id = #{contractId,jdbcType=VARCHAR}
  </update>
</mapper>