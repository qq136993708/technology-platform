<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pcitc.mapper.budget.BudgetMoneyTotalMapper">
  <resultMap id="BaseResultMap" type="com.pcitc.base.stp.budget.BudgetMoneyTotal">
    <id column="data_id" jdbcType="VARCHAR" property="dataId" />
    <result column="parent_data_id" jdbcType="VARCHAR" property="parentDataId" />
    <result column="nd" jdbcType="VARCHAR" property="nd" />
    <result column="budget_code" jdbcType="VARCHAR" property="budgetCode" />
    <result column="unit_code" jdbcType="VARCHAR" property="unitCode" />
    <result column="show_index" jdbcType="VARCHAR" property="showIndex" />
    <result column="unit_name" jdbcType="VARCHAR" property="unitName" />
    <result column="show_ali" jdbcType="VARCHAR" property="showAli" />
    <result column="zbx_money" jdbcType="VARCHAR" property="zbxMoney" />
    <result column="fyx_money" jdbcType="VARCHAR" property="fyxMoney" />
    <result column="money_level" jdbcType="VARCHAR" property="moneyLevel" />
    <result column="details_name" jdbcType="VARCHAR" property="detailsName" />
    <result column="is_yjy" jdbcType="VARCHAR" property="isYjy" />
    <result column="type_name" jdbcType="VARCHAR" property="typeName" />
    <result column="sheet_flag" jdbcType="VARCHAR" property="sheetFlag" />
    <result column="show_order" jdbcType="VARCHAR" property="showOrder" />
    <result column="no" jdbcType="INTEGER" property="no" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="budget_type" jdbcType="INTEGER" property="budgetType" />
    <result column="budget_info_id" jdbcType="VARCHAR" property="budgetInfoId" />
    <result column="bak1" jdbcType="VARCHAR" property="bak1" />
    <result column="bak2" jdbcType="VARCHAR" property="bak2" />
    <result column="bak3" jdbcType="VARCHAR" property="bak3" />
    <result column="bak4" jdbcType="VARCHAR" property="bak4" />
    <result column="bak5" jdbcType="VARCHAR" property="bak5" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    data_id, parent_data_id, nd, budget_code, unit_code, show_index, unit_name, show_ali, 
    zbx_money, fyx_money, money_level, details_name, is_yjy, type_name, sheet_flag, show_order, 
    no, level, budget_type, budget_info_id, bak1, bak2, bak3, bak4, bak5
  </sql>
  <select id="selectByExample" parameterType="com.pcitc.base.stp.budget.BudgetMoneyTotalExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from out_tem_money_total
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from out_tem_money_total
    where data_id = #{dataId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from out_tem_money_total
    where data_id = #{dataId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.pcitc.base.stp.budget.BudgetMoneyTotalExample">
    delete from out_tem_money_total
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pcitc.base.stp.budget.BudgetMoneyTotal">
    insert into out_tem_money_total (data_id, parent_data_id, nd, 
      budget_code, unit_code, show_index, 
      unit_name, show_ali, zbx_money, 
      fyx_money, money_level, details_name, 
      is_yjy, type_name, sheet_flag, 
      show_order, no, level, 
      budget_type, budget_info_id, bak1, 
      bak2, bak3, bak4, bak5
      )
    values (#{dataId,jdbcType=VARCHAR}, #{parentDataId,jdbcType=VARCHAR}, #{nd,jdbcType=VARCHAR}, 
      #{budgetCode,jdbcType=VARCHAR}, #{unitCode,jdbcType=VARCHAR}, #{showIndex,jdbcType=VARCHAR}, 
      #{unitName,jdbcType=VARCHAR}, #{showAli,jdbcType=VARCHAR}, #{zbxMoney,jdbcType=VARCHAR}, 
      #{fyxMoney,jdbcType=VARCHAR}, #{moneyLevel,jdbcType=VARCHAR}, #{detailsName,jdbcType=VARCHAR}, 
      #{isYjy,jdbcType=VARCHAR}, #{typeName,jdbcType=VARCHAR}, #{sheetFlag,jdbcType=VARCHAR}, 
      #{showOrder,jdbcType=VARCHAR}, #{no,jdbcType=INTEGER}, #{level,jdbcType=INTEGER}, 
      #{budgetType,jdbcType=INTEGER}, #{budgetInfoId,jdbcType=VARCHAR}, #{bak1,jdbcType=VARCHAR}, 
      #{bak2,jdbcType=VARCHAR}, #{bak3,jdbcType=VARCHAR}, #{bak4,jdbcType=VARCHAR}, #{bak5,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pcitc.base.stp.budget.BudgetMoneyTotal">
    insert into out_tem_money_total
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="dataId != null">
        data_id,
      </if>
      <if test="parentDataId != null">
        parent_data_id,
      </if>
      <if test="nd != null">
        nd,
      </if>
      <if test="budgetCode != null">
        budget_code,
      </if>
      <if test="unitCode != null">
        unit_code,
      </if>
      <if test="showIndex != null">
        show_index,
      </if>
      <if test="unitName != null">
        unit_name,
      </if>
      <if test="showAli != null">
        show_ali,
      </if>
      <if test="zbxMoney != null">
        zbx_money,
      </if>
      <if test="fyxMoney != null">
        fyx_money,
      </if>
      <if test="moneyLevel != null">
        money_level,
      </if>
      <if test="detailsName != null">
        details_name,
      </if>
      <if test="isYjy != null">
        is_yjy,
      </if>
      <if test="typeName != null">
        type_name,
      </if>
      <if test="sheetFlag != null">
        sheet_flag,
      </if>
      <if test="showOrder != null">
        show_order,
      </if>
      <if test="no != null">
        no,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="budgetType != null">
        budget_type,
      </if>
      <if test="budgetInfoId != null">
        budget_info_id,
      </if>
      <if test="bak1 != null">
        bak1,
      </if>
      <if test="bak2 != null">
        bak2,
      </if>
      <if test="bak3 != null">
        bak3,
      </if>
      <if test="bak4 != null">
        bak4,
      </if>
      <if test="bak5 != null">
        bak5,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="dataId != null">
        #{dataId,jdbcType=VARCHAR},
      </if>
      <if test="parentDataId != null">
        #{parentDataId,jdbcType=VARCHAR},
      </if>
      <if test="nd != null">
        #{nd,jdbcType=VARCHAR},
      </if>
      <if test="budgetCode != null">
        #{budgetCode,jdbcType=VARCHAR},
      </if>
      <if test="unitCode != null">
        #{unitCode,jdbcType=VARCHAR},
      </if>
      <if test="showIndex != null">
        #{showIndex,jdbcType=VARCHAR},
      </if>
      <if test="unitName != null">
        #{unitName,jdbcType=VARCHAR},
      </if>
      <if test="showAli != null">
        #{showAli,jdbcType=VARCHAR},
      </if>
      <if test="zbxMoney != null">
        #{zbxMoney,jdbcType=VARCHAR},
      </if>
      <if test="fyxMoney != null">
        #{fyxMoney,jdbcType=VARCHAR},
      </if>
      <if test="moneyLevel != null">
        #{moneyLevel,jdbcType=VARCHAR},
      </if>
      <if test="detailsName != null">
        #{detailsName,jdbcType=VARCHAR},
      </if>
      <if test="isYjy != null">
        #{isYjy,jdbcType=VARCHAR},
      </if>
      <if test="typeName != null">
        #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="sheetFlag != null">
        #{sheetFlag,jdbcType=VARCHAR},
      </if>
      <if test="showOrder != null">
        #{showOrder,jdbcType=VARCHAR},
      </if>
      <if test="no != null">
        #{no,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="budgetType != null">
        #{budgetType,jdbcType=INTEGER},
      </if>
      <if test="budgetInfoId != null">
        #{budgetInfoId,jdbcType=VARCHAR},
      </if>
      <if test="bak1 != null">
        #{bak1,jdbcType=VARCHAR},
      </if>
      <if test="bak2 != null">
        #{bak2,jdbcType=VARCHAR},
      </if>
      <if test="bak3 != null">
        #{bak3,jdbcType=VARCHAR},
      </if>
      <if test="bak4 != null">
        #{bak4,jdbcType=VARCHAR},
      </if>
      <if test="bak5 != null">
        #{bak5,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pcitc.base.stp.budget.BudgetMoneyTotalExample" resultType="java.lang.Long">
    select count(*) from out_tem_money_total
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update out_tem_money_total
    <set>
      <if test="record.dataId != null">
        data_id = #{record.dataId,jdbcType=VARCHAR},
      </if>
      <if test="record.parentDataId != null">
        parent_data_id = #{record.parentDataId,jdbcType=VARCHAR},
      </if>
      <if test="record.nd != null">
        nd = #{record.nd,jdbcType=VARCHAR},
      </if>
      <if test="record.budgetCode != null">
        budget_code = #{record.budgetCode,jdbcType=VARCHAR},
      </if>
      <if test="record.unitCode != null">
        unit_code = #{record.unitCode,jdbcType=VARCHAR},
      </if>
      <if test="record.showIndex != null">
        show_index = #{record.showIndex,jdbcType=VARCHAR},
      </if>
      <if test="record.unitName != null">
        unit_name = #{record.unitName,jdbcType=VARCHAR},
      </if>
      <if test="record.showAli != null">
        show_ali = #{record.showAli,jdbcType=VARCHAR},
      </if>
      <if test="record.zbxMoney != null">
        zbx_money = #{record.zbxMoney,jdbcType=VARCHAR},
      </if>
      <if test="record.fyxMoney != null">
        fyx_money = #{record.fyxMoney,jdbcType=VARCHAR},
      </if>
      <if test="record.moneyLevel != null">
        money_level = #{record.moneyLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.detailsName != null">
        details_name = #{record.detailsName,jdbcType=VARCHAR},
      </if>
      <if test="record.isYjy != null">
        is_yjy = #{record.isYjy,jdbcType=VARCHAR},
      </if>
      <if test="record.typeName != null">
        type_name = #{record.typeName,jdbcType=VARCHAR},
      </if>
      <if test="record.sheetFlag != null">
        sheet_flag = #{record.sheetFlag,jdbcType=VARCHAR},
      </if>
      <if test="record.showOrder != null">
        show_order = #{record.showOrder,jdbcType=VARCHAR},
      </if>
      <if test="record.no != null">
        no = #{record.no,jdbcType=INTEGER},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.budgetType != null">
        budget_type = #{record.budgetType,jdbcType=INTEGER},
      </if>
      <if test="record.budgetInfoId != null">
        budget_info_id = #{record.budgetInfoId,jdbcType=VARCHAR},
      </if>
      <if test="record.bak1 != null">
        bak1 = #{record.bak1,jdbcType=VARCHAR},
      </if>
      <if test="record.bak2 != null">
        bak2 = #{record.bak2,jdbcType=VARCHAR},
      </if>
      <if test="record.bak3 != null">
        bak3 = #{record.bak3,jdbcType=VARCHAR},
      </if>
      <if test="record.bak4 != null">
        bak4 = #{record.bak4,jdbcType=VARCHAR},
      </if>
      <if test="record.bak5 != null">
        bak5 = #{record.bak5,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update out_tem_money_total
    set data_id = #{record.dataId,jdbcType=VARCHAR},
      parent_data_id = #{record.parentDataId,jdbcType=VARCHAR},
      nd = #{record.nd,jdbcType=VARCHAR},
      budget_code = #{record.budgetCode,jdbcType=VARCHAR},
      unit_code = #{record.unitCode,jdbcType=VARCHAR},
      show_index = #{record.showIndex,jdbcType=VARCHAR},
      unit_name = #{record.unitName,jdbcType=VARCHAR},
      show_ali = #{record.showAli,jdbcType=VARCHAR},
      zbx_money = #{record.zbxMoney,jdbcType=VARCHAR},
      fyx_money = #{record.fyxMoney,jdbcType=VARCHAR},
      money_level = #{record.moneyLevel,jdbcType=VARCHAR},
      details_name = #{record.detailsName,jdbcType=VARCHAR},
      is_yjy = #{record.isYjy,jdbcType=VARCHAR},
      type_name = #{record.typeName,jdbcType=VARCHAR},
      sheet_flag = #{record.sheetFlag,jdbcType=VARCHAR},
      show_order = #{record.showOrder,jdbcType=VARCHAR},
      no = #{record.no,jdbcType=INTEGER},
      level = #{record.level,jdbcType=INTEGER},
      budget_type = #{record.budgetType,jdbcType=INTEGER},
      budget_info_id = #{record.budgetInfoId,jdbcType=VARCHAR},
      bak1 = #{record.bak1,jdbcType=VARCHAR},
      bak2 = #{record.bak2,jdbcType=VARCHAR},
      bak3 = #{record.bak3,jdbcType=VARCHAR},
      bak4 = #{record.bak4,jdbcType=VARCHAR},
      bak5 = #{record.bak5,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pcitc.base.stp.budget.BudgetMoneyTotal">
    update out_tem_money_total
    <set>
      <if test="parentDataId != null">
        parent_data_id = #{parentDataId,jdbcType=VARCHAR},
      </if>
      <if test="nd != null">
        nd = #{nd,jdbcType=VARCHAR},
      </if>
      <if test="budgetCode != null">
        budget_code = #{budgetCode,jdbcType=VARCHAR},
      </if>
      <if test="unitCode != null">
        unit_code = #{unitCode,jdbcType=VARCHAR},
      </if>
      <if test="showIndex != null">
        show_index = #{showIndex,jdbcType=VARCHAR},
      </if>
      <if test="unitName != null">
        unit_name = #{unitName,jdbcType=VARCHAR},
      </if>
      <if test="showAli != null">
        show_ali = #{showAli,jdbcType=VARCHAR},
      </if>
      <if test="zbxMoney != null">
        zbx_money = #{zbxMoney,jdbcType=VARCHAR},
      </if>
      <if test="fyxMoney != null">
        fyx_money = #{fyxMoney,jdbcType=VARCHAR},
      </if>
      <if test="moneyLevel != null">
        money_level = #{moneyLevel,jdbcType=VARCHAR},
      </if>
      <if test="detailsName != null">
        details_name = #{detailsName,jdbcType=VARCHAR},
      </if>
      <if test="isYjy != null">
        is_yjy = #{isYjy,jdbcType=VARCHAR},
      </if>
      <if test="typeName != null">
        type_name = #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="sheetFlag != null">
        sheet_flag = #{sheetFlag,jdbcType=VARCHAR},
      </if>
      <if test="showOrder != null">
        show_order = #{showOrder,jdbcType=VARCHAR},
      </if>
      <if test="no != null">
        no = #{no,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="budgetType != null">
        budget_type = #{budgetType,jdbcType=INTEGER},
      </if>
      <if test="budgetInfoId != null">
        budget_info_id = #{budgetInfoId,jdbcType=VARCHAR},
      </if>
      <if test="bak1 != null">
        bak1 = #{bak1,jdbcType=VARCHAR},
      </if>
      <if test="bak2 != null">
        bak2 = #{bak2,jdbcType=VARCHAR},
      </if>
      <if test="bak3 != null">
        bak3 = #{bak3,jdbcType=VARCHAR},
      </if>
      <if test="bak4 != null">
        bak4 = #{bak4,jdbcType=VARCHAR},
      </if>
      <if test="bak5 != null">
        bak5 = #{bak5,jdbcType=VARCHAR},
      </if>
    </set>
    where data_id = #{dataId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pcitc.base.stp.budget.BudgetMoneyTotal">
    update out_tem_money_total
    set parent_data_id = #{parentDataId,jdbcType=VARCHAR},
      nd = #{nd,jdbcType=VARCHAR},
      budget_code = #{budgetCode,jdbcType=VARCHAR},
      unit_code = #{unitCode,jdbcType=VARCHAR},
      show_index = #{showIndex,jdbcType=VARCHAR},
      unit_name = #{unitName,jdbcType=VARCHAR},
      show_ali = #{showAli,jdbcType=VARCHAR},
      zbx_money = #{zbxMoney,jdbcType=VARCHAR},
      fyx_money = #{fyxMoney,jdbcType=VARCHAR},
      money_level = #{moneyLevel,jdbcType=VARCHAR},
      details_name = #{detailsName,jdbcType=VARCHAR},
      is_yjy = #{isYjy,jdbcType=VARCHAR},
      type_name = #{typeName,jdbcType=VARCHAR},
      sheet_flag = #{sheetFlag,jdbcType=VARCHAR},
      show_order = #{showOrder,jdbcType=VARCHAR},
      no = #{no,jdbcType=INTEGER},
      level = #{level,jdbcType=INTEGER},
      budget_type = #{budgetType,jdbcType=INTEGER},
      budget_info_id = #{budgetInfoId,jdbcType=VARCHAR},
      bak1 = #{bak1,jdbcType=VARCHAR},
      bak2 = #{bak2,jdbcType=VARCHAR},
      bak3 = #{bak3,jdbcType=VARCHAR},
      bak4 = #{bak4,jdbcType=VARCHAR},
      bak5 = #{bak5,jdbcType=VARCHAR}
    where data_id = #{dataId,jdbcType=VARCHAR}
  </update>
</mapper>