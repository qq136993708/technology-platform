<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pcitc.mapper.budget.BudgetSplitDataMapper">
  <resultMap id="BaseResultMap" type="com.pcitc.base.stp.budget.BudgetSplitData">
    <id column="data_id" jdbcType="VARCHAR" property="dataId" />
    <result column="data_version" jdbcType="VARCHAR" property="dataVersion" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="update_time" jdbcType="VARCHAR" property="updateTime" />
    <result column="organ_id" jdbcType="INTEGER" property="organId" />
    <result column="organ_code" jdbcType="VARCHAR" property="organCode" />
    <result column="nd" jdbcType="VARCHAR" property="nd" />
    <result column="budget_type" jdbcType="INTEGER" property="budgetType" />
    <result column="budget_type_name" jdbcType="VARCHAR" property="budgetTypeName" />
    <result column="split_id" jdbcType="INTEGER" property="splitId" />
    <result column="split_code" jdbcType="VARCHAR" property="splitCode" />
    <result column="total" jdbcType="DOUBLE" property="total" />
    <result column="jz" jdbcType="DOUBLE" property="jz" />
    <result column="xq" jdbcType="DOUBLE" property="xq" />
    <result column="plan" jdbcType="DOUBLE" property="plan" />
    <result column="budget_info_id" jdbcType="VARCHAR" property="budgetInfoId" />
    <result column="del_flag" jdbcType="INTEGER" property="delFlag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    data_id, data_version, create_time, update_time, organ_id, organ_code, nd, budget_type, 
    budget_type_name, split_id, split_code, total, jz, xq, plan, budget_info_id, del_flag
  </sql>
  <select id="selectByExample" parameterType="com.pcitc.base.stp.budget.BudgetSplitDataExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from out_tem_budget_split_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from out_tem_budget_split_data
    where data_id = #{dataId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from out_tem_budget_split_data
    where data_id = #{dataId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.pcitc.base.stp.budget.BudgetSplitDataExample">
    delete from out_tem_budget_split_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pcitc.base.stp.budget.BudgetSplitData">
    insert into out_tem_budget_split_data (data_id, data_version, create_time, 
      update_time, organ_id, organ_code, 
      nd, budget_type, budget_type_name, 
      split_id, split_code, total, 
      jz, xq, plan, budget_info_id, 
      del_flag)
    values (#{dataId,jdbcType=VARCHAR}, #{dataVersion,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=VARCHAR}, #{organId,jdbcType=INTEGER}, #{organCode,jdbcType=VARCHAR}, 
      #{nd,jdbcType=VARCHAR}, #{budgetType,jdbcType=INTEGER}, #{budgetTypeName,jdbcType=VARCHAR}, 
      #{splitId,jdbcType=INTEGER}, #{splitCode,jdbcType=VARCHAR}, #{total,jdbcType=DOUBLE}, 
      #{jz,jdbcType=DOUBLE}, #{xq,jdbcType=DOUBLE}, #{plan,jdbcType=DOUBLE}, #{budgetInfoId,jdbcType=VARCHAR}, 
      #{delFlag,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.pcitc.base.stp.budget.BudgetSplitData">
    insert into out_tem_budget_split_data
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="dataId != null">
        data_id,
      </if>
      <if test="dataVersion != null">
        data_version,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="organId != null">
        organ_id,
      </if>
      <if test="organCode != null">
        organ_code,
      </if>
      <if test="nd != null">
        nd,
      </if>
      <if test="budgetType != null">
        budget_type,
      </if>
      <if test="budgetTypeName != null">
        budget_type_name,
      </if>
      <if test="splitId != null">
        split_id,
      </if>
      <if test="splitCode != null">
        split_code,
      </if>
      <if test="total != null">
        total,
      </if>
      <if test="jz != null">
        jz,
      </if>
      <if test="xq != null">
        xq,
      </if>
      <if test="plan != null">
        plan,
      </if>
      <if test="budgetInfoId != null">
        budget_info_id,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="dataId != null">
        #{dataId,jdbcType=VARCHAR},
      </if>
      <if test="dataVersion != null">
        #{dataVersion,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="organId != null">
        #{organId,jdbcType=INTEGER},
      </if>
      <if test="organCode != null">
        #{organCode,jdbcType=VARCHAR},
      </if>
      <if test="nd != null">
        #{nd,jdbcType=VARCHAR},
      </if>
      <if test="budgetType != null">
        #{budgetType,jdbcType=INTEGER},
      </if>
      <if test="budgetTypeName != null">
        #{budgetTypeName,jdbcType=VARCHAR},
      </if>
      <if test="splitId != null">
        #{splitId,jdbcType=INTEGER},
      </if>
      <if test="splitCode != null">
        #{splitCode,jdbcType=VARCHAR},
      </if>
      <if test="total != null">
        #{total,jdbcType=DOUBLE},
      </if>
      <if test="jz != null">
        #{jz,jdbcType=DOUBLE},
      </if>
      <if test="xq != null">
        #{xq,jdbcType=DOUBLE},
      </if>
      <if test="plan != null">
        #{plan,jdbcType=DOUBLE},
      </if>
      <if test="budgetInfoId != null">
        #{budgetInfoId,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pcitc.base.stp.budget.BudgetSplitDataExample" resultType="java.lang.Long">
    select count(*) from out_tem_budget_split_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update out_tem_budget_split_data
    <set>
      <if test="record.dataId != null">
        data_id = #{record.dataId,jdbcType=VARCHAR},
      </if>
      <if test="record.dataVersion != null">
        data_version = #{record.dataVersion,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=VARCHAR},
      </if>
      <if test="record.organId != null">
        organ_id = #{record.organId,jdbcType=INTEGER},
      </if>
      <if test="record.organCode != null">
        organ_code = #{record.organCode,jdbcType=VARCHAR},
      </if>
      <if test="record.nd != null">
        nd = #{record.nd,jdbcType=VARCHAR},
      </if>
      <if test="record.budgetType != null">
        budget_type = #{record.budgetType,jdbcType=INTEGER},
      </if>
      <if test="record.budgetTypeName != null">
        budget_type_name = #{record.budgetTypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.splitId != null">
        split_id = #{record.splitId,jdbcType=INTEGER},
      </if>
      <if test="record.splitCode != null">
        split_code = #{record.splitCode,jdbcType=VARCHAR},
      </if>
      <if test="record.total != null">
        total = #{record.total,jdbcType=DOUBLE},
      </if>
      <if test="record.jz != null">
        jz = #{record.jz,jdbcType=DOUBLE},
      </if>
      <if test="record.xq != null">
        xq = #{record.xq,jdbcType=DOUBLE},
      </if>
      <if test="record.plan != null">
        plan = #{record.plan,jdbcType=DOUBLE},
      </if>
      <if test="record.budgetInfoId != null">
        budget_info_id = #{record.budgetInfoId,jdbcType=VARCHAR},
      </if>
      <if test="record.delFlag != null">
        del_flag = #{record.delFlag,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update out_tem_budget_split_data
    set data_id = #{record.dataId,jdbcType=VARCHAR},
      data_version = #{record.dataVersion,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=VARCHAR},
      organ_id = #{record.organId,jdbcType=INTEGER},
      organ_code = #{record.organCode,jdbcType=VARCHAR},
      nd = #{record.nd,jdbcType=VARCHAR},
      budget_type = #{record.budgetType,jdbcType=INTEGER},
      budget_type_name = #{record.budgetTypeName,jdbcType=VARCHAR},
      split_id = #{record.splitId,jdbcType=INTEGER},
      split_code = #{record.splitCode,jdbcType=VARCHAR},
      total = #{record.total,jdbcType=DOUBLE},
      jz = #{record.jz,jdbcType=DOUBLE},
      xq = #{record.xq,jdbcType=DOUBLE},
      plan = #{record.plan,jdbcType=DOUBLE},
      budget_info_id = #{record.budgetInfoId,jdbcType=VARCHAR},
      del_flag = #{record.delFlag,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pcitc.base.stp.budget.BudgetSplitData">
    update out_tem_budget_split_data
    <set>
      <if test="dataVersion != null">
        data_version = #{dataVersion,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="organId != null">
        organ_id = #{organId,jdbcType=INTEGER},
      </if>
      <if test="organCode != null">
        organ_code = #{organCode,jdbcType=VARCHAR},
      </if>
      <if test="nd != null">
        nd = #{nd,jdbcType=VARCHAR},
      </if>
      <if test="budgetType != null">
        budget_type = #{budgetType,jdbcType=INTEGER},
      </if>
      <if test="budgetTypeName != null">
        budget_type_name = #{budgetTypeName,jdbcType=VARCHAR},
      </if>
      <if test="splitId != null">
        split_id = #{splitId,jdbcType=INTEGER},
      </if>
      <if test="splitCode != null">
        split_code = #{splitCode,jdbcType=VARCHAR},
      </if>
      <if test="total != null">
        total = #{total,jdbcType=DOUBLE},
      </if>
      <if test="jz != null">
        jz = #{jz,jdbcType=DOUBLE},
      </if>
      <if test="xq != null">
        xq = #{xq,jdbcType=DOUBLE},
      </if>
      <if test="plan != null">
        plan = #{plan,jdbcType=DOUBLE},
      </if>
      <if test="budgetInfoId != null">
        budget_info_id = #{budgetInfoId,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=INTEGER},
      </if>
    </set>
    where data_id = #{dataId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pcitc.base.stp.budget.BudgetSplitData">
    update out_tem_budget_split_data
    set data_version = #{dataVersion,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=VARCHAR},
      organ_id = #{organId,jdbcType=INTEGER},
      organ_code = #{organCode,jdbcType=VARCHAR},
      nd = #{nd,jdbcType=VARCHAR},
      budget_type = #{budgetType,jdbcType=INTEGER},
      budget_type_name = #{budgetTypeName,jdbcType=VARCHAR},
      split_id = #{splitId,jdbcType=INTEGER},
      split_code = #{splitCode,jdbcType=VARCHAR},
      total = #{total,jdbcType=DOUBLE},
      jz = #{jz,jdbcType=DOUBLE},
      xq = #{xq,jdbcType=DOUBLE},
      plan = #{plan,jdbcType=DOUBLE},
      budget_info_id = #{budgetInfoId,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=INTEGER}
    where data_id = #{dataId,jdbcType=VARCHAR}
  </update>
</mapper>